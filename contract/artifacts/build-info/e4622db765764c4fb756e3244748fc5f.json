{"id":"e4622db765764c4fb756e3244748fc5f","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/MantaDao.sol":{"content":"// SPDX-License-Identifier : UNLICENSED\r\npragma solidity ^0.8.9;\r\n\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract MantaDao is AccessControl,ReentrancyGuard {\r\n\r\n    uint256 totalProposals;\r\n    uint256 balance;\r\n    address deployer;\r\n\r\n    uint256 immutable STAKEHOLDER_MIN_CONTRIBUTION = 0.1 ether;\r\n    uint256 immutable MIN_VOTE_PERIOD = 5 minutes;\r\n    bytes32 private immutable COLLABORATOR_ROLE = keccak256(\"collaborator\");\r\n    bytes32 private immutable STAKEHOLDER_ROLE = keccak256(\"stakeholder\");\r\n\r\n    mapping(uint256 => Proposals) private raisedProposals;\r\n    mapping(address => uint256[]) private stakeholderVotes;\r\n    mapping(uint256 => Voted[]) private votedOn;\r\n    mapping(address => uint256) private contributors;\r\n    mapping(address => uint256) private stakeholders;\r\n\r\n      struct Proposals {\r\n        uint256 id;\r\n        uint256 amount;\r\n        uint256 upVote;\r\n        uint256 downVotes;\r\n        uint256 duration;\r\n        string title;\r\n        string description;\r\n        bool paid;\r\n        bool passed;\r\n        address payable beneficiary;\r\n        address propoper;\r\n        address executor;\r\n    }\r\n\r\n     struct Voted {\r\n        address voter;\r\n        uint256 timestamp;\r\n        bool chosen;\r\n    }\r\n\r\n     modifier stakeholderOnly(string memory message) {\r\n        require(hasRole(STAKEHOLDER_ROLE,msg.sender),message);\r\n        _;\r\n    }\r\n    modifier contributorOnly(string memory message){\r\n        require(hasRole(COLLABORATOR_ROLE,msg.sender),message);\r\n        _;\r\n    }\r\n\r\n    modifier onlyDeployer(string memory message) {\r\n        require(msg.sender == deployer,message);\r\n\r\n        _;\r\n    }\r\n\r\n     event ProposalAction(\r\n        address indexed creator,\r\n        bytes32 role,\r\n        string message,\r\n        address indexed beneficiary,\r\n        uint256 amount\r\n    );\r\n\r\n     event VoteAction(\r\n        address indexed creator,\r\n        bytes32 role,\r\n        string message,\r\n        address indexed beneficiary,\r\n        uint256 amount,\r\n        uint256 upVote,\r\n        uint256 downVotes,\r\n        bool chosen\r\n    );\r\n\r\n     constructor(){\r\n        deployer = msg.sender;\r\n    }\r\n\r\n       // proposal creation\r\n    function createProposal (\r\n        string calldata title,\r\n        string calldata description,\r\n        address beneficiary,\r\n        uint256 amount\r\n    )external stakeholderOnly(\"Only stakeholders are allowed to create Proposals\") returns(Proposals memory){\r\n        uint256 currentID = totalProposals++;\r\n        Proposals storage StakeholderProposal = raisedProposals[currentID];\r\n        StakeholderProposal.id = currentID;\r\n        StakeholderProposal.amount = amount;\r\n        StakeholderProposal.title = title;\r\n        StakeholderProposal.description = description;\r\n        StakeholderProposal.beneficiary = payable(beneficiary);\r\n        StakeholderProposal.duration = block.timestamp + MIN_VOTE_PERIOD;\r\n\r\n        emit ProposalAction(\r\n            msg.sender,\r\n            STAKEHOLDER_ROLE,\r\n            'Proposal Raised',\r\n            beneficiary,\r\n            amount\r\n        );\r\n        return StakeholderProposal;\r\n    }\r\n\r\n    \r\n    // voting\r\n    function performVote(uint256 proposalId,bool chosen) external\r\n    stakeholderOnly(\"Only stakeholders can perform voting\")\r\n    returns(Voted memory)\r\n    {\r\n        Proposals storage StakeholderProposal = raisedProposals[proposalId];\r\n        handleVoting(StakeholderProposal);\r\n        if(chosen) StakeholderProposal.upVote++;\r\n        else StakeholderProposal.downVotes++;\r\n\r\n        stakeholderVotes[msg.sender].push(\r\n            StakeholderProposal.id\r\n        );\r\n        votedOn[StakeholderProposal.id].push(\r\n            Voted(\r\n                msg.sender,\r\n                block.timestamp,\r\n                chosen\r\n            )\r\n        );\r\n\r\n        emit VoteAction(\r\n            msg.sender,\r\n            STAKEHOLDER_ROLE,\r\n            \"PROPOSAL VOTE\",\r\n            StakeholderProposal.beneficiary,\r\n            StakeholderProposal.amount,\r\n            StakeholderProposal.upVote,\r\n            StakeholderProposal.downVotes,\r\n            chosen\r\n        );\r\n\r\n        return Voted(\r\n            msg.sender,\r\n            block.timestamp,\r\n            chosen\r\n        );\r\n\r\n    }\r\n\r\n    // handling vote\r\n    function handleVoting(Proposals storage proposal) private {\r\n        if (proposal.passed || proposal.duration <= block.timestamp) {\r\n            proposal.passed = true;\r\n            revert(\"Time has already passed\");\r\n        }\r\n        uint256[] memory tempVotes = stakeholderVotes[msg.sender];\r\n        for (uint256 vote = 0; vote < tempVotes.length; vote++) {\r\n            if (proposal.id == tempVotes[vote])\r\n                revert(\"double voting is not allowed\");\r\n        }\r\n\r\n    }\r\n\r\n     // pay beneficiary\r\n    function payBeneficiary(uint proposalId) external\r\n    stakeholderOnly(\"Only stakeholders can make payment\") onlyDeployer(\"Only deployer can make payment\") nonReentrant() returns(uint256){\r\n        Proposals storage stakeholderProposal = raisedProposals[proposalId];\r\n        require(balance >= stakeholderProposal.amount, \"insufficient fund\");\r\n        if(stakeholderProposal.paid == true) revert(\"payment already made\");\r\n        if(stakeholderProposal.upVote <= stakeholderProposal.downVotes) revert(\"insufficient votes\");\r\n\r\n        pay(stakeholderProposal.amount,stakeholderProposal.beneficiary);\r\n        stakeholderProposal.paid = true;\r\n        stakeholderProposal.executor = msg.sender;\r\n        balance -= stakeholderProposal.amount;\r\n\r\n        emit ProposalAction(\r\n            msg.sender,\r\n            STAKEHOLDER_ROLE,\r\n            \"PAYMENT SUCCESSFULLY MADE!\",\r\n            stakeholderProposal.beneficiary,\r\n            stakeholderProposal.amount\r\n        );\r\n\r\n        return balance;\r\n\r\n    }\r\n\r\n    // paymment functionality\r\n    function pay(uint256 amount,address to) internal returns(bool){\r\n        (bool success,) = payable(to).call{value : amount}(\"\");\r\n        require(success, \"payment failed\");\r\n        return true;\r\n    }\r\n\r\n      // contribution functionality\r\n    function contribute() payable external returns(uint256){\r\n        require(msg.value > 0 ether, \"invalid amount\");\r\n        if (!hasRole(STAKEHOLDER_ROLE, msg.sender)) {\r\n            uint256 totalContributions = contributors[msg.sender] + msg.value;\r\n\r\n            if (totalContributions >= STAKEHOLDER_MIN_CONTRIBUTION) {\r\n                stakeholders[msg.sender] = msg.value;\r\n                contributors[msg.sender] += msg.value;\r\n                _setupRole(STAKEHOLDER_ROLE,msg.sender);\r\n                _setupRole(COLLABORATOR_ROLE, msg.sender);\r\n            }\r\n            else {\r\n                contributors[msg.sender] += msg.value;\r\n                _setupRole(COLLABORATOR_ROLE,msg.sender);\r\n            }\r\n        }\r\n        else{\r\n            stakeholders[msg.sender] += msg.value;\r\n            contributors[msg.sender] += msg.value;\r\n        }\r\n\r\n        balance += msg.value;\r\n        emit ProposalAction(\r\n            msg.sender,\r\n            STAKEHOLDER_ROLE,\r\n            \"CONTRIBUTION SUCCESSFULLY RECEIVED!\",\r\n            address(this),\r\n            msg.value\r\n        );\r\n\r\n\r\n        return balance;\r\n    }\r\n\r\n        // get single proposal\r\n    function getProposals(uint256 proposalID) external view returns(Proposals memory) {\r\n        return raisedProposals[proposalID];\r\n    }\r\n\r\n    // get all proposals\r\n    function getAllProposals() external view returns(Proposals[] memory props){\r\n        props = new Proposals[](totalProposals);\r\n        for (uint i = 0; i < totalProposals; i++) {\r\n            props[i] = raisedProposals[i];\r\n        }\r\n\r\n    }\r\n\r\n    // get a specific proposal votes\r\n    function getProposalVote(uint256 proposalID) external view returns(Voted[] memory){\r\n        return votedOn[proposalID];\r\n    }\r\n\r\n    // get stakeholders votes\r\n    function getStakeholdersVotes() stakeholderOnly(\"Unauthorized\") external view returns(uint256[] memory){\r\n        return stakeholderVotes[msg.sender];\r\n    }\r\n\r\n    // get stakeholders balances\r\n    function getStakeholdersBalances() stakeholderOnly(\"unauthorized\") external view returns(uint256){\r\n        return stakeholders[msg.sender];\r\n\r\n    }\r\n\r\n     // get total balances\r\n    function getTotalBalance() external view returns(uint256){\r\n        return balance;\r\n\r\n    }\r\n\r\n    // check if stakeholder\r\n    function stakeholderStatus() external view returns(bool){\r\n        return stakeholders[msg.sender] > 0;\r\n    }\r\n\r\n    // check if contributor\r\n    function isContributor() external view returns(bool){\r\n        return contributors[msg.sender] > 0;\r\n    }\r\n\r\n    // check contributors balance\r\n    function getContributorsBalance() contributorOnly(\"unathorized\") external view returns(uint256){\r\n        return contributors[msg.sender];\r\n    }\r\n\r\n    function getDeployer()external view returns(address){\r\n        return deployer;\r\n\r\n    }\r\n\r\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/MantaDao.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/MantaDao.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[483],"ERC165":[736],"IAccessControl":[388],"IERC165":[748],"Math":[1614],"SignedMath":[1719],"Strings":[712]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":484,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":713,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":737,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1967:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":483,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1976:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1992:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":736,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,736,748,388,483],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["2122:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[735],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2876:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":735,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$712_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4123:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":686,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$712_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":666,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4026:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4617:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["5003:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nameLocations":["5429:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7324:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7721:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8125:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[]}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[453]},"id":454,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"137:750:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":453,"linearizedBaseContracts":[453],"name":"ReentrancyGuard","nameLocation":"906:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":394,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:2","nodeType":"VariableDeclaration","scope":453,"src":"1676:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":397,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:2","nodeType":"VariableDeclaration","scope":453,"src":"1723:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":399,"mutability":"mutable","name":"_status","nameLocation":"1783:7:2","nodeType":"VariableDeclaration","scope":453,"src":"1767:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":406,"nodeType":"Block","src":"1811:39:2","statements":[{"expression":{"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":402,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":403,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"1831:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":405,"nodeType":"ExpressionStatement","src":"1821:22:2"}]},"id":407,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"1808:2:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"1811:0:2"},"scope":453,"src":"1797:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":417,"nodeType":"Block","src":"2251:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":410,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2261:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"ExpressionStatement","src":"2261:21:2"},{"id":413,"nodeType":"PlaceholderStatement","src":"2292:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":414,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"2303:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"ExpressionStatement","src":"2303:20:2"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"1856:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":418,"name":"nonReentrant","nameLocation":"2236:12:2","nodeType":"ModifierDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"2248:2:2"},"src":"2227:103:2","virtual":false,"visibility":"internal"},{"body":{"id":432,"nodeType":"Block","src":"2375:248:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":423,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2479:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"2460:63:2"},{"expression":{"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":428,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":429,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2608:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":431,"nodeType":"ExpressionStatement","src":"2598:18:2"}]},"id":433,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:2","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"2364:2:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[],"src":"2375:0:2"},"scope":453,"src":"2336:287:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":440,"nodeType":"Block","src":"2667:171:2","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2809:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":437,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2819:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"2809:22:2"}]},"id":441,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:2","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[],"src":"2656:2:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"2667:0:2"},"scope":453,"src":"2629:209:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":451,"nodeType":"Block","src":"3081:43:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":448,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3109:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":446,"id":450,"nodeType":"Return","src":"3091:26:2"}]},"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"2844:168:2","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":452,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:2","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[],"src":"3049:2:2"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":452,"src":"3075:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":444,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:2"},"scope":453,"src":"3017:107:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":454,"src":"888:2238:2","usedErrors":[]}],"src":"112:3015:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[483]},"id":484,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":455,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"126:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":483,"linearizedBaseContracts":[483],"name":"Context","nameLocation":"641:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":464,"nodeType":"Block","src":"717:34:3","statements":[{"expression":{"expression":{"id":461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:3","memberName":"sender","nodeType":"MemberAccess","src":"734:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":460,"id":463,"nodeType":"Return","src":"727:17:3"}]},"id":465,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[],"src":"674:2:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":465,"src":"708:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:3"},"scope":483,"src":"655:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":473,"nodeType":"Block","src":"824:32:3","statements":[{"expression":{"expression":{"id":470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:3","memberName":"data","nodeType":"MemberAccess","src":"841:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":469,"id":472,"nodeType":"Return","src":"834:15:3"}]},"id":474,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:3","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"774:2:3"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"808:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":467,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:3"},"scope":483,"src":"757:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":481,"nodeType":"Block","src":"934:25:3","statements":[{"expression":{"hexValue":"30","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":478,"id":480,"nodeType":"Return","src":"944:8:3"}]},"id":482,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:3","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[],"src":"891:2:3"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"925:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:3"},"scope":483,"src":"862:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":484,"src":"623:338:3","usedErrors":[]}],"src":"101:861:3"},"id":3},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1614],"SignedMath":[1719],"Strings":[712]},"id":713,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":485,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":713,"sourceUnit":1615,"src":"126:25:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":713,"sourceUnit":1720,"src":"152:31:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"185:34:4","text":" @dev String operations."},"fullyImplemented":true,"id":712,"linearizedBaseContracts":[712],"name":"Strings","nameLocation":"228:7:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":491,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:4","nodeType":"VariableDeclaration","scope":712,"src":"242:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":489,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":494,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:4","nodeType":"VariableDeclaration","scope":712,"src":"302:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":492,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":541,"nodeType":"Block","src":"518:625:4","statements":[{"id":540,"nodeType":"UncheckedBlock","src":"528:609:4","statements":[{"assignments":[503],"declarations":[{"constant":false,"id":503,"mutability":"mutable","name":"length","nameLocation":"560:6:4","nodeType":"VariableDeclaration","scope":540,"src":"552:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":510,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"580:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":504,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"569:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1614_$","typeString":"type(library Math)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:4","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1451,"src":"569:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:4"},{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"buffer","nameLocation":"618:6:4","nodeType":"VariableDeclaration","scope":540,"src":"604:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":511,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":517,"initialValue":{"arguments":[{"id":515,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"638:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":513,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:4"},{"assignments":[519],"declarations":[{"constant":false,"id":519,"mutability":"mutable","name":"ptr","nameLocation":"667:3:4","nodeType":"VariableDeclaration","scope":540,"src":"659:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":520,"nodeType":"VariableDeclarationStatement","src":"659:11:4"},{"AST":{"nodeType":"YulBlock","src":"740:67:4","statements":[{"nodeType":"YulAssignment","src":"758:35:4","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:4","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:4"},"nodeType":"YulFunctionCall","src":"777:15:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:4"},"nodeType":"YulFunctionCall","src":"765:28:4"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":512,"isOffset":false,"isSlot":false,"src":"769:6:4","valueSize":1},{"declaration":503,"isOffset":false,"isSlot":false,"src":"785:6:4","valueSize":1},{"declaration":519,"isOffset":false,"isSlot":false,"src":"758:3:4","valueSize":1}],"id":521,"nodeType":"InlineAssembly","src":"731:76:4"},{"body":{"id":536,"nodeType":"Block","src":"833:267:4","statements":[{"expression":{"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:4","subExpression":{"id":523,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"851:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":525,"nodeType":"ExpressionStatement","src":"851:5:4"},{"AST":{"nodeType":"YulBlock","src":"934:84:4","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:4"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:4","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:4"},"nodeType":"YulFunctionCall","src":"974:14:4"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:4"},"nodeType":"YulFunctionCall","src":"969:30:4"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:4"},"nodeType":"YulFunctionCall","src":"956:44:4"},"nodeType":"YulExpressionStatement","src":"956:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":491,"isOffset":false,"isSlot":false,"src":"990:8:4","valueSize":1},{"declaration":519,"isOffset":false,"isSlot":false,"src":"964:3:4","valueSize":1},{"declaration":497,"isOffset":false,"isSlot":false,"src":"978:5:4","valueSize":1}],"id":526,"nodeType":"InlineAssembly","src":"925:93:4"},{"expression":{"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"1035:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":530,"nodeType":"ExpressionStatement","src":"1035:11:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"1068:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":535,"nodeType":"IfStatement","src":"1064:21:4","trueBody":{"id":534,"nodeType":"Break","src":"1080:5:4"}}]},"condition":{"hexValue":"74727565","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":537,"nodeType":"WhileStatement","src":"820:280:4"},{"expression":{"id":538,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"1120:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":501,"id":539,"nodeType":"Return","src":"1113:13:4"}]}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"352:90:4","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:4","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"value","nameLocation":"473:5:4","nodeType":"VariableDeclaration","scope":542,"src":"465:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:4"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":542,"src":"503:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":499,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:4"},"scope":712,"src":"447:696:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":569,"nodeType":"Block","src":"1313:103:4","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"1354:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:4","trueExpression":{"hexValue":"2d","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"1400:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":561,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"1385:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1719_$","typeString":"type(library SignedMath)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:4","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"1385:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":560,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[542,570],"referencedDeclaration":542,"src":"1376:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":552,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":550,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:4","typeDescriptions":{}}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":549,"id":568,"nodeType":"Return","src":"1323:86:4"}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"1149:89:4","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":570,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:4","nodeType":"FunctionDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"value","nameLocation":"1268:5:4","nodeType":"VariableDeclaration","scope":570,"src":"1261:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":544,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:4"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":570,"src":"1298:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":547,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:4"},"scope":712,"src":"1243:173:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":589,"nodeType":"Block","src":"1595:100:4","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"1605:84:4","statements":[{"expression":{"arguments":[{"id":579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1648:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1667:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":580,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1655:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1614_$","typeString":"type(library Math)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:4","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1574,"src":"1655:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[590,666,686],"referencedDeclaration":666,"src":"1636:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":577,"id":587,"nodeType":"Return","src":"1629:49:4"}]}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"1422:94:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":590,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:4","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"value","nameLocation":"1550:5:4","nodeType":"VariableDeclaration","scope":590,"src":"1542:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:4"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":590,"src":"1580:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":575,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:4"},"scope":712,"src":"1521:174:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":665,"nodeType":"Block","src":"1908:347:4","statements":[{"assignments":[601],"declarations":[{"constant":false,"id":601,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:4","nodeType":"VariableDeclaration","scope":665,"src":"1918:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":600,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":610,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":605,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"1954:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":602,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:4"},{"expression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":611,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"1975:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":613,"indexExpression":{"hexValue":"30","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":616,"nodeType":"ExpressionStatement","src":"1975:15:4"},{"expression":{"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":617,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"2000:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":619,"indexExpression":{"hexValue":"31","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":622,"nodeType":"ExpressionStatement","src":"2000:15:4"},{"body":{"id":651,"nodeType":"Block","src":"2070:83:4","statements":[{"expression":{"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":637,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"2084:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":639,"indexExpression":{"id":638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"2091:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":640,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"2096:8:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":644,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"2105:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:4","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":646,"nodeType":"ExpressionStatement","src":"2084:33:4"},{"expression":{"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"2131:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":650,"nodeType":"ExpressionStatement","src":"2131:11:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":631,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"2058:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":652,"initializationExpression":{"assignments":[624],"declarations":[{"constant":false,"id":624,"mutability":"mutable","name":"i","nameLocation":"2038:1:4","nodeType":"VariableDeclaration","scope":652,"src":"2030:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":630,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":626,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"2046:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:4"},"loopExpression":{"expression":{"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:4","subExpression":{"id":634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"2067:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":636,"nodeType":"ExpressionStatement","src":"2065:3:4"},"nodeType":"ForStatement","src":"2025:128:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"2170:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"ExpressionStatement","src":"2162:55:4"},{"expression":{"arguments":[{"id":662,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"2241:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":660,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:4","typeDescriptions":{}}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":599,"id":664,"nodeType":"Return","src":"2227:21:4"}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"1701:112:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":666,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:4","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"value","nameLocation":"1847:5:4","nodeType":"VariableDeclaration","scope":666,"src":"1839:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"length","nameLocation":"1862:6:4","nodeType":"VariableDeclaration","scope":666,"src":"1854:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:4"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":666,"src":"1893:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":597,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:4"},"scope":712,"src":"1818:437:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":685,"nodeType":"Block","src":"2480:76:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":679,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"2525:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":677,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:4","typeDescriptions":{}}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:4","typeDescriptions":{}}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":682,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2533:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":674,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[590,666,686],"referencedDeclaration":666,"src":"2497:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":673,"id":684,"nodeType":"Return","src":"2490:59:4"}]},"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"2261:141:4","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":686,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:4","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"addr","nameLocation":"2436:4:4","nodeType":"VariableDeclaration","scope":686,"src":"2428:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:4"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"2465:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":671,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:4"},"scope":712,"src":"2407:149:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"2711:66:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":699,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"2744:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":697,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:4","typeDescriptions":{}}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":696,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":705,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"2767:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:4","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":702,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":695,"id":709,"nodeType":"Return","src":"2721:49:4"}]},"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"2562:66:4","text":" @dev Returns true if the two strings are equal."},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:4","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"a","nameLocation":"2662:1:4","nodeType":"VariableDeclaration","scope":711,"src":"2648:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":688,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"b","nameLocation":"2679:1:4","nodeType":"VariableDeclaration","scope":711,"src":"2665:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":690,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:4"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"2705:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:4"},"scope":712,"src":"2633:144:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":713,"src":"220:2559:4","usedErrors":[]}],"src":"101:2679:4"},"id":4},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[736],"IERC165":[748]},"id":737,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":714,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":715,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":737,"sourceUnit":749,"src":"124:23:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":717,"name":"IERC165","nameLocations":["754:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":748,"src":"754:7:5"},"id":718,"nodeType":"InheritanceSpecifier","src":"754:7:5"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"149:576:5","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":736,"linearizedBaseContracts":[736,748],"name":"ERC165","nameLocation":"744:6:5","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[747],"body":{"id":734,"nodeType":"Block","src":"920:64:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"937:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":729,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"957:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$748_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$748_$","typeString":"type(contract IERC165)"}],"id":728,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$748","typeString":"type(contract IERC165)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":726,"id":733,"nodeType":"Return","src":"930:47:5"}]},"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"768:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":735,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:5","nodeType":"FunctionDefinition","overrides":{"id":723,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:5"},"parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:5","nodeType":"VariableDeclaration","scope":735,"src":"856:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":720,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:5"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":735,"src":"914:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":724,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:5"},"scope":736,"src":"829:155:5","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":737,"src":"726:260:5","usedErrors":[]}],"src":"99:888:5"},"id":5},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[748]},"id":749,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":738,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"125:279:6","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":748,"linearizedBaseContracts":[748],"name":"IERC165","nameLocation":"415:7:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"429:340:6","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":747,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:6","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:6","nodeType":"VariableDeclaration","scope":747,"src":"801:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":741,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:6"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"844:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":744,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:6"},"scope":748,"src":"774:76:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":749,"src":"405:447:6","usedErrors":[]}],"src":"100:753:6"},"id":6},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1614]},"id":1615,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":750,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"128:73:7","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1614,"linearizedBaseContracts":[1614],"name":"Math","nameLocation":"210:4:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":755,"members":[{"id":752,"name":"Down","nameLocation":"245:4:7","nodeType":"EnumValue","src":"245:4:7"},{"id":753,"name":"Up","nameLocation":"287:2:7","nodeType":"EnumValue","src":"287:2:7"},{"id":754,"name":"Zero","nameLocation":"318:4:7","nodeType":"EnumValue","src":"318:4:7"}],"name":"Rounding","nameLocation":"226:8:7","nodeType":"EnumDefinition","src":"221:122:7"},{"body":{"id":772,"nodeType":"Block","src":"480:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":765,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"497:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":766,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"501:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":769,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"509:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:7","trueExpression":{"id":768,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"505:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":764,"id":771,"nodeType":"Return","src":"490:20:7"}]},"documentation":{"id":756,"nodeType":"StructuredDocumentation","src":"349:59:7","text":" @dev Returns the largest of two numbers."},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:7","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"a","nameLocation":"434:1:7","nodeType":"VariableDeclaration","scope":773,"src":"426:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"b","nameLocation":"445:1:7","nodeType":"VariableDeclaration","scope":773,"src":"437:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:7"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":773,"src":"471:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:7"},"scope":1614,"src":"413:104:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":790,"nodeType":"Block","src":"655:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"672:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":784,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"676:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":787,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"684:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:7","trueExpression":{"id":786,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"680:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":782,"id":789,"nodeType":"Return","src":"665:20:7"}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"523:60:7","text":" @dev Returns the smallest of two numbers."},"id":791,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:7","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"a","nameLocation":"609:1:7","nodeType":"VariableDeclaration","scope":791,"src":"601:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"b","nameLocation":"620:1:7","nodeType":"VariableDeclaration","scope":791,"src":"612:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:7"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"646:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:7"},"scope":1614,"src":"588:104:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":813,"nodeType":"Block","src":"876:82:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"931:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":802,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"935:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":805,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"941:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":806,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"945:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":800,"id":812,"nodeType":"Return","src":"923:28:7"}]},"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"698:102:7","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:7","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"a","nameLocation":"830:1:7","nodeType":"VariableDeclaration","scope":814,"src":"822:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"b","nameLocation":"841:1:7","nodeType":"VariableDeclaration","scope":814,"src":"833:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:7"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"867:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:7"},"scope":1614,"src":"805:153:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":838,"nodeType":"Block","src":"1228:123:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"1316:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"1330:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":832,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1339:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:7","trueExpression":{"hexValue":"30","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":823,"id":837,"nodeType":"Return","src":"1309:35:7"}]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"964:188:7","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":839,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:7","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"a","nameLocation":"1182:1:7","nodeType":"VariableDeclaration","scope":839,"src":"1174:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"b","nameLocation":"1193:1:7","nodeType":"VariableDeclaration","scope":839,"src":"1185:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:7"},"returnParameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":839,"src":"1219:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:7"},"scope":1614,"src":"1157:194:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"1765:4115:7","statements":[{"id":960,"nodeType":"UncheckedBlock","src":"1775:4099:7","statements":[{"assignments":[852],"declarations":[{"constant":false,"id":852,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:7","nodeType":"VariableDeclaration","scope":960,"src":"2096:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":853,"nodeType":"VariableDeclarationStatement","src":"2096:13:7"},{"assignments":[855],"declarations":[{"constant":false,"id":855,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:7","nodeType":"VariableDeclaration","scope":960,"src":"2168:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":856,"nodeType":"VariableDeclarationStatement","src":"2168:13:7"},{"AST":{"nodeType":"YulBlock","src":"2248:157:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:7"},"nodeType":"YulFunctionCall","src":"2289:6:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:7"},"nodeType":"YulFunctionCall","src":"2276:20:7"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:7","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:7"},"nodeType":"YulFunctionCall","src":"2322:9:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:7"}]},{"nodeType":"YulAssignment","src":"2348:43:7","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:7"},"nodeType":"YulFunctionCall","src":"2361:14:7"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:7"},"nodeType":"YulFunctionCall","src":"2377:13:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:7"},"nodeType":"YulFunctionCall","src":"2357:34:7"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":852,"isOffset":false,"isSlot":false,"src":"2313:5:7","valueSize":1},{"declaration":852,"isOffset":false,"isSlot":false,"src":"2369:5:7","valueSize":1},{"declaration":852,"isOffset":false,"isSlot":false,"src":"2384:5:7","valueSize":1},{"declaration":855,"isOffset":false,"isSlot":false,"src":"2348:5:7","valueSize":1},{"declaration":842,"isOffset":false,"isSlot":false,"src":"2283:1:7","valueSize":1},{"declaration":842,"isOffset":false,"isSlot":false,"src":"2326:1:7","valueSize":1},{"declaration":844,"isOffset":false,"isSlot":false,"src":"2286:1:7","valueSize":1},{"declaration":844,"isOffset":false,"isSlot":false,"src":"2329:1:7","valueSize":1}],"id":857,"nodeType":"InlineAssembly","src":"2239:166:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":858,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"2486:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":866,"nodeType":"IfStatement","src":"2482:368:7","trueBody":{"id":865,"nodeType":"Block","src":"2498:352:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":861,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"2816:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":862,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"2824:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":850,"id":864,"nodeType":"Return","src":"2809:26:7"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":868,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"2960:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":869,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"2974:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":873,"nodeType":"ExpressionStatement","src":"2952:53:7"},{"assignments":[875],"declarations":[{"constant":false,"id":875,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:7","nodeType":"VariableDeclaration","scope":960,"src":"3261:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":876,"nodeType":"VariableDeclarationStatement","src":"3261:17:7"},{"AST":{"nodeType":"YulBlock","src":"3301:291:7","statements":[{"nodeType":"YulAssignment","src":"3370:38:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:7"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:7"},"nodeType":"YulFunctionCall","src":"3383:25:7"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:7"}]},{"nodeType":"YulAssignment","src":"3490:41:7","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:7"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:7"},"nodeType":"YulFunctionCall","src":"3510:20:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:7"},"nodeType":"YulFunctionCall","src":"3499:32:7"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:7"}]},{"nodeType":"YulAssignment","src":"3548:30:7","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:7"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:7"},"nodeType":"YulFunctionCall","src":"3557:21:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":846,"isOffset":false,"isSlot":false,"src":"3396:11:7","valueSize":1},{"declaration":852,"isOffset":false,"isSlot":false,"src":"3524:5:7","valueSize":1},{"declaration":852,"isOffset":false,"isSlot":false,"src":"3548:5:7","valueSize":1},{"declaration":852,"isOffset":false,"isSlot":false,"src":"3561:5:7","valueSize":1},{"declaration":855,"isOffset":false,"isSlot":false,"src":"3490:5:7","valueSize":1},{"declaration":855,"isOffset":false,"isSlot":false,"src":"3503:5:7","valueSize":1},{"declaration":875,"isOffset":false,"isSlot":false,"src":"3370:9:7","valueSize":1},{"declaration":875,"isOffset":false,"isSlot":false,"src":"3513:9:7","valueSize":1},{"declaration":875,"isOffset":false,"isSlot":false,"src":"3568:9:7","valueSize":1},{"declaration":842,"isOffset":false,"isSlot":false,"src":"3390:1:7","valueSize":1},{"declaration":844,"isOffset":false,"isSlot":false,"src":"3393:1:7","valueSize":1}],"id":877,"nodeType":"InlineAssembly","src":"3292:300:7"},{"assignments":[879],"declarations":[{"constant":false,"id":879,"mutability":"mutable","name":"twos","nameLocation":"3907:4:7","nodeType":"VariableDeclaration","scope":960,"src":"3899:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":887,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":880,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"3914:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:7","subExpression":{"id":881,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"3930:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:7"},{"AST":{"nodeType":"YulBlock","src":"3969:362:7","statements":[{"nodeType":"YulAssignment","src":"4034:37:7","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:7"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:7"},"nodeType":"YulFunctionCall","src":"4049:22:7"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:7"}]},{"nodeType":"YulAssignment","src":"4138:25:7","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:7"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:7"},"nodeType":"YulFunctionCall","src":"4147:16:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:7"}]},{"nodeType":"YulAssignment","src":"4278:39:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:7","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:7"},"nodeType":"YulFunctionCall","src":"4294:12:7"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:7"},"nodeType":"YulFunctionCall","src":"4290:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:7"},"nodeType":"YulFunctionCall","src":"4286:31:7"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":846,"isOffset":false,"isSlot":false,"src":"4034:11:7","valueSize":1},{"declaration":846,"isOffset":false,"isSlot":false,"src":"4053:11:7","valueSize":1},{"declaration":852,"isOffset":false,"isSlot":false,"src":"4138:5:7","valueSize":1},{"declaration":852,"isOffset":false,"isSlot":false,"src":"4151:5:7","valueSize":1},{"declaration":879,"isOffset":false,"isSlot":false,"src":"4066:4:7","valueSize":1},{"declaration":879,"isOffset":false,"isSlot":false,"src":"4158:4:7","valueSize":1},{"declaration":879,"isOffset":false,"isSlot":false,"src":"4278:4:7","valueSize":1},{"declaration":879,"isOffset":false,"isSlot":false,"src":"4301:4:7","valueSize":1},{"declaration":879,"isOffset":false,"isSlot":false,"src":"4308:4:7","valueSize":1}],"id":888,"nodeType":"InlineAssembly","src":"3960:371:7"},{"expression":{"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":889,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"4397:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":890,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"4406:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":891,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"4414:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":894,"nodeType":"ExpressionStatement","src":"4397:21:7"},{"assignments":[896],"declarations":[{"constant":false,"id":896,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:7","nodeType":"VariableDeclaration","scope":960,"src":"4736:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":903,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":898,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"4759:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:7"},{"expression":{"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":904,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"4992:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":906,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5007:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":907,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5021:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":911,"nodeType":"ExpressionStatement","src":"4992:36:7"},{"expression":{"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":912,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5061:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":914,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5076:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":915,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5090:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":919,"nodeType":"ExpressionStatement","src":"5061:36:7"},{"expression":{"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":920,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5131:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":922,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5146:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":923,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5160:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":927,"nodeType":"ExpressionStatement","src":"5131:36:7"},{"expression":{"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":928,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5201:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":930,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5216:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":931,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5230:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":935,"nodeType":"ExpressionStatement","src":"5201:36:7"},{"expression":{"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":936,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5271:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":938,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5286:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":939,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5300:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":943,"nodeType":"ExpressionStatement","src":"5271:36:7"},{"expression":{"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":944,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":946,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5357:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":947,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5371:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":951,"nodeType":"ExpressionStatement","src":"5342:36:7"},{"expression":{"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"5812:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":953,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"5821:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":954,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5829:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":957,"nodeType":"ExpressionStatement","src":"5812:24:7"},{"expression":{"id":958,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"5857:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":850,"id":959,"nodeType":"Return","src":"5850:13:7"}]}]},"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"1357:305:7","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:7","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"x","nameLocation":"1691:1:7","nodeType":"VariableDeclaration","scope":962,"src":"1683:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"y","nameLocation":"1702:1:7","nodeType":"VariableDeclaration","scope":962,"src":"1694:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:7","nodeType":"VariableDeclaration","scope":962,"src":"1705:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:7"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"result","nameLocation":"1757:6:7","nodeType":"VariableDeclaration","scope":962,"src":"1749:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:7"},"scope":1614,"src":"1667:4213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"6122:189:7","statements":[{"assignments":[978],"declarations":[{"constant":false,"id":978,"mutability":"mutable","name":"result","nameLocation":"6140:6:7","nodeType":"VariableDeclaration","scope":1005,"src":"6132:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":984,"initialValue":{"arguments":[{"id":980,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6156:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":981,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"6159:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":982,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"6162:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":979,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[962,1006],"referencedDeclaration":962,"src":"6149:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":985,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"6188:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":986,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6200:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$755_$","typeString":"type(enum Math.Rounding)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:7","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":753,"src":"6200:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"src":"6188:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":990,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6222:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":991,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"6225:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":992,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"6228:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":989,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:7","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1002,"nodeType":"IfStatement","src":"6184:98:7","trueBody":{"id":1001,"nodeType":"Block","src":"6246:36:7","statements":[{"expression":{"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"6260:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1000,"nodeType":"ExpressionStatement","src":"6260:11:7"}]}},{"expression":{"id":1003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"6298:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":976,"id":1004,"nodeType":"Return","src":"6291:13:7"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"5886:121:7","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:7","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"x","nameLocation":"6036:1:7","nodeType":"VariableDeclaration","scope":1006,"src":"6028:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"y","nameLocation":"6047:1:7","nodeType":"VariableDeclaration","scope":1006,"src":"6039:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:7","nodeType":"VariableDeclaration","scope":1006,"src":"6050:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:7","nodeType":"VariableDeclaration","scope":1006,"src":"6071:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"},"typeName":{"id":971,"nodeType":"UserDefinedTypeName","pathNode":{"id":970,"name":"Rounding","nameLocations":["6071:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"6071:8:7"},"referencedDeclaration":755,"src":"6071:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:7"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1006,"src":"6113:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:7"},"scope":1614,"src":"6012:299:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1117,"nodeType":"Block","src":"6587:1585:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6601:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1020,"nodeType":"IfStatement","src":"6597:45:7","trueBody":{"id":1019,"nodeType":"Block","src":"6609:33:7","statements":[{"expression":{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1013,"id":1018,"nodeType":"Return","src":"6623:8:7"}]}},{"assignments":[1022],"declarations":[{"constant":false,"id":1022,"mutability":"mutable","name":"result","nameLocation":"7329:6:7","nodeType":"VariableDeclaration","scope":1117,"src":"7321:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1031,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1025,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"7349:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1024,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1286,1322],"referencedDeclaration":1286,"src":"7344:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:7"},{"id":1116,"nodeType":"UncheckedBlock","src":"7758:408:7","statements":[{"expression":{"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1032,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7782:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7792:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"7801:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1035,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7805:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1042,"nodeType":"ExpressionStatement","src":"7782:35:7"},{"expression":{"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1043,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7831:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7841:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"7850:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7854:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1053,"nodeType":"ExpressionStatement","src":"7831:35:7"},{"expression":{"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7880:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7890:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1056,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"7899:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7903:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1064,"nodeType":"ExpressionStatement","src":"7880:35:7"},{"expression":{"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1065,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7929:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7939:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1067,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"7948:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7952:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1075,"nodeType":"ExpressionStatement","src":"7929:35:7"},{"expression":{"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7978:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7988:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1078,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"7997:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1079,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8001:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1086,"nodeType":"ExpressionStatement","src":"7978:35:7"},{"expression":{"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8027:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1088,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8037:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1089,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8046:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1090,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8050:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1097,"nodeType":"ExpressionStatement","src":"8027:35:7"},{"expression":{"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8076:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1099,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8086:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1100,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8095:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8099:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1108,"nodeType":"ExpressionStatement","src":"8076:35:7"},{"expression":{"arguments":[{"id":1110,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8136:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8144:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8148:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1109,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"8132:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1013,"id":1115,"nodeType":"Return","src":"8125:30:7"}]}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"6317:208:7","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:7","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"a","nameLocation":"6552:1:7","nodeType":"VariableDeclaration","scope":1118,"src":"6544:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:7"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1118,"src":"6578:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:7"},"scope":1614,"src":"6530:1642:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1153,"nodeType":"Block","src":"8348:161:7","statements":[{"id":1152,"nodeType":"UncheckedBlock","src":"8358:145:7","statements":[{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"result","nameLocation":"8390:6:7","nodeType":"VariableDeclaration","scope":1152,"src":"8382:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1134,"initialValue":{"arguments":[{"id":1132,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"8404:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1131,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1118,1154],"referencedDeclaration":1118,"src":"8399:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8427:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1136,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"8437:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1137,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"8449:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$755_$","typeString":"type(enum Math.Rounding)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:7","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":753,"src":"8449:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"src":"8437:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8464:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8473:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1143,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"8482:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:7","trueExpression":{"hexValue":"31","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1128,"id":1151,"nodeType":"Return","src":"8420:72:7"}]}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"8178:89:7","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:7","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"a","nameLocation":"8294:1:7","nodeType":"VariableDeclaration","scope":1154,"src":"8286:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:7","nodeType":"VariableDeclaration","scope":1154,"src":"8297:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"},"typeName":{"id":1123,"nodeType":"UserDefinedTypeName","pathNode":{"id":1122,"name":"Rounding","nameLocations":["8297:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"8297:8:7"},"referencedDeclaration":755,"src":"8297:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:7"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1154,"src":"8339:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:7"},"scope":1614,"src":"8272:237:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1285,"nodeType":"Block","src":"8694:922:7","statements":[{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"result","nameLocation":"8712:6:7","nodeType":"VariableDeclaration","scope":1285,"src":"8704:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1165,"initialValue":{"hexValue":"30","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:7"},{"id":1282,"nodeType":"UncheckedBlock","src":"8732:855:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"8760:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1180,"nodeType":"IfStatement","src":"8756:99:7","trueBody":{"id":1179,"nodeType":"Block","src":"8778:77:7","statements":[{"expression":{"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"8796:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1174,"nodeType":"ExpressionStatement","src":"8796:13:7"},{"expression":{"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"8827:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1178,"nodeType":"ExpressionStatement","src":"8827:13:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"8872:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1195,"nodeType":"IfStatement","src":"8868:96:7","trueBody":{"id":1194,"nodeType":"Block","src":"8889:75:7","statements":[{"expression":{"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"8907:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1189,"nodeType":"ExpressionStatement","src":"8907:12:7"},{"expression":{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"8937:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1193,"nodeType":"ExpressionStatement","src":"8937:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"8981:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1210,"nodeType":"IfStatement","src":"8977:96:7","trueBody":{"id":1209,"nodeType":"Block","src":"8998:75:7","statements":[{"expression":{"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9016:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1204,"nodeType":"ExpressionStatement","src":"9016:12:7"},{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"9046:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"nodeType":"ExpressionStatement","src":"9046:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9090:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1225,"nodeType":"IfStatement","src":"9086:96:7","trueBody":{"id":1224,"nodeType":"Block","src":"9107:75:7","statements":[{"expression":{"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9125:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1219,"nodeType":"ExpressionStatement","src":"9125:12:7"},{"expression":{"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"9155:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1223,"nodeType":"ExpressionStatement","src":"9155:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9199:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1240,"nodeType":"IfStatement","src":"9195:93:7","trueBody":{"id":1239,"nodeType":"Block","src":"9215:73:7","statements":[{"expression":{"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9233:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1234,"nodeType":"ExpressionStatement","src":"9233:11:7"},{"expression":{"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"9262:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1238,"nodeType":"ExpressionStatement","src":"9262:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9305:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1255,"nodeType":"IfStatement","src":"9301:93:7","trueBody":{"id":1254,"nodeType":"Block","src":"9321:73:7","statements":[{"expression":{"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9339:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"nodeType":"ExpressionStatement","src":"9339:11:7"},{"expression":{"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"9368:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ExpressionStatement","src":"9368:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9411:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1270,"nodeType":"IfStatement","src":"9407:93:7","trueBody":{"id":1269,"nodeType":"Block","src":"9427:73:7","statements":[{"expression":{"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9445:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1264,"nodeType":"ExpressionStatement","src":"9445:11:7"},{"expression":{"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"9474:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1268,"nodeType":"ExpressionStatement","src":"9474:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9517:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1281,"nodeType":"IfStatement","src":"9513:64:7","trueBody":{"id":1280,"nodeType":"Block","src":"9533:44:7","statements":[{"expression":{"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"9551:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1279,"nodeType":"ExpressionStatement","src":"9551:11:7"}]}}]},{"expression":{"id":1283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"9603:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1161,"id":1284,"nodeType":"Return","src":"9596:13:7"}]},"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"8515:113:7","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:7","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"value","nameLocation":"8655:5:7","nodeType":"VariableDeclaration","scope":1286,"src":"8647:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:7"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1286,"src":"8685:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:7"},"scope":1614,"src":"8633:983:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1321,"nodeType":"Block","src":"9849:165:7","statements":[{"id":1320,"nodeType":"UncheckedBlock","src":"9859:149:7","statements":[{"assignments":[1298],"declarations":[{"constant":false,"id":1298,"mutability":"mutable","name":"result","nameLocation":"9891:6:7","nodeType":"VariableDeclaration","scope":1320,"src":"9883:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1302,"initialValue":{"arguments":[{"id":1300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"9905:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1299,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1286,1322],"referencedDeclaration":1286,"src":"9900:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"9932:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1304,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"9942:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1305,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"9954:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$755_$","typeString":"type(enum Math.Rounding)"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:7","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":753,"src":"9954:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"src":"9942:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"9974:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"9983:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:7","trueExpression":{"hexValue":"31","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1296,"id":1319,"nodeType":"Return","src":"9925:72:7"}]}]},"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"9622:142:7","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:7","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"value","nameLocation":"9791:5:7","nodeType":"VariableDeclaration","scope":1322,"src":"9783:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:7","nodeType":"VariableDeclaration","scope":1322,"src":"9798:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"},"typeName":{"id":1291,"nodeType":"UserDefinedTypeName","pathNode":{"id":1290,"name":"Rounding","nameLocations":["9798:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"9798:8:7"},"referencedDeclaration":755,"src":"9798:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:7"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1322,"src":"9840:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:7"},"scope":1614,"src":"9769:245:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1450,"nodeType":"Block","src":"10201:854:7","statements":[{"assignments":[1331],"declarations":[{"constant":false,"id":1331,"mutability":"mutable","name":"result","nameLocation":"10219:6:7","nodeType":"VariableDeclaration","scope":1450,"src":"10211:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1333,"initialValue":{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:7"},{"id":1447,"nodeType":"UncheckedBlock","src":"10239:787:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10267:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1350,"nodeType":"IfStatement","src":"10263:103:7","trueBody":{"id":1349,"nodeType":"Block","src":"10286:80:7","statements":[{"expression":{"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10304:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1344,"nodeType":"ExpressionStatement","src":"10304:17:7"},{"expression":{"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10339:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1348,"nodeType":"ExpressionStatement","src":"10339:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10383:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1367,"nodeType":"IfStatement","src":"10379:103:7","trueBody":{"id":1366,"nodeType":"Block","src":"10402:80:7","statements":[{"expression":{"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10420:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1361,"nodeType":"ExpressionStatement","src":"10420:17:7"},{"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10455:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1365,"nodeType":"ExpressionStatement","src":"10455:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10499:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1384,"nodeType":"IfStatement","src":"10495:103:7","trueBody":{"id":1383,"nodeType":"Block","src":"10518:80:7","statements":[{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10536:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1378,"nodeType":"ExpressionStatement","src":"10536:17:7"},{"expression":{"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1379,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10571:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1382,"nodeType":"ExpressionStatement","src":"10571:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10615:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"10611:100:7","trueBody":{"id":1400,"nodeType":"Block","src":"10633:78:7","statements":[{"expression":{"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10651:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1395,"nodeType":"ExpressionStatement","src":"10651:16:7"},{"expression":{"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1396,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10685:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1399,"nodeType":"ExpressionStatement","src":"10685:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10728:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"10724:100:7","trueBody":{"id":1417,"nodeType":"Block","src":"10746:78:7","statements":[{"expression":{"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10764:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1412,"nodeType":"ExpressionStatement","src":"10764:16:7"},{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1413,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10798:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1416,"nodeType":"ExpressionStatement","src":"10798:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10841:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"IfStatement","src":"10837:100:7","trueBody":{"id":1434,"nodeType":"Block","src":"10859:78:7","statements":[{"expression":{"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10877:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1429,"nodeType":"ExpressionStatement","src":"10877:16:7"},{"expression":{"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1430,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10911:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1433,"nodeType":"ExpressionStatement","src":"10911:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10954:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1446,"nodeType":"IfStatement","src":"10950:66:7","trueBody":{"id":1445,"nodeType":"Block","src":"10972:44:7","statements":[{"expression":{"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10990:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1444,"nodeType":"ExpressionStatement","src":"10990:11:7"}]}}]},{"expression":{"id":1448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"11042:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1329,"id":1449,"nodeType":"Return","src":"11035:13:7"}]},"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"10020:114:7","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:7","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"value","nameLocation":"10162:5:7","nodeType":"VariableDeclaration","scope":1451,"src":"10154:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:7"},"returnParameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"10192:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:7"},"scope":1614,"src":"10139:916:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1486,"nodeType":"Block","src":"11290:167:7","statements":[{"id":1485,"nodeType":"UncheckedBlock","src":"11300:151:7","statements":[{"assignments":[1463],"declarations":[{"constant":false,"id":1463,"mutability":"mutable","name":"result","nameLocation":"11332:6:7","nodeType":"VariableDeclaration","scope":1485,"src":"11324:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1467,"initialValue":{"arguments":[{"id":1465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"11347:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1464,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1451,1487],"referencedDeclaration":1451,"src":"11341:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"11374:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1469,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"11384:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1470,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"11396:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$755_$","typeString":"type(enum Math.Rounding)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:7","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":753,"src":"11396:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"src":"11384:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"11417:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"11426:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:7","trueExpression":{"hexValue":"31","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1461,"id":1484,"nodeType":"Return","src":"11367:73:7"}]}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"11061:143:7","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:7","nodeType":"FunctionDefinition","parameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"value","nameLocation":"11232:5:7","nodeType":"VariableDeclaration","scope":1487,"src":"11224:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1457,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:7","nodeType":"VariableDeclaration","scope":1487,"src":"11239:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"},"typeName":{"id":1456,"nodeType":"UserDefinedTypeName","pathNode":{"id":1455,"name":"Rounding","nameLocations":["11239:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"11239:8:7"},"referencedDeclaration":755,"src":"11239:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:7"},"returnParameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1487,"src":"11281:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:7"},"scope":1614,"src":"11209:248:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"11771:600:7","statements":[{"assignments":[1496],"declarations":[{"constant":false,"id":1496,"mutability":"mutable","name":"result","nameLocation":"11789:6:7","nodeType":"VariableDeclaration","scope":1573,"src":"11781:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1498,"initialValue":{"hexValue":"30","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:7"},{"id":1570,"nodeType":"UncheckedBlock","src":"11809:533:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"11837:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"11833:98:7","trueBody":{"id":1512,"nodeType":"Block","src":"11855:76:7","statements":[{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"11873:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1507,"nodeType":"ExpressionStatement","src":"11873:13:7"},{"expression":{"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"11904:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1511,"nodeType":"ExpressionStatement","src":"11904:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"11948:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1528,"nodeType":"IfStatement","src":"11944:95:7","trueBody":{"id":1527,"nodeType":"Block","src":"11965:74:7","statements":[{"expression":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"11983:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1522,"nodeType":"ExpressionStatement","src":"11983:12:7"},{"expression":{"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"12013:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1526,"nodeType":"ExpressionStatement","src":"12013:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"12056:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1543,"nodeType":"IfStatement","src":"12052:95:7","trueBody":{"id":1542,"nodeType":"Block","src":"12073:74:7","statements":[{"expression":{"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"12091:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1537,"nodeType":"ExpressionStatement","src":"12091:12:7"},{"expression":{"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"12121:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1541,"nodeType":"ExpressionStatement","src":"12121:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"12164:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1558,"nodeType":"IfStatement","src":"12160:95:7","trueBody":{"id":1557,"nodeType":"Block","src":"12181:74:7","statements":[{"expression":{"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"12199:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1552,"nodeType":"ExpressionStatement","src":"12199:12:7"},{"expression":{"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"12229:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1556,"nodeType":"ExpressionStatement","src":"12229:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"12272:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1569,"nodeType":"IfStatement","src":"12268:64:7","trueBody":{"id":1568,"nodeType":"Block","src":"12288:44:7","statements":[{"expression":{"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"12306:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1567,"nodeType":"ExpressionStatement","src":"12306:11:7"}]}}]},{"expression":{"id":1571,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"12358:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1494,"id":1572,"nodeType":"Return","src":"12351:13:7"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"11463:240:7","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:7","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"value","nameLocation":"11732:5:7","nodeType":"VariableDeclaration","scope":1574,"src":"11724:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:7"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"11762:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:7"},"scope":1614,"src":"11708:663:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1612,"nodeType":"Block","src":"12608:174:7","statements":[{"id":1611,"nodeType":"UncheckedBlock","src":"12618:158:7","statements":[{"assignments":[1586],"declarations":[{"constant":false,"id":1586,"mutability":"mutable","name":"result","nameLocation":"12650:6:7","nodeType":"VariableDeclaration","scope":1611,"src":"12642:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1590,"initialValue":{"arguments":[{"id":1588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"12666:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1587,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1574,1613],"referencedDeclaration":1574,"src":"12659:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"12693:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"12703:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1593,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"12715:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$755_$","typeString":"type(enum Math.Rounding)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:7","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":753,"src":"12715:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"src":"12703:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"12736:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"12751:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:7","trueExpression":{"hexValue":"31","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1584,"id":1610,"nodeType":"Return","src":"12686:79:7"}]}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"12377:144:7","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1613,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:7","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"value","nameLocation":"12550:5:7","nodeType":"VariableDeclaration","scope":1613,"src":"12542:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1576,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:7","nodeType":"VariableDeclaration","scope":1613,"src":"12557:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"},"typeName":{"id":1579,"nodeType":"UserDefinedTypeName","pathNode":{"id":1578,"name":"Rounding","nameLocations":["12557:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"12557:8:7"},"referencedDeclaration":755,"src":"12557:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$755","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:7"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1613,"src":"12599:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:7"},"scope":1614,"src":"12526:256:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1615,"src":"202:12582:7","usedErrors":[]}],"src":"103:12682:7"},"id":7},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1719]},"id":1720,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1616,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"134:80:8","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1719,"linearizedBaseContracts":[1719],"name":"SignedMath","nameLocation":"223:10:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1634,"nodeType":"Block","src":"375:37:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1627,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"392:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1628,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"396:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"404:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:8","trueExpression":{"id":1630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"400:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1626,"id":1633,"nodeType":"Return","src":"385:20:8"}]},"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"240:66:8","text":" @dev Returns the largest of two signed numbers."},"id":1635,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:8","nodeType":"FunctionDefinition","parameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"a","nameLocation":"331:1:8","nodeType":"VariableDeclaration","scope":1635,"src":"324:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1619,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"b","nameLocation":"341:1:8","nodeType":"VariableDeclaration","scope":1635,"src":"334:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1621,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:8"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1635,"src":"367:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1624,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:8"},"scope":1719,"src":"311:101:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1652,"nodeType":"Block","src":"554:37:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1645,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"571:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1646,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"575:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1649,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"583:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:8","trueExpression":{"id":1648,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"579:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1644,"id":1651,"nodeType":"Return","src":"564:20:8"}]},"documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"418:67:8","text":" @dev Returns the smallest of two signed numbers."},"id":1653,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:8","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"a","nameLocation":"510:1:8","nodeType":"VariableDeclaration","scope":1653,"src":"503:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1637,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"b","nameLocation":"520:1:8","nodeType":"VariableDeclaration","scope":1653,"src":"513:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1639,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:8"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1653,"src":"546:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1642,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:8"},"scope":1719,"src":"490:101:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"796:162:8","statements":[{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"x","nameLocation":"865:1:8","nodeType":"VariableDeclaration","scope":1696,"src":"858:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1663,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1677,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1665,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"870:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1666,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"874:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"881:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1670,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"885:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:8"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1678,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"910:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1683,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"930:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:8","typeDescriptions":{}}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1679,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:8","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"944:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"948:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1662,"id":1695,"nodeType":"Return","src":"903:48:8"}]},"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"597:126:8","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:8","nodeType":"FunctionDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"a","nameLocation":"752:1:8","nodeType":"VariableDeclaration","scope":1697,"src":"745:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1655,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"b","nameLocation":"762:1:8","nodeType":"VariableDeclaration","scope":1697,"src":"755:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1657,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:8"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"788:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1660,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:8"},"scope":1719,"src":"728:230:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"1102:158:8","statements":[{"id":1716,"nodeType":"UncheckedBlock","src":"1112:142:8","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1707,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"1227:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:8","subExpression":{"id":1711,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"1241:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:8","trueExpression":{"id":1710,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"1236:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:8","typeDescriptions":{}}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1704,"id":1715,"nodeType":"Return","src":"1212:31:8"}]}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"964:78:8","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:8","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"n","nameLocation":"1067:1:8","nodeType":"VariableDeclaration","scope":1718,"src":"1060:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1699,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:8"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1718,"src":"1093:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:8"},"scope":1719,"src":"1047:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1720,"src":"215:1047:8","usedErrors":[]}],"src":"109:1154:8"},"id":8},"contracts/MantaDao.sol":{"ast":{"absolutePath":"contracts/MantaDao.sol","exportedSymbols":{"AccessControl":[315],"Context":[483],"ERC165":[736],"IAccessControl":[388],"IERC165":[748],"MantaDao":[2500],"Math":[1614],"ReentrancyGuard":[453],"SignedMath":[1719],"Strings":[712]},"id":2501,"nodeType":"SourceUnit","nodes":[{"id":1721,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"41:23:9"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":1722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2501,"sourceUnit":316,"src":"70:58:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":1723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2501,"sourceUnit":454,"src":"130:62:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1724,"name":"AccessControl","nameLocations":["217:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"217:13:9"},"id":1725,"nodeType":"InheritanceSpecifier","src":"217:13:9"},{"baseName":{"id":1726,"name":"ReentrancyGuard","nameLocations":["231:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":453,"src":"231:15:9"},"id":1727,"nodeType":"InheritanceSpecifier","src":"231:15:9"}],"canonicalName":"MantaDao","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2500,"linearizedBaseContracts":[2500,453,315,736,748,388,483],"name":"MantaDao","nameLocation":"205:8:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1729,"mutability":"mutable","name":"totalProposals","nameLocation":"264:14:9","nodeType":"VariableDeclaration","scope":2500,"src":"256:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"256:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1731,"mutability":"mutable","name":"balance","nameLocation":"293:7:9","nodeType":"VariableDeclaration","scope":2500,"src":"285:15:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1730,"name":"uint256","nodeType":"ElementaryTypeName","src":"285:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1733,"mutability":"mutable","name":"deployer","nameLocation":"315:8:9","nodeType":"VariableDeclaration","scope":2500,"src":"307:16:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"307:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"immutable","name":"STAKEHOLDER_MIN_CONTRIBUTION","nameLocation":"350:28:9","nodeType":"VariableDeclaration","scope":2500,"src":"332:58:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"332:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e31","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"381:9:9","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"0.1"},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"immutable","name":"MIN_VOTE_PERIOD","nameLocation":"415:15:9","nodeType":"VariableDeclaration","scope":2500,"src":"397:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"433:9:9","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"immutable","name":"COLLABORATOR_ROLE","nameLocation":"475:17:9","nodeType":"VariableDeclaration","scope":2500,"src":"449:71:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"449:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"636f6c6c61626f7261746f72","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"505:14:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3cd73767648ee32815639d235132b56387142ddb995e593e7f0b0db442a7d48","typeString":"literal_string \"collaborator\""},"value":"collaborator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3cd73767648ee32815639d235132b56387142ddb995e593e7f0b0db442a7d48","typeString":"literal_string \"collaborator\""}],"id":1741,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"495:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"495:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1749,"mutability":"immutable","name":"STAKEHOLDER_ROLE","nameLocation":"553:16:9","nodeType":"VariableDeclaration","scope":2500,"src":"527:69:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"527:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"7374616b65686f6c646572","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"582:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_193aaa92f8a12e564bc860f8d10b1c1f937927ff6a6e804d359875acec3e5a5a","typeString":"literal_string \"stakeholder\""},"value":"stakeholder"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_193aaa92f8a12e564bc860f8d10b1c1f937927ff6a6e804d359875acec3e5a5a","typeString":"literal_string \"stakeholder\""}],"id":1746,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"572:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"572:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1754,"mutability":"mutable","name":"raisedProposals","nameLocation":"643:15:9","nodeType":"VariableDeclaration","scope":2500,"src":"605:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposals_$1798_storage_$","typeString":"mapping(uint256 => struct MantaDao.Proposals)"},"typeName":{"id":1753,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"605:29:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposals_$1798_storage_$","typeString":"mapping(uint256 => struct MantaDao.Proposals)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1752,"nodeType":"UserDefinedTypeName","pathNode":{"id":1751,"name":"Proposals","nameLocations":["624:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1798,"src":"624:9:9"},"referencedDeclaration":1798,"src":"624:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"}}},"visibility":"private"},{"constant":false,"id":1759,"mutability":"mutable","name":"stakeholderVotes","nameLocation":"703:16:9","nodeType":"VariableDeclaration","scope":2500,"src":"665:54:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":1758,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"673:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"665:29:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1757,"nodeType":"ArrayTypeName","src":"684:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"private"},{"constant":false,"id":1765,"mutability":"mutable","name":"votedOn","nameLocation":"762:7:9","nodeType":"VariableDeclaration","scope":2500,"src":"726:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Voted_$1805_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MantaDao.Voted[])"},"typeName":{"id":1764,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"726:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Voted_$1805_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MantaDao.Voted[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1762,"nodeType":"UserDefinedTypeName","pathNode":{"id":1761,"name":"Voted","nameLocations":["745:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1805,"src":"745:5:9"},"referencedDeclaration":1805,"src":"745:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voted_$1805_storage_ptr","typeString":"struct MantaDao.Voted"}},"id":1763,"nodeType":"ArrayTypeName","src":"745:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Voted_$1805_storage_$dyn_storage_ptr","typeString":"struct MantaDao.Voted[]"}}},"visibility":"private"},{"constant":false,"id":1769,"mutability":"mutable","name":"contributors","nameLocation":"812:12:9","nodeType":"VariableDeclaration","scope":2500,"src":"776:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1768,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1766,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"776:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1773,"mutability":"mutable","name":"stakeholders","nameLocation":"867:12:9","nodeType":"VariableDeclaration","scope":2500,"src":"831:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1772,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"831:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"850:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"canonicalName":"MantaDao.Proposals","id":1798,"members":[{"constant":false,"id":1775,"mutability":"mutable","name":"id","nameLocation":"926:2:9","nodeType":"VariableDeclaration","scope":1798,"src":"918:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1777,"mutability":"mutable","name":"amount","nameLocation":"947:6:9","nodeType":"VariableDeclaration","scope":1798,"src":"939:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"upVote","nameLocation":"972:6:9","nodeType":"VariableDeclaration","scope":1798,"src":"964:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"downVotes","nameLocation":"997:9:9","nodeType":"VariableDeclaration","scope":1798,"src":"989:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"duration","nameLocation":"1025:8:9","nodeType":"VariableDeclaration","scope":1798,"src":"1017:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1017:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"title","nameLocation":"1051:5:9","nodeType":"VariableDeclaration","scope":1798,"src":"1044:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1784,"name":"string","nodeType":"ElementaryTypeName","src":"1044:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1787,"mutability":"mutable","name":"description","nameLocation":"1074:11:9","nodeType":"VariableDeclaration","scope":1798,"src":"1067:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1786,"name":"string","nodeType":"ElementaryTypeName","src":"1067:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"paid","nameLocation":"1101:4:9","nodeType":"VariableDeclaration","scope":1798,"src":"1096:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1788,"name":"bool","nodeType":"ElementaryTypeName","src":"1096:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1791,"mutability":"mutable","name":"passed","nameLocation":"1121:6:9","nodeType":"VariableDeclaration","scope":1798,"src":"1116:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1790,"name":"bool","nodeType":"ElementaryTypeName","src":"1116:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"beneficiary","nameLocation":"1154:11:9","nodeType":"VariableDeclaration","scope":1798,"src":"1138:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"1138:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"propoper","nameLocation":"1184:8:9","nodeType":"VariableDeclaration","scope":1798,"src":"1176:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"1176:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"executor","nameLocation":"1211:8:9","nodeType":"VariableDeclaration","scope":1798,"src":"1203:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Proposals","nameLocation":"897:9:9","nodeType":"StructDefinition","scope":2500,"src":"890:337:9","visibility":"public"},{"canonicalName":"MantaDao.Voted","id":1805,"members":[{"constant":false,"id":1800,"mutability":"mutable","name":"voter","nameLocation":"1268:5:9","nodeType":"VariableDeclaration","scope":1805,"src":"1260:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"timestamp","nameLocation":"1292:9:9","nodeType":"VariableDeclaration","scope":1805,"src":"1284:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"1284:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"chosen","nameLocation":"1317:6:9","nodeType":"VariableDeclaration","scope":1805,"src":"1312:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1803,"name":"bool","nodeType":"ElementaryTypeName","src":"1312:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Voted","nameLocation":"1243:5:9","nodeType":"StructDefinition","scope":2500,"src":"1236:95:9","visibility":"public"},{"body":{"id":1819,"nodeType":"Block","src":"1388:84:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1811,"name":"STAKEHOLDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"1415:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1432:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1436:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1432:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1810,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1407:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1407:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1815,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"1444:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1809,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1399:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1817,"nodeType":"ExpressionStatement","src":"1399:53:9"},{"id":1818,"nodeType":"PlaceholderStatement","src":"1463:1:9"}]},"id":1820,"name":"stakeholderOnly","nameLocation":"1349:15:9","nodeType":"ModifierDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"message","nameLocation":"1379:7:9","nodeType":"VariableDeclaration","scope":1820,"src":"1365:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1806,"name":"string","nodeType":"ElementaryTypeName","src":"1365:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1364:23:9"},"src":"1340:132:9","virtual":false,"visibility":"internal"},{"body":{"id":1834,"nodeType":"Block","src":"1525:85:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1826,"name":"COLLABORATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1552:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1827,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1570:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1574:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1570:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1825,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1544:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1544:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1830,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"1582:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1536:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1832,"nodeType":"ExpressionStatement","src":"1536:54:9"},{"id":1833,"nodeType":"PlaceholderStatement","src":"1601:1:9"}]},"id":1835,"name":"contributorOnly","nameLocation":"1487:15:9","nodeType":"ModifierDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"message","nameLocation":"1517:7:9","nodeType":"VariableDeclaration","scope":1835,"src":"1503:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1821,"name":"string","nodeType":"ElementaryTypeName","src":"1503:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1502:23:9"},"src":"1478:132:9","virtual":false,"visibility":"internal"},{"body":{"id":1848,"nodeType":"Block","src":"1663:72:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1840,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1682:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1682:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1842,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"1696:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1682:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1844,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"1705:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1674:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1674:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"ExpressionStatement","src":"1674:39:9"},{"id":1847,"nodeType":"PlaceholderStatement","src":"1726:1:9"}]},"id":1849,"name":"onlyDeployer","nameLocation":"1627:12:9","nodeType":"ModifierDefinition","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"message","nameLocation":"1654:7:9","nodeType":"VariableDeclaration","scope":1849,"src":"1640:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1836,"name":"string","nodeType":"ElementaryTypeName","src":"1640:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1639:23:9"},"src":"1618:117:9","virtual":false,"visibility":"internal"},{"anonymous":false,"eventSelector":"73a1cb60f50f2e728bc99e4885df312cacdf69558d195a114a0e37d2836696a3","id":1861,"name":"ProposalAction","nameLocation":"1750:14:9","nodeType":"EventDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1791:7:9","nodeType":"VariableDeclaration","scope":1861,"src":"1775:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"1817:4:9","nodeType":"VariableDeclaration","scope":1861,"src":"1809:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1809:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1855,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"1839:7:9","nodeType":"VariableDeclaration","scope":1861,"src":"1832:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1854,"name":"string","nodeType":"ElementaryTypeName","src":"1832:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1857,"indexed":true,"mutability":"mutable","name":"beneficiary","nameLocation":"1873:11:9","nodeType":"VariableDeclaration","scope":1861,"src":"1857:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"1857:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1859,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1903:6:9","nodeType":"VariableDeclaration","scope":1861,"src":"1895:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1895:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1764:152:9"},"src":"1744:173:9"},{"anonymous":false,"eventSelector":"547e0c985508bf44e88e036a89b60fb24d98f87250028cb1b4f9991ab734e695","id":1879,"name":"VoteAction","nameLocation":"1932:10:9","nodeType":"EventDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1969:7:9","nodeType":"VariableDeclaration","scope":1879,"src":"1953:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1862,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1865,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"1995:4:9","nodeType":"VariableDeclaration","scope":1879,"src":"1987:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1987:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1867,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"2017:7:9","nodeType":"VariableDeclaration","scope":1879,"src":"2010:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1866,"name":"string","nodeType":"ElementaryTypeName","src":"2010:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1869,"indexed":true,"mutability":"mutable","name":"beneficiary","nameLocation":"2051:11:9","nodeType":"VariableDeclaration","scope":1879,"src":"2035:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"2035:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1871,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2081:6:9","nodeType":"VariableDeclaration","scope":1879,"src":"2073:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2073:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1873,"indexed":false,"mutability":"mutable","name":"upVote","nameLocation":"2106:6:9","nodeType":"VariableDeclaration","scope":1879,"src":"2098:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2098:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1875,"indexed":false,"mutability":"mutable","name":"downVotes","nameLocation":"2131:9:9","nodeType":"VariableDeclaration","scope":1879,"src":"2123:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1877,"indexed":false,"mutability":"mutable","name":"chosen","nameLocation":"2156:6:9","nodeType":"VariableDeclaration","scope":1879,"src":"2151:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1876,"name":"bool","nodeType":"ElementaryTypeName","src":"2151:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1942:227:9"},"src":"1926:244:9"},{"body":{"id":1887,"nodeType":"Block","src":"2192:40:9","statements":[{"expression":{"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1882,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"2203:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2214:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2218:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2214:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2203:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1886,"nodeType":"ExpressionStatement","src":"2203:21:9"}]},"id":1888,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[],"src":"2190:2:9"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[],"src":"2192:0:9"},"scope":2500,"src":"2179:53:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1970,"nodeType":"Block","src":"2528:678:9","statements":[{"assignments":[1906],"declarations":[{"constant":false,"id":1906,"mutability":"mutable","name":"currentID","nameLocation":"2547:9:9","nodeType":"VariableDeclaration","scope":1970,"src":"2539:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1909,"initialValue":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2559:16:9","subExpression":{"id":1907,"name":"totalProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"2559:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:36:9"},{"assignments":[1912],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"StakeholderProposal","nameLocation":"2604:19:9","nodeType":"VariableDeclaration","scope":1970,"src":"2586:37:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"},"typeName":{"id":1911,"nodeType":"UserDefinedTypeName","pathNode":{"id":1910,"name":"Proposals","nameLocations":["2586:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1798,"src":"2586:9:9"},"referencedDeclaration":1798,"src":"2586:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"}},"visibility":"internal"}],"id":1916,"initialValue":{"baseExpression":{"id":1913,"name":"raisedProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"2626:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposals_$1798_storage_$","typeString":"mapping(uint256 => struct MantaDao.Proposals storage ref)"}},"id":1915,"indexExpression":{"id":1914,"name":"currentID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"2642:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2626:26:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage","typeString":"struct MantaDao.Proposals storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2586:66:9"},{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1917,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"2663:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":1919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2683:2:9","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1775,"src":"2663:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1920,"name":"currentID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"2688:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2663:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1922,"nodeType":"ExpressionStatement","src":"2663:34:9"},{"expression":{"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1923,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"2708:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":1925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2728:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"2708:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1926,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"2737:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2708:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1928,"nodeType":"ExpressionStatement","src":"2708:35:9"},{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1929,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"2754:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":1931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2774:5:9","memberName":"title","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"2754:25:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1932,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"2782:5:9","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"2754:33:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1934,"nodeType":"ExpressionStatement","src":"2754:33:9"},{"expression":{"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1935,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"2798:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":1937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2818:11:9","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"2798:31:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1938,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"2832:11:9","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"2798:45:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1940,"nodeType":"ExpressionStatement","src":"2798:45:9"},{"expression":{"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1941,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"2854:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":1943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2874:11:9","memberName":"beneficiary","nodeType":"MemberAccess","referencedDeclaration":1793,"src":"2854:31:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1946,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"2896:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2888:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"2888:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2888:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2854:54:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1949,"nodeType":"ExpressionStatement","src":"2854:54:9"},{"expression":{"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1950,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"2919:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":1952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2939:8:9","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":1783,"src":"2919:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1953,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2950:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2956:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"2950:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1955,"name":"MIN_VOTE_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2968:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2950:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2919:64:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1958,"nodeType":"ExpressionStatement","src":"2919:64:9"},{"eventCall":{"arguments":[{"expression":{"id":1960,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3030:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3034:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3030:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1962,"name":"STAKEHOLDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"3055:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"50726f706f73616c20526169736564","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3086:17:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c","typeString":"literal_string \"Proposal Raised\""},"value":"Proposal Raised"},{"id":1964,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"3118:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1965,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"3144:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c","typeString":"literal_string \"Proposal Raised\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1959,"name":"ProposalAction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"3001:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,string memory,address,uint256)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:160:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1967,"nodeType":"EmitStatement","src":"2996:165:9"},{"expression":{"id":1968,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"3179:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"functionReturnParameters":1904,"id":1969,"nodeType":"Return","src":"3172:26:9"}]},"functionSelector":"7cdc2eb7","id":1971,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"hexValue":"4f6e6c79207374616b65686f6c646572732061726520616c6c6f77656420746f206372656174652050726f706f73616c73","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2450:51:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d742b4b3be76bf5a3ada422d2b9739ddd19283ceb21e938459bf046bd0acccc5","typeString":"literal_string \"Only stakeholders are allowed to create Proposals\""},"value":"Only stakeholders are allowed to create Proposals"}],"id":1900,"kind":"modifierInvocation","modifierName":{"id":1898,"name":"stakeholderOnly","nameLocations":["2434:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":1820,"src":"2434:15:9"},"nodeType":"ModifierInvocation","src":"2434:68:9"}],"name":"createProposal","nameLocation":"2278:14:9","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"title","nameLocation":"2320:5:9","nodeType":"VariableDeclaration","scope":1971,"src":"2304:21:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1889,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"description","nameLocation":"2352:11:9","nodeType":"VariableDeclaration","scope":1971,"src":"2336:27:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1891,"name":"string","nodeType":"ElementaryTypeName","src":"2336:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1894,"mutability":"mutable","name":"beneficiary","nameLocation":"2382:11:9","nodeType":"VariableDeclaration","scope":1971,"src":"2374:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"2374:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"amount","nameLocation":"2412:6:9","nodeType":"VariableDeclaration","scope":1971,"src":"2404:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2404:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2293:132:9"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1971,"src":"2511:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_memory_ptr","typeString":"struct MantaDao.Proposals"},"typeName":{"id":1902,"nodeType":"UserDefinedTypeName","pathNode":{"id":1901,"name":"Proposals","nameLocations":["2511:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1798,"src":"2511:9:9"},"referencedDeclaration":1798,"src":"2511:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"}},"visibility":"internal"}],"src":"2510:18:9"},"scope":2500,"src":"2269:937:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2054,"nodeType":"Block","src":"3390:934:9","statements":[{"assignments":[1986],"declarations":[{"constant":false,"id":1986,"mutability":"mutable","name":"StakeholderProposal","nameLocation":"3419:19:9","nodeType":"VariableDeclaration","scope":2054,"src":"3401:37:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"},"typeName":{"id":1985,"nodeType":"UserDefinedTypeName","pathNode":{"id":1984,"name":"Proposals","nameLocations":["3401:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1798,"src":"3401:9:9"},"referencedDeclaration":1798,"src":"3401:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"}},"visibility":"internal"}],"id":1990,"initialValue":{"baseExpression":{"id":1987,"name":"raisedProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"3441:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposals_$1798_storage_$","typeString":"mapping(uint256 => struct MantaDao.Proposals storage ref)"}},"id":1989,"indexExpression":{"id":1988,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"3457:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3441:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage","typeString":"struct MantaDao.Proposals storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3401:67:9"},{"expression":{"arguments":[{"id":1992,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"3492:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}],"id":1991,"name":"handleVoting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"3479:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Proposals_$1798_storage_ptr_$returns$__$","typeString":"function (struct MantaDao.Proposals storage pointer)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3479:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1994,"nodeType":"ExpressionStatement","src":"3479:33:9"},{"condition":{"id":1995,"name":"chosen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3526:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3578:31:9","subExpression":{"expression":{"id":2001,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"3578:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3598:9:9","memberName":"downVotes","nodeType":"MemberAccess","referencedDeclaration":1781,"src":"3578:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2005,"nodeType":"ExpressionStatement","src":"3578:31:9"},"id":2006,"nodeType":"IfStatement","src":"3523:86:9","trueBody":{"expression":{"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3534:28:9","subExpression":{"expression":{"id":1996,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"3534:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":1998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3554:6:9","memberName":"upVote","nodeType":"MemberAccess","referencedDeclaration":1779,"src":"3534:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2000,"nodeType":"ExpressionStatement","src":"3534:28:9"}},{"expression":{"arguments":[{"expression":{"id":2012,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"3670:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3690:2:9","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1775,"src":"3670:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2007,"name":"stakeholderVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"3622:16:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":2010,"indexExpression":{"expression":{"id":2008,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3639:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3643:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3639:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3622:28:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3651:4:9","memberName":"push","nodeType":"MemberAccess","src":"3622:33:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2015,"nodeType":"ExpressionStatement","src":"3622:81:9"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2022,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3789:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3793:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3789:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2024,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3818:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3824:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"3818:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2026,"name":"chosen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3852:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2021,"name":"Voted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"3765:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Voted_$1805_storage_ptr_$","typeString":"type(struct MantaDao.Voted storage pointer)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3765:108:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Voted_$1805_memory_ptr","typeString":"struct MantaDao.Voted memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Voted_$1805_memory_ptr","typeString":"struct MantaDao.Voted memory"}],"expression":{"baseExpression":{"id":2016,"name":"votedOn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"3714:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Voted_$1805_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MantaDao.Voted storage ref[] storage ref)"}},"id":2019,"indexExpression":{"expression":{"id":2017,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"3722:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3742:2:9","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1775,"src":"3722:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3714:31:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Voted_$1805_storage_$dyn_storage","typeString":"struct MantaDao.Voted storage ref[] storage ref"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3746:4:9","memberName":"push","nodeType":"MemberAccess","src":"3714:36:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Voted_$1805_storage_$dyn_storage_ptr_$_t_struct$_Voted_$1805_storage_$returns$__$attached_to$_t_array$_t_struct$_Voted_$1805_storage_$dyn_storage_ptr_$","typeString":"function (struct MantaDao.Voted storage ref[] storage pointer,struct MantaDao.Voted storage ref)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3714:170:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2029,"nodeType":"ExpressionStatement","src":"3714:170:9"},{"eventCall":{"arguments":[{"expression":{"id":2031,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3927:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3927:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2033,"name":"STAKEHOLDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"3952:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"50524f504f53414c20564f5445","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3983:15:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db","typeString":"literal_string \"PROPOSAL VOTE\""},"value":"PROPOSAL VOTE"},{"expression":{"id":2035,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"4013:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4033:11:9","memberName":"beneficiary","nodeType":"MemberAccess","referencedDeclaration":1793,"src":"4013:31:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":2037,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"4059:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4079:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"4059:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2039,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"4100:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4120:6:9","memberName":"upVote","nodeType":"MemberAccess","referencedDeclaration":1779,"src":"4100:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2041,"name":"StakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"4141:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4161:9:9","memberName":"downVotes","nodeType":"MemberAccess","referencedDeclaration":1781,"src":"4141:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2043,"name":"chosen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"4185:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db","typeString":"literal_string \"PROPOSAL VOTE\""},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2030,"name":"VoteAction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"3902:10:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,bytes32,string memory,address,uint256,uint256,uint256,bool)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3902:300:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2045,"nodeType":"EmitStatement","src":"3897:305:9"},{"expression":{"arguments":[{"expression":{"id":2047,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4242:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4246:6:9","memberName":"sender","nodeType":"MemberAccess","src":"4242:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2049,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4267:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4273:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"4267:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2051,"name":"chosen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"4297:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2046,"name":"Voted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"4222:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Voted_$1805_storage_ptr_$","typeString":"type(struct MantaDao.Voted storage pointer)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4222:92:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Voted_$1805_memory_ptr","typeString":"struct MantaDao.Voted memory"}},"functionReturnParameters":1983,"id":2053,"nodeType":"Return","src":"4215:99:9"}]},"functionSelector":"b31f111c","id":2055,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"hexValue":"4f6e6c79207374616b65686f6c646572732063616e20706572666f726d20766f74696e67","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3318:38:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_07b8df23b3ec160f44a9a9b5bf707639e22eb37284ff65e761da242073fa1cd6","typeString":"literal_string \"Only stakeholders can perform voting\""},"value":"Only stakeholders can perform voting"}],"id":1979,"kind":"modifierInvocation","modifierName":{"id":1977,"name":"stakeholderOnly","nameLocations":["3302:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":1820,"src":"3302:15:9"},"nodeType":"ModifierInvocation","src":"3302:55:9"}],"name":"performVote","nameLocation":"3244:11:9","nodeType":"FunctionDefinition","parameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"proposalId","nameLocation":"3264:10:9","nodeType":"VariableDeclaration","scope":2055,"src":"3256:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"3256:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"chosen","nameLocation":"3280:6:9","nodeType":"VariableDeclaration","scope":2055,"src":"3275:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1974,"name":"bool","nodeType":"ElementaryTypeName","src":"3275:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3255:32:9"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"3371:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Voted_$1805_memory_ptr","typeString":"struct MantaDao.Voted"},"typeName":{"id":1981,"nodeType":"UserDefinedTypeName","pathNode":{"id":1980,"name":"Voted","nameLocations":["3371:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1805,"src":"3371:5:9"},"referencedDeclaration":1805,"src":"3371:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voted_$1805_storage_ptr","typeString":"struct MantaDao.Voted"}},"visibility":"internal"}],"src":"3370:14:9"},"scope":2500,"src":"3235:1089:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2115,"nodeType":"Block","src":"4412:430:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2061,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"4427:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4436:6:9","memberName":"passed","nodeType":"MemberAccess","referencedDeclaration":1791,"src":"4427:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2063,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"4446:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4455:8:9","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":1783,"src":"4446:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2065,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4467:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4473:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"4467:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4446:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4427:55:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2080,"nodeType":"IfStatement","src":"4423:158:9","trueBody":{"id":2079,"nodeType":"Block","src":"4484:97:9","statements":[{"expression":{"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2069,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"4499:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4508:6:9","memberName":"passed","nodeType":"MemberAccess","referencedDeclaration":1791,"src":"4499:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4517:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4499:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2074,"nodeType":"ExpressionStatement","src":"4499:22:9"},{"expression":{"arguments":[{"hexValue":"54696d652068617320616c726561647920706173736564","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4543:25:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176","typeString":"literal_string \"Time has already passed\""},"value":"Time has already passed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176","typeString":"literal_string \"Time has already passed\""}],"id":2075,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4536:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4536:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2078,"nodeType":"ExpressionStatement","src":"4536:33:9"}]}},{"assignments":[2085],"declarations":[{"constant":false,"id":2085,"mutability":"mutable","name":"tempVotes","nameLocation":"4608:9:9","nodeType":"VariableDeclaration","scope":2115,"src":"4591:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"4591:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2084,"nodeType":"ArrayTypeName","src":"4591:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2090,"initialValue":{"baseExpression":{"id":2086,"name":"stakeholderVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"4620:16:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":2089,"indexExpression":{"expression":{"id":2087,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4637:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4641:6:9","memberName":"sender","nodeType":"MemberAccess","src":"4637:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4620:28:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4591:57:9"},{"body":{"id":2113,"nodeType":"Block","src":"4715:118:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2102,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"4734:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4743:2:9","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1775,"src":"4734:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":2104,"name":"tempVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"4749:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2106,"indexExpression":{"id":2105,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"4759:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4749:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4734:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2112,"nodeType":"IfStatement","src":"4730:91:9","trueBody":{"expression":{"arguments":[{"hexValue":"646f75626c6520766f74696e67206973206e6f7420616c6c6f776564","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4790:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf","typeString":"literal_string \"double voting is not allowed\""},"value":"double voting is not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf","typeString":"literal_string \"double voting is not allowed\""}],"id":2108,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4783:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4783:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2111,"nodeType":"ExpressionStatement","src":"4783:38:9"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2095,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"4682:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2096,"name":"tempVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"4689:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4699:6:9","memberName":"length","nodeType":"MemberAccess","src":"4689:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4682:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2114,"initializationExpression":{"assignments":[2092],"declarations":[{"constant":false,"id":2092,"mutability":"mutable","name":"vote","nameLocation":"4672:4:9","nodeType":"VariableDeclaration","scope":2114,"src":"4664:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"4664:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2094,"initialValue":{"hexValue":"30","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4679:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4664:16:9"},"loopExpression":{"expression":{"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4707:6:9","subExpression":{"id":2099,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"4707:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2101,"nodeType":"ExpressionStatement","src":"4707:6:9"},"nodeType":"ForStatement","src":"4659:174:9"}]},"id":2116,"implemented":true,"kind":"function","modifiers":[],"name":"handleVoting","nameLocation":"4363:12:9","nodeType":"FunctionDefinition","parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"proposal","nameLocation":"4394:8:9","nodeType":"VariableDeclaration","scope":2116,"src":"4376:26:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"},"typeName":{"id":2057,"nodeType":"UserDefinedTypeName","pathNode":{"id":2056,"name":"Proposals","nameLocations":["4376:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1798,"src":"4376:9:9"},"referencedDeclaration":1798,"src":"4376:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"}},"visibility":"internal"}],"src":"4375:28:9"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[],"src":"4412:0:9"},"scope":2500,"src":"4354:488:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2203,"nodeType":"Block","src":"5062:821:9","statements":[{"assignments":[2133],"declarations":[{"constant":false,"id":2133,"mutability":"mutable","name":"stakeholderProposal","nameLocation":"5091:19:9","nodeType":"VariableDeclaration","scope":2203,"src":"5073:37:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"},"typeName":{"id":2132,"nodeType":"UserDefinedTypeName","pathNode":{"id":2131,"name":"Proposals","nameLocations":["5073:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1798,"src":"5073:9:9"},"referencedDeclaration":1798,"src":"5073:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"}},"visibility":"internal"}],"id":2137,"initialValue":{"baseExpression":{"id":2134,"name":"raisedProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"5113:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposals_$1798_storage_$","typeString":"mapping(uint256 => struct MantaDao.Proposals storage ref)"}},"id":2136,"indexExpression":{"id":2135,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"5129:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5113:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage","typeString":"struct MantaDao.Proposals storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5073:67:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"5159:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2140,"name":"stakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5170:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"5170:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5159:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e742066756e64","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5198:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808","typeString":"literal_string \"insufficient fund\""},"value":"insufficient fund"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808","typeString":"literal_string \"insufficient fund\""}],"id":2138,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5151:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5151:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2145,"nodeType":"ExpressionStatement","src":"5151:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2146,"name":"stakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5232:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5252:4:9","memberName":"paid","nodeType":"MemberAccess","referencedDeclaration":1789,"src":"5232:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5260:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5232:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2154,"nodeType":"IfStatement","src":"5229:67:9","trueBody":{"expression":{"arguments":[{"hexValue":"7061796d656e7420616c7265616479206d616465","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5273:22:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42","typeString":"literal_string \"payment already made\""},"value":"payment already made"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42","typeString":"literal_string \"payment already made\""}],"id":2150,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5266:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5266:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2153,"nodeType":"ExpressionStatement","src":"5266:30:9"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2155,"name":"stakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5310:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:9","memberName":"upVote","nodeType":"MemberAccess","referencedDeclaration":1779,"src":"5310:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2157,"name":"stakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5340:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5360:9:9","memberName":"downVotes","nodeType":"MemberAccess","referencedDeclaration":1781,"src":"5340:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5310:59:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2164,"nodeType":"IfStatement","src":"5307:92:9","trueBody":{"expression":{"arguments":[{"hexValue":"696e73756666696369656e7420766f746573","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5378:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3","typeString":"literal_string \"insufficient votes\""},"value":"insufficient votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3","typeString":"literal_string \"insufficient votes\""}],"id":2160,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5371:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5371:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2163,"nodeType":"ExpressionStatement","src":"5371:28:9"}},{"expression":{"arguments":[{"expression":{"id":2166,"name":"stakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5416:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5436:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"5416:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2168,"name":"stakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5443:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5463:11:9","memberName":"beneficiary","nodeType":"MemberAccess","referencedDeclaration":1793,"src":"5443:31:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2165,"name":"pay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"5412:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) returns (bool)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5412:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2171,"nodeType":"ExpressionStatement","src":"5412:63:9"},{"expression":{"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2172,"name":"stakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5486:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5506:4:9","memberName":"paid","nodeType":"MemberAccess","referencedDeclaration":1789,"src":"5486:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5513:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5486:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2177,"nodeType":"ExpressionStatement","src":"5486:31:9"},{"expression":{"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2178,"name":"stakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5528:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5548:8:9","memberName":"executor","nodeType":"MemberAccess","referencedDeclaration":1797,"src":"5528:28:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2181,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5559:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5563:6:9","memberName":"sender","nodeType":"MemberAccess","src":"5559:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5528:41:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2184,"nodeType":"ExpressionStatement","src":"5528:41:9"},{"expression":{"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2185,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"5580:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":2186,"name":"stakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5591:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5611:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"5591:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5580:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2189,"nodeType":"ExpressionStatement","src":"5580:37:9"},{"eventCall":{"arguments":[{"expression":{"id":2191,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5664:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5668:6:9","memberName":"sender","nodeType":"MemberAccess","src":"5664:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2193,"name":"STAKEHOLDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"5689:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"5041594d454e54205355434345535346554c4c59204d41444521","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5720:28:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70","typeString":"literal_string \"PAYMENT SUCCESSFULLY MADE!\""},"value":"PAYMENT SUCCESSFULLY MADE!"},{"expression":{"id":2195,"name":"stakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5763:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5783:11:9","memberName":"beneficiary","nodeType":"MemberAccess","referencedDeclaration":1793,"src":"5763:31:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":2197,"name":"stakeholderProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5809:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals storage pointer"}},"id":2198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5829:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"5809:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70","typeString":"literal_string \"PAYMENT SUCCESSFULLY MADE!\""},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2190,"name":"ProposalAction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"5635:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,string memory,address,uint256)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5635:211:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2200,"nodeType":"EmitStatement","src":"5630:216:9"},{"expression":{"id":2201,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"5866:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2130,"id":2202,"nodeType":"Return","src":"5859:14:9"}]},"functionSelector":"119c37c8","id":2204,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"hexValue":"4f6e6c79207374616b65686f6c646572732063616e206d616b65207061796d656e74","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4946:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_54ff7df470b7f2789cd6dd47d202f0add30de67d0be410cdbd6440914754ef90","typeString":"literal_string \"Only stakeholders can make payment\""},"value":"Only stakeholders can make payment"}],"id":2122,"kind":"modifierInvocation","modifierName":{"id":2120,"name":"stakeholderOnly","nameLocations":["4930:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":1820,"src":"4930:15:9"},"nodeType":"ModifierInvocation","src":"4930:53:9"},{"arguments":[{"hexValue":"4f6e6c79206465706c6f7965722063616e206d616b65207061796d656e74","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4997:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_59a28d42b3242852aedac543c09b9455d59e2edaf78632eb08fa385fb378c363","typeString":"literal_string \"Only deployer can make payment\""},"value":"Only deployer can make payment"}],"id":2125,"kind":"modifierInvocation","modifierName":{"id":2123,"name":"onlyDeployer","nameLocations":["4984:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1849,"src":"4984:12:9"},"nodeType":"ModifierInvocation","src":"4984:46:9"},{"arguments":[],"id":2127,"kind":"modifierInvocation","modifierName":{"id":2126,"name":"nonReentrant","nameLocations":["5031:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"5031:12:9"},"nodeType":"ModifierInvocation","src":"5031:14:9"}],"name":"payBeneficiary","nameLocation":"4884:14:9","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"proposalId","nameLocation":"4904:10:9","nodeType":"VariableDeclaration","scope":2204,"src":"4899:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint","nodeType":"ElementaryTypeName","src":"4899:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4898:17:9"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2204,"src":"5054:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5054:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5053:9:9"},"scope":2500,"src":"4875:1008:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2232,"nodeType":"Block","src":"5984:140:9","statements":[{"assignments":[2214,null],"declarations":[{"constant":false,"id":2214,"mutability":"mutable","name":"success","nameLocation":"6001:7:9","nodeType":"VariableDeclaration","scope":2232,"src":"5996:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2213,"name":"bool","nodeType":"ElementaryTypeName","src":"5996:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2224,"initialValue":{"arguments":[{"hexValue":"","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6046:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":2217,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"6021:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6013:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2215,"name":"address","nodeType":"ElementaryTypeName","src":"6013:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6025:4:9","memberName":"call","nodeType":"MemberAccess","src":"6013:16:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2220,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"6038:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6013:32:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5995:54:9"},{"expression":{"arguments":[{"id":2226,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"6068:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7061796d656e74206661696c6564","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6077:16:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b","typeString":"literal_string \"payment failed\""},"value":"payment failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b","typeString":"literal_string \"payment failed\""}],"id":2225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6060:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6060:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2229,"nodeType":"ExpressionStatement","src":"6060:34:9"},{"expression":{"hexValue":"74727565","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6112:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2212,"id":2231,"nodeType":"Return","src":"6105:11:9"}]},"id":2233,"implemented":true,"kind":"function","modifiers":[],"name":"pay","nameLocation":"5931:3:9","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"amount","nameLocation":"5943:6:9","nodeType":"VariableDeclaration","scope":2233,"src":"5935:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"5935:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2208,"mutability":"mutable","name":"to","nameLocation":"5958:2:9","nodeType":"VariableDeclaration","scope":2233,"src":"5950:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2207,"name":"address","nodeType":"ElementaryTypeName","src":"5950:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5934:27:9"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2233,"src":"5979:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2210,"name":"bool","nodeType":"ElementaryTypeName","src":"5979:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5978:6:9"},"scope":2500,"src":"5922:202:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2349,"nodeType":"Block","src":"6224:1071:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2239,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6243:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6247:5:9","memberName":"value","nodeType":"MemberAccess","src":"6243:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:7:9","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6243:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420616d6f756e74","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6264:16:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7","typeString":"literal_string \"invalid amount\""},"value":"invalid amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7","typeString":"literal_string \"invalid amount\""}],"id":2238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6235:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6235:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2245,"nodeType":"ExpressionStatement","src":"6235:46:9"},{"condition":{"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6296:38:9","subExpression":{"arguments":[{"id":2247,"name":"STAKEHOLDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"6305:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2248,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6323:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6327:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6323:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2246,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"6297:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6297:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2327,"nodeType":"Block","src":"6909:116:9","statements":[{"expression":{"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2311,"name":"stakeholders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"6924:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2314,"indexExpression":{"expression":{"id":2312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6937:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6941:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6937:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6924:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2315,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6952:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6956:5:9","memberName":"value","nodeType":"MemberAccess","src":"6952:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6924:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2318,"nodeType":"ExpressionStatement","src":"6924:37:9"},{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2319,"name":"contributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"6976:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2322,"indexExpression":{"expression":{"id":2320,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6989:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6993:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6989:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6976:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7004:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7008:5:9","memberName":"value","nodeType":"MemberAccess","src":"7004:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6976:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2326,"nodeType":"ExpressionStatement","src":"6976:37:9"}]},"id":2328,"nodeType":"IfStatement","src":"6292:733:9","trueBody":{"id":2310,"nodeType":"Block","src":"6336:559:9","statements":[{"assignments":[2253],"declarations":[{"constant":false,"id":2253,"mutability":"mutable","name":"totalContributions","nameLocation":"6359:18:9","nodeType":"VariableDeclaration","scope":2310,"src":"6351:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"6351:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2261,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2254,"name":"contributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"6380:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2257,"indexExpression":{"expression":{"id":2255,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6393:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6393:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6380:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2258,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6407:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6411:5:9","memberName":"value","nodeType":"MemberAccess","src":"6407:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6380:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6351:65:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"totalContributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"6437:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2263,"name":"STAKEHOLDER_MIN_CONTRIBUTION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"6459:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6437:50:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2308,"nodeType":"Block","src":"6753:131:9","statements":[{"expression":{"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2294,"name":"contributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"6772:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2297,"indexExpression":{"expression":{"id":2295,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6785:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6789:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6785:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6772:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6800:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6804:5:9","memberName":"value","nodeType":"MemberAccess","src":"6800:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6772:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2301,"nodeType":"ExpressionStatement","src":"6772:37:9"},{"expression":{"arguments":[{"id":2303,"name":"COLLABORATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"6839:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2304,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6857:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6861:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6857:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2302,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6828:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2307,"nodeType":"ExpressionStatement","src":"6828:40:9"}]},"id":2309,"nodeType":"IfStatement","src":"6433:451:9","trueBody":{"id":2293,"nodeType":"Block","src":"6489:245:9","statements":[{"expression":{"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2265,"name":"stakeholders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"6508:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2268,"indexExpression":{"expression":{"id":2266,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6521:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6525:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6521:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6508:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6535:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6539:5:9","memberName":"value","nodeType":"MemberAccess","src":"6535:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6508:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2272,"nodeType":"ExpressionStatement","src":"6508:36:9"},{"expression":{"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2273,"name":"contributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"6563:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2276,"indexExpression":{"expression":{"id":2274,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6576:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6580:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6576:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6563:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6591:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6595:5:9","memberName":"value","nodeType":"MemberAccess","src":"6591:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6563:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2280,"nodeType":"ExpressionStatement","src":"6563:37:9"},{"expression":{"arguments":[{"id":2282,"name":"STAKEHOLDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"6630:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2283,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6647:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6651:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6647:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2281,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6619:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2286,"nodeType":"ExpressionStatement","src":"6619:39:9"},{"expression":{"arguments":[{"id":2288,"name":"COLLABORATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"6688:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6707:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6711:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6707:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2287,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6677:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6677:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2292,"nodeType":"ExpressionStatement","src":"6677:41:9"}]}}]}},{"expression":{"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2329,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"7037:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2330,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7048:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7052:5:9","memberName":"value","nodeType":"MemberAccess","src":"7048:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7037:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2333,"nodeType":"ExpressionStatement","src":"7037:20:9"},{"eventCall":{"arguments":[{"expression":{"id":2335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7102:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7106:6:9","memberName":"sender","nodeType":"MemberAccess","src":"7102:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2337,"name":"STAKEHOLDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7127:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"434f4e545249425554494f4e205355434345535346554c4c5920524543454956454421","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7158:37:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1","typeString":"literal_string \"CONTRIBUTION SUCCESSFULLY RECEIVED!\""},"value":"CONTRIBUTION SUCCESSFULLY RECEIVED!"},{"arguments":[{"id":2341,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7218:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_MantaDao_$2500","typeString":"contract MantaDao"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MantaDao_$2500","typeString":"contract MantaDao"}],"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7210:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2339,"name":"address","nodeType":"ElementaryTypeName","src":"7210:7:9","typeDescriptions":{}}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7210:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2343,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7238:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7242:5:9","memberName":"value","nodeType":"MemberAccess","src":"7238:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1","typeString":"literal_string \"CONTRIBUTION SUCCESSFULLY RECEIVED!\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2334,"name":"ProposalAction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"7073:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,string memory,address,uint256)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7073:185:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2346,"nodeType":"EmitStatement","src":"7068:190:9"},{"expression":{"id":2347,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"7280:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2237,"id":2348,"nodeType":"Return","src":"7273:14:9"}]},"functionSelector":"d7bb99ba","id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"contribute","nameLocation":"6178:10:9","nodeType":"FunctionDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[],"src":"6188:2:9"},"returnParameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2350,"src":"6216:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6215:9:9"},"scope":2500,"src":"6169:1126:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2362,"nodeType":"Block","src":"7417:53:9","statements":[{"expression":{"baseExpression":{"id":2358,"name":"raisedProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"7435:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposals_$1798_storage_$","typeString":"mapping(uint256 => struct MantaDao.Proposals storage ref)"}},"id":2360,"indexExpression":{"id":2359,"name":"proposalID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"7451:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7435:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage","typeString":"struct MantaDao.Proposals storage ref"}},"functionReturnParameters":2357,"id":2361,"nodeType":"Return","src":"7428:34:9"}]},"functionSelector":"2c72fdfc","id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"getProposals","nameLocation":"7344:12:9","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"proposalID","nameLocation":"7365:10:9","nodeType":"VariableDeclaration","scope":2363,"src":"7357:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"7357:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7356:20:9"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"7399:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_memory_ptr","typeString":"struct MantaDao.Proposals"},"typeName":{"id":2355,"nodeType":"UserDefinedTypeName","pathNode":{"id":2354,"name":"Proposals","nameLocations":["7399:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1798,"src":"7399:9:9"},"referencedDeclaration":1798,"src":"7399:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"}},"visibility":"internal"}],"src":"7398:18:9"},"scope":2500,"src":"7335:135:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2399,"nodeType":"Block","src":"7578:168:9","statements":[{"expression":{"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2370,"name":"props","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7589:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr","typeString":"struct MantaDao.Proposals memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2375,"name":"totalProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7613:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7597:15:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct MantaDao.Proposals memory[] memory)"},"typeName":{"baseType":{"id":2372,"nodeType":"UserDefinedTypeName","pathNode":{"id":2371,"name":"Proposals","nameLocations":["7601:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1798,"src":"7601:9:9"},"referencedDeclaration":1798,"src":"7601:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"}},"id":2373,"nodeType":"ArrayTypeName","src":"7601:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposals_$1798_storage_$dyn_storage_ptr","typeString":"struct MantaDao.Proposals[]"}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7597:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr","typeString":"struct MantaDao.Proposals memory[] memory"}},"src":"7589:39:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr","typeString":"struct MantaDao.Proposals memory[] memory"}},"id":2378,"nodeType":"ExpressionStatement","src":"7589:39:9"},{"body":{"id":2397,"nodeType":"Block","src":"7681:56:9","statements":[{"expression":{"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2389,"name":"props","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7696:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr","typeString":"struct MantaDao.Proposals memory[] memory"}},"id":2391,"indexExpression":{"id":2390,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"7702:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7696:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_memory_ptr","typeString":"struct MantaDao.Proposals memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2392,"name":"raisedProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"7707:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposals_$1798_storage_$","typeString":"mapping(uint256 => struct MantaDao.Proposals storage ref)"}},"id":2394,"indexExpression":{"id":2393,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"7723:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7707:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage","typeString":"struct MantaDao.Proposals storage ref"}},"src":"7696:29:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_memory_ptr","typeString":"struct MantaDao.Proposals memory"}},"id":2396,"nodeType":"ExpressionStatement","src":"7696:29:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"7656:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2384,"name":"totalProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7660:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7656:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2398,"initializationExpression":{"assignments":[2380],"declarations":[{"constant":false,"id":2380,"mutability":"mutable","name":"i","nameLocation":"7649:1:9","nodeType":"VariableDeclaration","scope":2398,"src":"7644:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2379,"name":"uint","nodeType":"ElementaryTypeName","src":"7644:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2382,"initialValue":{"hexValue":"30","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7653:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7644:10:9"},"loopExpression":{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7676:3:9","subExpression":{"id":2386,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"7676:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2388,"nodeType":"ExpressionStatement","src":"7676:3:9"},"nodeType":"ForStatement","src":"7639:98:9"}]},"functionSelector":"cceb68f5","id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"getAllProposals","nameLocation":"7513:15:9","nodeType":"FunctionDefinition","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[],"src":"7528:2:9"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"props","nameLocation":"7572:5:9","nodeType":"VariableDeclaration","scope":2400,"src":"7553:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr","typeString":"struct MantaDao.Proposals[]"},"typeName":{"baseType":{"id":2366,"nodeType":"UserDefinedTypeName","pathNode":{"id":2365,"name":"Proposals","nameLocations":["7553:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1798,"src":"7553:9:9"},"referencedDeclaration":1798,"src":"7553:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposals_$1798_storage_ptr","typeString":"struct MantaDao.Proposals"}},"id":2367,"nodeType":"ArrayTypeName","src":"7553:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposals_$1798_storage_$dyn_storage_ptr","typeString":"struct MantaDao.Proposals[]"}},"visibility":"internal"}],"src":"7552:26:9"},"scope":2500,"src":"7504:242:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2413,"nodeType":"Block","src":"7874:45:9","statements":[{"expression":{"baseExpression":{"id":2409,"name":"votedOn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"7892:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Voted_$1805_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MantaDao.Voted storage ref[] storage ref)"}},"id":2411,"indexExpression":{"id":2410,"name":"proposalID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"7900:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7892:19:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Voted_$1805_storage_$dyn_storage","typeString":"struct MantaDao.Voted storage ref[] storage ref"}},"functionReturnParameters":2408,"id":2412,"nodeType":"Return","src":"7885:26:9"}]},"functionSelector":"1c9b2f35","id":2414,"implemented":true,"kind":"function","modifiers":[],"name":"getProposalVote","nameLocation":"7801:15:9","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"proposalID","nameLocation":"7825:10:9","nodeType":"VariableDeclaration","scope":2414,"src":"7817:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"7817:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7816:20:9"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2414,"src":"7859:14:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr","typeString":"struct MantaDao.Voted[]"},"typeName":{"baseType":{"id":2405,"nodeType":"UserDefinedTypeName","pathNode":{"id":2404,"name":"Voted","nameLocations":["7859:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1805,"src":"7859:5:9"},"referencedDeclaration":1805,"src":"7859:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voted_$1805_storage_ptr","typeString":"struct MantaDao.Voted"}},"id":2406,"nodeType":"ArrayTypeName","src":"7859:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Voted_$1805_storage_$dyn_storage_ptr","typeString":"struct MantaDao.Voted[]"}},"visibility":"internal"}],"src":"7858:16:9"},"scope":2500,"src":"7792:127:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2428,"nodeType":"Block","src":"8061:54:9","statements":[{"expression":{"baseExpression":{"id":2423,"name":"stakeholderVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"8079:16:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":2426,"indexExpression":{"expression":{"id":2424,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8096:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8100:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8096:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8079:28:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":2422,"id":2427,"nodeType":"Return","src":"8072:35:9"}]},"functionSelector":"ff4b0db7","id":2429,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"hexValue":"556e617574686f72697a6564","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8006:14:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""},"value":"Unauthorized"}],"id":2418,"kind":"modifierInvocation","modifierName":{"id":2416,"name":"stakeholderOnly","nameLocations":["7990:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":1820,"src":"7990:15:9"},"nodeType":"ModifierInvocation","src":"7990:31:9"}],"name":"getStakeholdersVotes","nameLocation":"7967:20:9","nodeType":"FunctionDefinition","parameters":{"id":2415,"nodeType":"ParameterList","parameters":[],"src":"7987:2:9"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2429,"src":"8044:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"8044:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2420,"nodeType":"ArrayTypeName","src":"8044:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8043:18:9"},"scope":2500,"src":"7958:157:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2442,"nodeType":"Block","src":"8254:52:9","statements":[{"expression":{"baseExpression":{"id":2437,"name":"stakeholders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"8272:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2440,"indexExpression":{"expression":{"id":2438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8285:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8289:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8285:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8272:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2436,"id":2441,"nodeType":"Return","src":"8265:31:9"}]},"functionSelector":"341edbed","id":2443,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"hexValue":"756e617574686f72697a6564","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8208:14:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348","typeString":"literal_string \"unauthorized\""},"value":"unauthorized"}],"id":2433,"kind":"modifierInvocation","modifierName":{"id":2431,"name":"stakeholderOnly","nameLocations":["8192:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":1820,"src":"8192:15:9"},"nodeType":"ModifierInvocation","src":"8192:31:9"}],"name":"getStakeholdersBalances","nameLocation":"8166:23:9","nodeType":"FunctionDefinition","parameters":{"id":2430,"nodeType":"ParameterList","parameters":[],"src":"8189:2:9"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2443,"src":"8246:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"8246:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8245:9:9"},"scope":2500,"src":"8157:149:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2450,"nodeType":"Block","src":"8399:35:9","statements":[{"expression":{"id":2448,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"8417:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2447,"id":2449,"nodeType":"Return","src":"8410:14:9"}]},"functionSelector":"12b58349","id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalBalance","nameLocation":"8351:15:9","nodeType":"FunctionDefinition","parameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"8366:2:9"},"returnParameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2451,"src":"8391:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"8391:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8390:9:9"},"scope":2500,"src":"8342:92:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2463,"nodeType":"Block","src":"8527:54:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2456,"name":"stakeholders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"8545:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2459,"indexExpression":{"expression":{"id":2457,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8558:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8562:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8558:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8545:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8572:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8545:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2455,"id":2462,"nodeType":"Return","src":"8538:35:9"}]},"functionSelector":"f43327d2","id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"stakeholderStatus","nameLocation":"8480:17:9","nodeType":"FunctionDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[],"src":"8497:2:9"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2464,"src":"8522:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2453,"name":"bool","nodeType":"ElementaryTypeName","src":"8522:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8521:6:9"},"scope":2500,"src":"8471:110:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2476,"nodeType":"Block","src":"8670:54:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2469,"name":"contributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"8688:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2472,"indexExpression":{"expression":{"id":2470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8701:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8705:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8701:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8688:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8715:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8688:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2468,"id":2475,"nodeType":"Return","src":"8681:35:9"}]},"functionSelector":"d6cc8016","id":2477,"implemented":true,"kind":"function","modifiers":[],"name":"isContributor","nameLocation":"8627:13:9","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[],"src":"8640:2:9"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2477,"src":"8665:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2466,"name":"bool","nodeType":"ElementaryTypeName","src":"8665:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8664:6:9"},"scope":2500,"src":"8618:106:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2490,"nodeType":"Block","src":"8862:50:9","statements":[{"expression":{"baseExpression":{"id":2485,"name":"contributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"8880:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2488,"indexExpression":{"expression":{"id":2486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8893:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8897:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8893:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8880:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2484,"id":2489,"nodeType":"Return","src":"8873:31:9"}]},"functionSelector":"83047f80","id":2491,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"hexValue":"756e6174686f72697a6564","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8817:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc6c24a55f9143031d84c906fbc82ac39d7d41f57990c63b443c129a436b2db3","typeString":"literal_string \"unathorized\""},"value":"unathorized"}],"id":2481,"kind":"modifierInvocation","modifierName":{"id":2479,"name":"contributorOnly","nameLocations":["8801:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":1835,"src":"8801:15:9"},"nodeType":"ModifierInvocation","src":"8801:30:9"}],"name":"getContributorsBalance","nameLocation":"8776:22:9","nodeType":"FunctionDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[],"src":"8798:2:9"},"returnParameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2491,"src":"8854:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"8854:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8853:9:9"},"scope":2500,"src":"8767:145:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2498,"nodeType":"Block","src":"8972:36:9","statements":[{"expression":{"id":2496,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"8990:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2495,"id":2497,"nodeType":"Return","src":"8983:15:9"}]},"functionSelector":"72630531","id":2499,"implemented":true,"kind":"function","modifiers":[],"name":"getDeployer","nameLocation":"8929:11:9","nodeType":"FunctionDefinition","parameters":{"id":2492,"nodeType":"ParameterList","parameters":[],"src":"8940:2:9"},"returnParameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2499,"src":"8964:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2493,"name":"address","nodeType":"ElementaryTypeName","src":"8964:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8963:9:9"},"scope":2500,"src":"8920:88:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2501,"src":"196:8817:9","usedErrors":[]}],"src":"41:8972:9"},"id":9}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":24,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC165 detection.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":399,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202027d6953eea3d2b5ddab5aa096da019e59fa1df9c39b38efa67bbb22208254864736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0x27 0xD6 SWAP6 RETURNDATACOPY 0xEA RETURNDATASIZE 0x2B 0x5D 0xDA 0xB5 0xAA MULMOD PUSH14 0xA019E59FA1DF9C39B38EFA67BBB2 0x22 ADDMOD 0x25 BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202027d6953eea3d2b5ddab5aa096da019e59fa1df9c39b38efa67bbb22208254864736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0x27 0xD6 SWAP6 RETURNDATACOPY 0xEA RETURNDATASIZE 0x2B 0x5D 0xDA 0xB5 0xAA MULMOD PUSH14 0xA019E59FA1DF9C39B38EFA67BBB2 0x22 ADDMOD 0x25 BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205adbd6dcf7c22f8a798ff30cefff39bd875eddb76458fae2eaac814e6b08345364736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xDB 0xD6 0xDC 0xF7 0xC2 0x2F DUP11 PUSH26 0x8FF30CEFFF39BD875EDDB76458FAE2EAAC814E6B08345364736F PUSH13 0x63430008130033000000000000 ","sourceMap":"202:12582:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205adbd6dcf7c22f8a798ff30cefff39bd875eddb76458fae2eaac814e6b08345364736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xDB 0xD6 0xDC 0xF7 0xC2 0x2F DUP11 PUSH26 0x8FF30CEFFF39BD875EDDB76458FAE2EAAC814E6B08345364736F PUSH13 0x63430008130033000000000000 ","sourceMap":"202:12582:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3b02db46d5c417aa38134d274af040c0f81d5a339dce336c3e41aade1e5c5a664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xB0 0x2D 0xB4 PUSH14 0x5C417AA38134D274AF040C0F81D5 LOG3 CODECOPY 0xDC 0xE3 CALLDATASIZE 0xC3 0xE4 BYTE 0xAD 0xE1 0xE5 0xC5 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"215:1047:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3b02db46d5c417aa38134d274af040c0f81d5a339dce336c3e41aade1e5c5a664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xB0 0x2D 0xB4 PUSH14 0x5C417AA38134D274AF040C0F81D5 LOG3 CODECOPY 0xDC 0xE3 CALLDATASIZE 0xC3 0xE4 BYTE 0xAD 0xE1 0xE5 0xC5 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"215:1047:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MantaDao.sol":{"MantaDao":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":false,"internalType":"string","name":"message","type":"string"},{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ProposalAction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":false,"internalType":"string","name":"message","type":"string"},{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"upVote","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"downVotes","type":"uint256"},{"indexed":false,"internalType":"bool","name":"chosen","type":"bool"}],"name":"VoteAction","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contribute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"createProposal","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"upVote","type":"uint256"},{"internalType":"uint256","name":"downVotes","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bool","name":"paid","type":"bool"},{"internalType":"bool","name":"passed","type":"bool"},{"internalType":"address payable","name":"beneficiary","type":"address"},{"internalType":"address","name":"propoper","type":"address"},{"internalType":"address","name":"executor","type":"address"}],"internalType":"struct MantaDao.Proposals","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllProposals","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"upVote","type":"uint256"},{"internalType":"uint256","name":"downVotes","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bool","name":"paid","type":"bool"},{"internalType":"bool","name":"passed","type":"bool"},{"internalType":"address payable","name":"beneficiary","type":"address"},{"internalType":"address","name":"propoper","type":"address"},{"internalType":"address","name":"executor","type":"address"}],"internalType":"struct MantaDao.Proposals[]","name":"props","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContributorsBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeployer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalID","type":"uint256"}],"name":"getProposalVote","outputs":[{"components":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"chosen","type":"bool"}],"internalType":"struct MantaDao.Voted[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalID","type":"uint256"}],"name":"getProposals","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"upVote","type":"uint256"},{"internalType":"uint256","name":"downVotes","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bool","name":"paid","type":"bool"},{"internalType":"bool","name":"passed","type":"bool"},{"internalType":"address payable","name":"beneficiary","type":"address"},{"internalType":"address","name":"propoper","type":"address"},{"internalType":"address","name":"executor","type":"address"}],"internalType":"struct MantaDao.Proposals","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStakeholdersBalances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStakeholdersVotes","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isContributor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"payBeneficiary","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"bool","name":"chosen","type":"bool"}],"name":"performVote","outputs":[{"components":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"chosen","type":"bool"}],"internalType":"struct MantaDao.Voted","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakeholderStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1888":{"entryPoint":null,"id":1888,"parameterSlots":0,"returnSlots":0},"@_407":{"entryPoint":null,"id":407,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"61010060405267016345785d8a000060809081525061012c60a0908152507fd3cd73767648ee32815639d235132b56387142ddb995e593e7f0b0db442a7d4860c0908152507f193aaa92f8a12e564bc860f8d10b1c1f937927ff6a6e804d359875acec3e5a5a60e09081525034801561007757600080fd5b506001808190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060805160a05160c05160e05161421561014d600039600081816105cd0152818161092e01528181610dad01528181610f2e015281816110ca0152818161152c015281816117b901528181611c3a01528181611d7801528181611f6a015261202e0152600081816113e701528181611da20152611e270152600061104701526000611cb401526142156000f3fe60806040526004361061012a5760003560e01c80637cdc2eb7116100ab578063cceb68f51161006f578063cceb68f514610440578063d547741f1461046b578063d6cc801614610494578063d7bb99ba146104bf578063f43327d2146104dd578063ff4b0db7146105085761012a565b80637cdc2eb71461033357806383047f801461037057806391d148541461039b578063a217fddf146103d8578063b31f111c146104035761012a565b80632c72fdfc116100f25780632c72fdfc1461024e5780632f2ff15d1461028b578063341edbed146102b457806336568abe146102df57806372630531146103085761012a565b806301ffc9a71461012f578063119c37c81461016c57806312b58349146101a95780631c9b2f35146101d4578063248a9ca314610211575b600080fd5b34801561013b57600080fd5b5061015660048036038101906101519190612a53565b610533565b6040516101639190612a9b565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190612aec565b6105ad565b6040516101a09190612b28565b60405180910390f35b3480156101b557600080fd5b506101be61097d565b6040516101cb9190612b28565b60405180910390f35b3480156101e057600080fd5b506101fb60048036038101906101f69190612aec565b610987565b6040516102089190612c93565b60405180910390f35b34801561021d57600080fd5b5061023860048036038101906102339190612ceb565b610a74565b6040516102459190612d27565b60405180910390f35b34801561025a57600080fd5b5061027560048036038101906102709190612aec565b610a93565b6040516102829190612efe565b60405180910390f35b34801561029757600080fd5b506102b260048036038101906102ad9190612f4c565b610d4f565b005b3480156102c057600080fd5b506102c9610d70565b6040516102d69190612b28565b60405180910390f35b3480156102eb57600080fd5b5061030660048036038101906103019190612f4c565b610e5b565b005b34801561031457600080fd5b5061031d610ede565b60405161032a9190612f9b565b60405180910390f35b34801561033f57600080fd5b5061035a6004803603810190610355919061301b565b610f08565b6040516103679190612efe565b60405180910390f35b34801561037c57600080fd5b506103856113aa565b6040516103929190612b28565b60405180910390f35b3480156103a757600080fd5b506103c260048036038101906103bd9190612f4c565b611495565b6040516103cf9190612a9b565b60405180910390f35b3480156103e457600080fd5b506103ed6114ff565b6040516103fa9190612d27565b60405180910390f35b34801561040f57600080fd5b5061042a600480360381019061042591906130ee565b611506565b6040516104379190613170565b60405180910390f35b34801561044c57600080fd5b5061045561183e565b6040516104629190613358565b60405180910390f35b34801561047757600080fd5b50610492600480360381019061048d9190612f4c565b611b87565b005b3480156104a057600080fd5b506104a9611ba8565b6040516104b69190612a9b565b60405180910390f35b6104c7611bf1565b6040516104d49190612b28565b60405180910390f35b3480156104e957600080fd5b506104f2611fa8565b6040516104ff9190612a9b565b60405180910390f35b34801561051457600080fd5b5061051d611ff1565b60405161052a9190613429565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105a657506105a58261212a565b5b9050919050565b600060405180606001604052806022815260200161418d602291396105f27f000000000000000000000000000000000000000000000000000000000000000033611495565b8190610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b9190613495565b60405180910390fd5b506040518060400160405280601e81526020017f4f6e6c79206465706c6f7965722063616e206d616b65207061796d656e740000815250600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161481906106fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f59190613495565b60405180910390fd5b50610707612194565b600060056000868152602001908152602001600020905080600101546003541015610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075e90613503565b60405180910390fd5b600115158160070160009054906101000a900460ff161515036107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b69061356f565b60405180910390fd5b8060030154816002015411610809576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610800906135db565b60405180910390fd5b61083b81600101548260070160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121e3565b5060018160070160006101000a81548160ff021916908315150217905550338160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060010154600360008282546108b2919061362a565b925050819055508060070160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f73a1cb60f50f2e728bc99e4885df312cacdf69558d195a114a0e37d2836696a37f000000000000000000000000000000000000000000000000000000000000000084600101546040516109609291906136aa565b60405180910390a360035493505061097661229b565b5050919050565b6000600354905090565b606060076000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610a6957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff161515151581525050815260200190600101906109bc565b505050509050919050565b6000806000838152602001908152602001600020600101549050919050565b610a9b612911565b60056000838152602001908152602001600020604051806101800160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582018054610afc90613715565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2890613715565b8015610b755780601f10610b4a57610100808354040283529160200191610b75565b820191906000526020600020905b815481529060010190602001808311610b5857829003601f168201915b50505050508152602001600682018054610b8e90613715565b80601f0160208091040260200160405190810160405280929190818152602001828054610bba90613715565b8015610c075780601f10610bdc57610100808354040283529160200191610c07565b820191906000526020600020905b815481529060010190602001808311610bea57829003601f168201915b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff161515151581526020016007820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b610d5882610a74565b610d61816122a4565b610d6b83836122b8565b505050565b60006040518060400160405280600c81526020017f756e617574686f72697a65640000000000000000000000000000000000000000815250610dd27f000000000000000000000000000000000000000000000000000000000000000033611495565b8190610e14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0b9190613495565b60405180910390fd5b50600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505090565b610e63612398565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ed0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec7906137b8565b60405180910390fd5b610eda82826123a0565b5050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f10612911565b6040518060600160405280603181526020016141af60319139610f537f000000000000000000000000000000000000000000000000000000000000000033611495565b8190610f95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8c9190613495565b60405180910390fd5b50600060026000815480929190610fab906137d8565b91905055905060006005600083815260200190815260200160002090508181600001819055508481600101819055508989826005019182610fed929190613a06565b508787826006019182611001929190613a06565b50858160070160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0000000000000000000000000000000000000000000000000000000000000000426110719190613ad6565b81600401819055508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f73a1cb60f50f2e728bc99e4885df312cacdf69558d195a114a0e37d2836696a37f0000000000000000000000000000000000000000000000000000000000000000886040516110f8929190613b56565b60405180910390a38060405180610180016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201805461114f90613715565b80601f016020809104026020016040519081016040528092919081815260200182805461117b90613715565b80156111c85780601f1061119d576101008083540402835291602001916111c8565b820191906000526020600020905b8154815290600101906020018083116111ab57829003601f168201915b505050505081526020016006820180546111e190613715565b80601f016020809104026020016040519081016040528092919081815260200182805461120d90613715565b801561125a5780601f1061122f5761010080835404028352916020019161125a565b820191906000526020600020905b81548152906001019060200180831161123d57829003601f168201915b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff161515151581526020016007820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505093505050509695505050505050565b60006040518060400160405280600b81526020017f756e6174686f72697a656400000000000000000000000000000000000000000081525061140c7f000000000000000000000000000000000000000000000000000000000000000033611495565b819061144e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114459190613495565b60405180910390fd5b50600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505090565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b61150e6129b8565b604051806060016040528060248152602001614169602491396115517f000000000000000000000000000000000000000000000000000000000000000033611495565b8190611593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158a9190613495565b60405180910390fd5b5060006005600086815260200190815260200160002090506115b481612481565b83156115d9578060020160008154809291906115cf906137d8565b91905055506115f4565b8060030160008154809291906115ee906137d8565b91905055505b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600001549080600181540180825580915050600190039060005260206000200160009091909190915055600760008260000154815260200190815260200160002060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001861515815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555050508060070160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f547e0c985508bf44e88e036a89b60fb24d98f87250028cb1b4f9991ab734e6957f00000000000000000000000000000000000000000000000000000000000000008460010154856002015486600301548a6040516117f9959493929190613bde565b60405180910390a360405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018515158152509250505092915050565b606060025467ffffffffffffffff81111561185c5761185b61382b565b5b60405190808252806020026020018201604052801561189557816020015b611882612911565b81526020019060019003908161187a5790505b50905060005b600254811015611b83576005600082815260200190815260200160002060405180610180016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201805461190690613715565b80601f016020809104026020016040519081016040528092919081815260200182805461193290613715565b801561197f5780601f106119545761010080835404028352916020019161197f565b820191906000526020600020905b81548152906001019060200180831161196257829003601f168201915b5050505050815260200160068201805461199890613715565b80601f01602080910402602001604051908101604052809291908181526020018280546119c490613715565b8015611a115780601f106119e657610100808354040283529160200191611a11565b820191906000526020600020905b8154815290600101906020018083116119f457829003601f168201915b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff161515151581526020016007820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050828281518110611b6557611b64613c44565b5b60200260200101819052508080611b7b906137d8565b91505061189b565b5090565b611b9082610a74565b611b99816122a4565b611ba383836123a0565b505050565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411905090565b6000803411611c35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2c90613cbf565b60405180910390fd5b611c5f7f000000000000000000000000000000000000000000000000000000000000000033611495565b611e5357600034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cb09190613ad6565b90507f00000000000000000000000000000000000000000000000000000000000000008110611dcc5734600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611d6c9190613ad6565b92505081905550611d9d7f000000000000000000000000000000000000000000000000000000000000000033612615565b611dc77f000000000000000000000000000000000000000000000000000000000000000033612615565b611e4d565b34600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611e1b9190613ad6565b92505081905550611e4c7f000000000000000000000000000000000000000000000000000000000000000033612615565b5b50611f00565b34600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ea29190613ad6565b9250508190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ef89190613ad6565b925050819055505b3460036000828254611f129190613ad6565b925050819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f73a1cb60f50f2e728bc99e4885df312cacdf69558d195a114a0e37d2836696a37f000000000000000000000000000000000000000000000000000000000000000034604051611f98929190613d51565b60405180910390a3600354905090565b600080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411905090565b60606040518060400160405280600c81526020017f556e617574686f72697a656400000000000000000000000000000000000000008152506120537f000000000000000000000000000000000000000000000000000000000000000033611495565b8190612095576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161208c9190613495565b60405180910390fd5b50600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561211f57602002820191906000526020600020905b81548152602001906001019080831161210b575b505050505091505090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6002600154036121d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d090613dd9565b60405180910390fd5b6002600181905550565b6000808273ffffffffffffffffffffffffffffffffffffffff168460405161220a90613e2a565b60006040518083038185875af1925050503d8060008114612247576040519150601f19603f3d011682016040523d82523d6000602084013e61224c565b606091505b5050905080612290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161228790613e8b565b60405180910390fd5b600191505092915050565b60018081905550565b6122b5816122b0612398565b612623565b50565b6122c28282611495565b61239457600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612339612398565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b6123aa8282611495565b1561247d57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612422612398565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b8060070160019054906101000a900460ff16806124a2575042816004015411155b156124ff5760018160070160016101000a81548160ff0219169083151502179055506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124f690613ef7565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561258a57602002820191906000526020600020905b815481526020019060010190808311612576575b5050505050905060005b8151811015612610578181815181106125b0576125af613c44565b5b60200260200101518360000154036125fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125f490613f63565b60405180910390fd5b8080612608906137d8565b915050612594565b505050565b61261f82826122b8565b5050565b61262d8282611495565b6126a45761263a816126a8565b6126488360001c60206126d5565b604051602001612659929190614057565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161269b9190613495565b60405180910390fd5b5050565b60606126ce8273ffffffffffffffffffffffffffffffffffffffff16601460ff166126d5565b9050919050565b6060600060028360026126e89190614091565b6126f29190613ad6565b67ffffffffffffffff81111561270b5761270a61382b565b5b6040519080825280601f01601f19166020018201604052801561273d5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061277557612774613c44565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106127d9576127d8613c44565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026128199190614091565b6128239190613ad6565b90505b60018111156128c3577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061286557612864613c44565b5b1a60f81b82828151811061287c5761287b613c44565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806128bc906140d3565b9050612826565b5060008414612907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128fe90614148565b60405180910390fd5b8091505092915050565b60405180610180016040528060008152602001600081526020016000815260200160008152602001600081526020016060815260200160608152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612a30816129fb565b8114612a3b57600080fd5b50565b600081359050612a4d81612a27565b92915050565b600060208284031215612a6957612a686129f1565b5b6000612a7784828501612a3e565b91505092915050565b60008115159050919050565b612a9581612a80565b82525050565b6000602082019050612ab06000830184612a8c565b92915050565b6000819050919050565b612ac981612ab6565b8114612ad457600080fd5b50565b600081359050612ae681612ac0565b92915050565b600060208284031215612b0257612b016129f1565b5b6000612b1084828501612ad7565b91505092915050565b612b2281612ab6565b82525050565b6000602082019050612b3d6000830184612b19565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b9a82612b6f565b9050919050565b612baa81612b8f565b82525050565b612bb981612ab6565b82525050565b612bc881612a80565b82525050565b606082016000820151612be46000850182612ba1565b506020820151612bf76020850182612bb0565b506040820151612c0a6040850182612bbf565b50505050565b6000612c1c8383612bce565b60608301905092915050565b6000602082019050919050565b6000612c4082612b43565b612c4a8185612b4e565b9350612c5583612b5f565b8060005b83811015612c86578151612c6d8882612c10565b9750612c7883612c28565b925050600181019050612c59565b5085935050505092915050565b60006020820190508181036000830152612cad8184612c35565b905092915050565b6000819050919050565b612cc881612cb5565b8114612cd357600080fd5b50565b600081359050612ce581612cbf565b92915050565b600060208284031215612d0157612d006129f1565b5b6000612d0f84828501612cd6565b91505092915050565b612d2181612cb5565b82525050565b6000602082019050612d3c6000830184612d18565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612d7c578082015181840152602081019050612d61565b60008484015250505050565b6000601f19601f8301169050919050565b6000612da482612d42565b612dae8185612d4d565b9350612dbe818560208601612d5e565b612dc781612d88565b840191505092915050565b6000612ddd82612b6f565b9050919050565b612ded81612dd2565b82525050565b600061018083016000830151612e0c6000860182612bb0565b506020830151612e1f6020860182612bb0565b506040830151612e326040860182612bb0565b506060830151612e456060860182612bb0565b506080830151612e586080860182612bb0565b5060a083015184820360a0860152612e708282612d99565b91505060c083015184820360c0860152612e8a8282612d99565b91505060e0830151612e9f60e0860182612bbf565b50610100830151612eb4610100860182612bbf565b50610120830151612ec9610120860182612de4565b50610140830151612ede610140860182612ba1565b50610160830151612ef3610160860182612ba1565b508091505092915050565b60006020820190508181036000830152612f188184612df3565b905092915050565b612f2981612b8f565b8114612f3457600080fd5b50565b600081359050612f4681612f20565b92915050565b60008060408385031215612f6357612f626129f1565b5b6000612f7185828601612cd6565b9250506020612f8285828601612f37565b9150509250929050565b612f9581612b8f565b82525050565b6000602082019050612fb06000830184612f8c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612fdb57612fda612fb6565b5b8235905067ffffffffffffffff811115612ff857612ff7612fbb565b5b60208301915083600182028301111561301457613013612fc0565b5b9250929050565b60008060008060008060808789031215613038576130376129f1565b5b600087013567ffffffffffffffff811115613056576130556129f6565b5b61306289828a01612fc5565b9650965050602087013567ffffffffffffffff811115613085576130846129f6565b5b61309189828a01612fc5565b945094505060406130a489828a01612f37565b92505060606130b589828a01612ad7565b9150509295509295509295565b6130cb81612a80565b81146130d657600080fd5b50565b6000813590506130e8816130c2565b92915050565b60008060408385031215613105576131046129f1565b5b600061311385828601612ad7565b9250506020613124858286016130d9565b9150509250929050565b6060820160008201516131446000850182612ba1565b5060208201516131576020850182612bb0565b50604082015161316a6040850182612bbf565b50505050565b6000606082019050613185600083018461312e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610180830160008301516131d06000860182612bb0565b5060208301516131e36020860182612bb0565b5060408301516131f66040860182612bb0565b5060608301516132096060860182612bb0565b50608083015161321c6080860182612bb0565b5060a083015184820360a08601526132348282612d99565b91505060c083015184820360c086015261324e8282612d99565b91505060e083015161326360e0860182612bbf565b50610100830151613278610100860182612bbf565b5061012083015161328d610120860182612de4565b506101408301516132a2610140860182612ba1565b506101608301516132b7610160860182612ba1565b508091505092915050565b60006132ce83836131b7565b905092915050565b6000602082019050919050565b60006132ee8261318b565b6132f88185613196565b93508360208202850161330a856131a7565b8060005b85811015613346578484038952815161332785826132c2565b9450613332836132d6565b925060208a0199505060018101905061330e565b50829750879550505050505092915050565b6000602082019050818103600083015261337281846132e3565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006133b28383612bb0565b60208301905092915050565b6000602082019050919050565b60006133d68261337a565b6133e08185613385565b93506133eb83613396565b8060005b8381101561341c57815161340388826133a6565b975061340e836133be565b9250506001810190506133ef565b5085935050505092915050565b6000602082019050818103600083015261344381846133cb565b905092915050565b600082825260208201905092915050565b600061346782612d42565b613471818561344b565b9350613481818560208601612d5e565b61348a81612d88565b840191505092915050565b600060208201905081810360008301526134af818461345c565b905092915050565b7f696e73756666696369656e742066756e64000000000000000000000000000000600082015250565b60006134ed60118361344b565b91506134f8826134b7565b602082019050919050565b6000602082019050818103600083015261351c816134e0565b9050919050565b7f7061796d656e7420616c7265616479206d616465000000000000000000000000600082015250565b600061355960148361344b565b915061356482613523565b602082019050919050565b600060208201905081810360008301526135888161354c565b9050919050565b7f696e73756666696369656e7420766f7465730000000000000000000000000000600082015250565b60006135c560128361344b565b91506135d08261358f565b602082019050919050565b600060208201905081810360008301526135f4816135b8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061363582612ab6565b915061364083612ab6565b9250828203905081811115613658576136576135fb565b5b92915050565b7f5041594d454e54205355434345535346554c4c59204d41444521000000000000600082015250565b6000613694601a8361344b565b915061369f8261365e565b602082019050919050565b60006060820190506136bf6000830185612d18565b81810360208301526136d081613687565b90506136df6040830184612b19565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061372d57607f821691505b6020821081036137405761373f6136e6565b5b50919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006137a2602f8361344b565b91506137ad82613746565b604082019050919050565b600060208201905081810360008301526137d181613795565b9050919050565b60006137e382612ab6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613815576138146135fb565b5b600182019050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026138bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261387f565b6138c6868361387f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006139036138fe6138f984612ab6565b6138de565b612ab6565b9050919050565b6000819050919050565b61391d836138e8565b6139316139298261390a565b84845461388c565b825550505050565b600090565b613946613939565b613951818484613914565b505050565b5b818110156139755761396a60008261393e565b600181019050613957565b5050565b601f8211156139ba5761398b8161385a565b6139948461386f565b810160208510156139a3578190505b6139b76139af8561386f565b830182613956565b50505b505050565b600082821c905092915050565b60006139dd600019846008026139bf565b1980831691505092915050565b60006139f683836139cc565b9150826002028217905092915050565b613a108383613820565b67ffffffffffffffff811115613a2957613a2861382b565b5b613a338254613715565b613a3e828285613979565b6000601f831160018114613a6d5760008415613a5b578287013590505b613a6585826139ea565b865550613acd565b601f198416613a7b8661385a565b60005b82811015613aa357848901358255600182019150602085019450602081019050613a7e565b86831015613ac05784890135613abc601f8916826139cc565b8355505b6001600288020188555050505b50505050505050565b6000613ae182612ab6565b9150613aec83612ab6565b9250828201905080821115613b0457613b036135fb565b5b92915050565b7f50726f706f73616c205261697365640000000000000000000000000000000000600082015250565b6000613b40600f8361344b565b9150613b4b82613b0a565b602082019050919050565b6000606082019050613b6b6000830185612d18565b8181036020830152613b7c81613b33565b9050613b8b6040830184612b19565b9392505050565b7f50524f504f53414c20564f544500000000000000000000000000000000000000600082015250565b6000613bc8600d8361344b565b9150613bd382613b92565b602082019050919050565b600060c082019050613bf36000830188612d18565b8181036020830152613c0481613bbb565b9050613c136040830187612b19565b613c206060830186612b19565b613c2d6080830185612b19565b613c3a60a0830184612a8c565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f696e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000613ca9600e8361344b565b9150613cb482613c73565b602082019050919050565b60006020820190508181036000830152613cd881613c9c565b9050919050565b7f434f4e545249425554494f4e205355434345535346554c4c592052454345495660008201527f4544210000000000000000000000000000000000000000000000000000000000602082015250565b6000613d3b60238361344b565b9150613d4682613cdf565b604082019050919050565b6000606082019050613d666000830185612d18565b8181036020830152613d7781613d2e565b9050613d866040830184612b19565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613dc3601f8361344b565b9150613dce82613d8d565b602082019050919050565b60006020820190508181036000830152613df281613db6565b9050919050565b600081905092915050565b50565b6000613e14600083613df9565b9150613e1f82613e04565b600082019050919050565b6000613e3582613e07565b9150819050919050565b7f7061796d656e74206661696c6564000000000000000000000000000000000000600082015250565b6000613e75600e8361344b565b9150613e8082613e3f565b602082019050919050565b60006020820190508181036000830152613ea481613e68565b9050919050565b7f54696d652068617320616c726561647920706173736564000000000000000000600082015250565b6000613ee160178361344b565b9150613eec82613eab565b602082019050919050565b60006020820190508181036000830152613f1081613ed4565b9050919050565b7f646f75626c6520766f74696e67206973206e6f7420616c6c6f77656400000000600082015250565b6000613f4d601c8361344b565b9150613f5882613f17565b602082019050919050565b60006020820190508181036000830152613f7c81613f40565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000613fc4601783613f83565b9150613fcf82613f8e565b601782019050919050565b6000613fe582612d42565b613fef8185613f83565b9350613fff818560208601612d5e565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000614041601183613f83565b915061404c8261400b565b601182019050919050565b600061406282613fb7565b915061406e8285613fda565b915061407982614034565b91506140858284613fda565b91508190509392505050565b600061409c82612ab6565b91506140a783612ab6565b92508282026140b581612ab6565b915082820484148315176140cc576140cb6135fb565b5b5092915050565b60006140de82612ab6565b9150600082036140f1576140f06135fb565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061413260208361344b565b915061413d826140fc565b602082019050919050565b6000602082019050818103600083015261416181614125565b905091905056fe4f6e6c79207374616b65686f6c646572732063616e20706572666f726d20766f74696e674f6e6c79207374616b65686f6c646572732063616e206d616b65207061796d656e744f6e6c79207374616b65686f6c646572732061726520616c6c6f77656420746f206372656174652050726f706f73616c73a264697066735822122088245946d27025f8fe5a238c09db2f425f5a820c7bb38f183bba8e928610557c64736f6c63430008130033","opcodes":"PUSH2 0x100 PUSH1 0x40 MSTORE PUSH8 0x16345785D8A0000 PUSH1 0x80 SWAP1 DUP2 MSTORE POP PUSH2 0x12C PUSH1 0xA0 SWAP1 DUP2 MSTORE POP PUSH32 0xD3CD73767648EE32815639D235132B56387142DDB995E593E7F0B0DB442A7D48 PUSH1 0xC0 SWAP1 DUP2 MSTORE POP PUSH32 0x193AAA92F8A12E564BC860F8D10B1C1F937927FF6A6E804D359875ACEC3E5A5A PUSH1 0xE0 SWAP1 DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x4215 PUSH2 0x14D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x5CD ADD MSTORE DUP2 DUP2 PUSH2 0x92E ADD MSTORE DUP2 DUP2 PUSH2 0xDAD ADD MSTORE DUP2 DUP2 PUSH2 0xF2E ADD MSTORE DUP2 DUP2 PUSH2 0x10CA ADD MSTORE DUP2 DUP2 PUSH2 0x152C ADD MSTORE DUP2 DUP2 PUSH2 0x17B9 ADD MSTORE DUP2 DUP2 PUSH2 0x1C3A ADD MSTORE DUP2 DUP2 PUSH2 0x1D78 ADD MSTORE DUP2 DUP2 PUSH2 0x1F6A ADD MSTORE PUSH2 0x202E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x13E7 ADD MSTORE DUP2 DUP2 PUSH2 0x1DA2 ADD MSTORE PUSH2 0x1E27 ADD MSTORE PUSH1 0x0 PUSH2 0x1047 ADD MSTORE PUSH1 0x0 PUSH2 0x1CB4 ADD MSTORE PUSH2 0x4215 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CDC2EB7 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xCCEB68F5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCCEB68F5 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xD6CC8016 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xD7BB99BA EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xF43327D2 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xFF4B0DB7 EQ PUSH2 0x508 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x7CDC2EB7 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x83047F80 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xB31F111C EQ PUSH2 0x403 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x2C72FDFC GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x2C72FDFC EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x341EDBED EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x72630531 EQ PUSH2 0x308 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x119C37C8 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x12B58349 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x1C9B2F35 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x211 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x2A53 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x2A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x2AEC JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BE PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x2AEC JUMP JUMPDEST PUSH2 0x987 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x2CEB JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x2D27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x2AEC JUMP JUMPDEST PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x2EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0xD4F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C9 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0xE5B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x2F9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x301B JUMP JUMPDEST PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x2EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x2A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x2D27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x30EE JUMP JUMPDEST PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x3170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x455 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x3358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x1B87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A9 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C7 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 PUSH2 0x1FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x2A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51D PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x3429 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5A6 JUMPI POP PUSH2 0x5A5 DUP3 PUSH2 0x212A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x418D PUSH1 0x22 SWAP2 CODECOPY PUSH2 0x5F2 PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F6E6C79206465706C6F7965722063616E206D616B65207061796D656E740000 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP2 SWAP1 PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x707 PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD LT ISZERO PUSH2 0x767 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75E SWAP1 PUSH2 0x3503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x356F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x809 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP1 PUSH2 0x35DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83B DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x7 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21E3 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x362A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x73A1CB60F50F2E728BC99E4885DF312CACDF69558D195A114A0E37D2836696A3 PUSH32 0x0 DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x960 SWAP3 SWAP2 SWAP1 PUSH2 0x36AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 SLOAD SWAP4 POP POP PUSH2 0x976 PUSH2 0x229B JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA69 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x9BC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9B PUSH2 0x2911 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0xAFC SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB28 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB75 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB4A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB75 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB58 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0xB8E SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBBA SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBDC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD58 DUP3 PUSH2 0xA74 JUMP JUMPDEST PUSH2 0xD61 DUP2 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0xD6B DUP4 DUP4 PUSH2 0x22B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x756E617574686F72697A65640000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xDD2 PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0B SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0x2398 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC7 SWAP1 PUSH2 0x37B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEDA DUP3 DUP3 PUSH2 0x23A0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF10 PUSH2 0x2911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x41AF PUSH1 0x31 SWAP2 CODECOPY PUSH2 0xF53 PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0xF95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFAB SWAP1 PUSH2 0x37D8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP10 DUP10 DUP3 PUSH1 0x5 ADD SWAP2 DUP3 PUSH2 0xFED SWAP3 SWAP2 SWAP1 PUSH2 0x3A06 JUMP JUMPDEST POP DUP8 DUP8 DUP3 PUSH1 0x6 ADD SWAP2 DUP3 PUSH2 0x1001 SWAP3 SWAP2 SWAP1 PUSH2 0x3A06 JUMP JUMPDEST POP DUP6 DUP2 PUSH1 0x7 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 TIMESTAMP PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x73A1CB60F50F2E728BC99E4885DF312CACDF69558D195A114A0E37D2836696A3 PUSH32 0x0 DUP9 PUSH1 0x40 MLOAD PUSH2 0x10F8 SWAP3 SWAP2 SWAP1 PUSH2 0x3B56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x114F SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x117B SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x119D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x11E1 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x120D SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x125A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x122F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x125A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x123D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP4 POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x756E6174686F72697A6564000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x140C PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0x144E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1445 SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x150E PUSH2 0x29B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4169 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1551 PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0x1593 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158A SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x15B4 DUP2 PUSH2 0x2481 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x15D9 JUMPI DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x15CF SWAP1 PUSH2 0x37D8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x15F4 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x15EE SWAP1 PUSH2 0x37D8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x7 PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 PUSH1 0x7 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E0C985508BF44E88E036A89B60FB24D98F87250028CB1B4F9991AB734E695 PUSH32 0x0 DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x2 ADD SLOAD DUP7 PUSH1 0x3 ADD SLOAD DUP11 PUSH1 0x40 MLOAD PUSH2 0x17F9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x185C JUMPI PUSH2 0x185B PUSH2 0x382B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1895 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1882 PUSH2 0x2911 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x187A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1B83 JUMPI PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x1906 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1932 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x197F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1954 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x197F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1962 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x1998 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19C4 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A11 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A11 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B65 JUMPI PUSH2 0x1B64 PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x1B7B SWAP1 PUSH2 0x37D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x189B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1B90 DUP3 PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x1B99 DUP2 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x1BA3 DUP4 DUP4 PUSH2 0x23A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE GT PUSH2 0x1C35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2C SWAP1 PUSH2 0x3CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C5F PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x1E53 JUMPI PUSH1 0x0 CALLVALUE PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1CB0 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 LT PUSH2 0x1DCC JUMPI CALLVALUE PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D6C SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D9D PUSH32 0x0 CALLER PUSH2 0x2615 JUMP JUMPDEST PUSH2 0x1DC7 PUSH32 0x0 CALLER PUSH2 0x2615 JUMP JUMPDEST PUSH2 0x1E4D JUMP JUMPDEST CALLVALUE PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E1B SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E4C PUSH32 0x0 CALLER PUSH2 0x2615 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F00 JUMP JUMPDEST CALLVALUE PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EA2 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EF8 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST CALLVALUE PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F12 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x73A1CB60F50F2E728BC99E4885DF312CACDF69558D195A114A0E37D2836696A3 PUSH32 0x0 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1F98 SWAP3 SWAP2 SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E617574686F72697A65640000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2053 PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0x2095 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208C SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x211F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x210B JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x21D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D0 SWAP1 PUSH2 0x3DD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x220A SWAP1 PUSH2 0x3E2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2247 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x224C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2287 SWAP1 PUSH2 0x3E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x22B5 DUP2 PUSH2 0x22B0 PUSH2 0x2398 JUMP JUMPDEST PUSH2 0x2623 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x22C2 DUP3 DUP3 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x2394 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2339 PUSH2 0x2398 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x23AA DUP3 DUP3 PUSH2 0x1495 JUMP JUMPDEST ISZERO PUSH2 0x247D JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2422 PUSH2 0x2398 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x24A2 JUMPI POP TIMESTAMP DUP2 PUSH1 0x4 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x24FF JUMPI PUSH1 0x1 DUP2 PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24F6 SWAP1 PUSH2 0x3EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x258A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2576 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2610 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x25B0 JUMPI PUSH2 0x25AF PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x25FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F4 SWAP1 PUSH2 0x3F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x2608 SWAP1 PUSH2 0x37D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2594 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x261F DUP3 DUP3 PUSH2 0x22B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x262D DUP3 DUP3 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x26A4 JUMPI PUSH2 0x263A DUP2 PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x2648 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2659 SWAP3 SWAP2 SWAP1 PUSH2 0x4057 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269B SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x26CE DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x26D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x26E8 SWAP2 SWAP1 PUSH2 0x4091 JUMP JUMPDEST PUSH2 0x26F2 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x270B JUMPI PUSH2 0x270A PUSH2 0x382B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x273D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2775 JUMPI PUSH2 0x2774 PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x27D9 JUMPI PUSH2 0x27D8 PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x2819 SWAP2 SWAP1 PUSH2 0x4091 JUMP JUMPDEST PUSH2 0x2823 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x28C3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x2865 JUMPI PUSH2 0x2864 PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x287C JUMPI PUSH2 0x287B PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x28BC SWAP1 PUSH2 0x40D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2826 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x2907 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28FE SWAP1 PUSH2 0x4148 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A30 DUP2 PUSH2 0x29FB JUMP JUMPDEST DUP2 EQ PUSH2 0x2A3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A4D DUP2 PUSH2 0x2A27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A69 JUMPI PUSH2 0x2A68 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A77 DUP5 DUP3 DUP6 ADD PUSH2 0x2A3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A95 DUP2 PUSH2 0x2A80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC9 DUP2 PUSH2 0x2AB6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AE6 DUP2 PUSH2 0x2AC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B02 JUMPI PUSH2 0x2B01 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B10 DUP5 DUP3 DUP6 ADD PUSH2 0x2AD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B22 DUP2 PUSH2 0x2AB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B3D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B9A DUP3 PUSH2 0x2B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BAA DUP2 PUSH2 0x2B8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2BB9 DUP2 PUSH2 0x2AB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2BC8 DUP2 PUSH2 0x2A80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2BE4 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2BF7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2C0A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1C DUP4 DUP4 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C40 DUP3 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0x2C4A DUP2 DUP6 PUSH2 0x2B4E JUMP JUMPDEST SWAP4 POP PUSH2 0x2C55 DUP4 PUSH2 0x2B5F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C86 JUMPI DUP2 MLOAD PUSH2 0x2C6D DUP9 DUP3 PUSH2 0x2C10 JUMP JUMPDEST SWAP8 POP PUSH2 0x2C78 DUP4 PUSH2 0x2C28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C59 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CAD DUP2 DUP5 PUSH2 0x2C35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CC8 DUP2 PUSH2 0x2CB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CE5 DUP2 PUSH2 0x2CBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D01 JUMPI PUSH2 0x2D00 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D0F DUP5 DUP3 DUP6 ADD PUSH2 0x2CD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D21 DUP2 PUSH2 0x2CB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D7C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA4 DUP3 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x2DAE DUP2 DUP6 PUSH2 0x2D4D JUMP JUMPDEST SWAP4 POP PUSH2 0x2DBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x2DC7 DUP2 PUSH2 0x2D88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDD DUP3 PUSH2 0x2B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DED DUP2 PUSH2 0x2DD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2E0C PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2E1F PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2E32 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2E45 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2E58 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x2E70 DUP3 DUP3 PUSH2 0x2D99 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x2E8A DUP3 DUP3 PUSH2 0x2D99 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x2E9F PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x2EB4 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x2EC9 PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0x2DE4 JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x2EDE PUSH2 0x140 DUP7 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH2 0x160 DUP4 ADD MLOAD PUSH2 0x2EF3 PUSH2 0x160 DUP7 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F18 DUP2 DUP5 PUSH2 0x2DF3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F29 DUP2 PUSH2 0x2B8F JUMP JUMPDEST DUP2 EQ PUSH2 0x2F34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F46 DUP2 PUSH2 0x2F20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F63 JUMPI PUSH2 0x2F62 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F71 DUP6 DUP3 DUP7 ADD PUSH2 0x2CD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F82 DUP6 DUP3 DUP7 ADD PUSH2 0x2F37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F95 DUP2 PUSH2 0x2B8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2FDB JUMPI PUSH2 0x2FDA PUSH2 0x2FB6 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FF8 JUMPI PUSH2 0x2FF7 PUSH2 0x2FBB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3014 JUMPI PUSH2 0x3013 PUSH2 0x2FC0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3038 JUMPI PUSH2 0x3037 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3056 JUMPI PUSH2 0x3055 PUSH2 0x29F6 JUMP JUMPDEST JUMPDEST PUSH2 0x3062 DUP10 DUP3 DUP11 ADD PUSH2 0x2FC5 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3085 JUMPI PUSH2 0x3084 PUSH2 0x29F6 JUMP JUMPDEST JUMPDEST PUSH2 0x3091 DUP10 DUP3 DUP11 ADD PUSH2 0x2FC5 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 PUSH2 0x30A4 DUP10 DUP3 DUP11 ADD PUSH2 0x2F37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x30B5 DUP10 DUP3 DUP11 ADD PUSH2 0x2AD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x30CB DUP2 PUSH2 0x2A80 JUMP JUMPDEST DUP2 EQ PUSH2 0x30D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30E8 DUP2 PUSH2 0x30C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3105 JUMPI PUSH2 0x3104 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3113 DUP6 DUP3 DUP7 ADD PUSH2 0x2AD7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3124 DUP6 DUP3 DUP7 ADD PUSH2 0x30D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3144 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3157 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x316A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3185 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x312E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x31D0 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x31E3 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x31F6 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x3209 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x321C PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x3234 DUP3 DUP3 PUSH2 0x2D99 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x324E DUP3 DUP3 PUSH2 0x2D99 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x3263 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x3278 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x328D PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0x2DE4 JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x32A2 PUSH2 0x140 DUP7 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH2 0x160 DUP4 ADD MLOAD PUSH2 0x32B7 PUSH2 0x160 DUP7 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32CE DUP4 DUP4 PUSH2 0x31B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32EE DUP3 PUSH2 0x318B JUMP JUMPDEST PUSH2 0x32F8 DUP2 DUP6 PUSH2 0x3196 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x330A DUP6 PUSH2 0x31A7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3346 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3327 DUP6 DUP3 PUSH2 0x32C2 JUMP JUMPDEST SWAP5 POP PUSH2 0x3332 DUP4 PUSH2 0x32D6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x330E JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3372 DUP2 DUP5 PUSH2 0x32E3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B2 DUP4 DUP4 PUSH2 0x2BB0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D6 DUP3 PUSH2 0x337A JUMP JUMPDEST PUSH2 0x33E0 DUP2 DUP6 PUSH2 0x3385 JUMP JUMPDEST SWAP4 POP PUSH2 0x33EB DUP4 PUSH2 0x3396 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x341C JUMPI DUP2 MLOAD PUSH2 0x3403 DUP9 DUP3 PUSH2 0x33A6 JUMP JUMPDEST SWAP8 POP PUSH2 0x340E DUP4 PUSH2 0x33BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33EF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3443 DUP2 DUP5 PUSH2 0x33CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3467 DUP3 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x3471 DUP2 DUP6 PUSH2 0x344B JUMP JUMPDEST SWAP4 POP PUSH2 0x3481 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x348A DUP2 PUSH2 0x2D88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34AF DUP2 DUP5 PUSH2 0x345C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742066756E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34ED PUSH1 0x11 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x34F8 DUP3 PUSH2 0x34B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x351C DUP2 PUSH2 0x34E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7061796D656E7420616C7265616479206D616465000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3559 PUSH1 0x14 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3564 DUP3 PUSH2 0x3523 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3588 DUP2 PUSH2 0x354C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420766F7465730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C5 PUSH1 0x12 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x35D0 DUP3 PUSH2 0x358F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35F4 DUP2 PUSH2 0x35B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3635 DUP3 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3640 DUP4 PUSH2 0x2AB6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3658 JUMPI PUSH2 0x3657 PUSH2 0x35FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5041594D454E54205355434345535346554C4C59204D41444521000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3694 PUSH1 0x1A DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x369F DUP3 PUSH2 0x365E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x36BF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D18 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x36D0 DUP2 PUSH2 0x3687 JUMP JUMPDEST SWAP1 POP PUSH2 0x36DF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x372D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3740 JUMPI PUSH2 0x373F PUSH2 0x36E6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A2 PUSH1 0x2F DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x37AD DUP3 PUSH2 0x3746 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37D1 DUP2 PUSH2 0x3795 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E3 DUP3 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3815 JUMPI PUSH2 0x3814 PUSH2 0x35FB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x38BC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x387F JUMP JUMPDEST PUSH2 0x38C6 DUP7 DUP4 PUSH2 0x387F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3903 PUSH2 0x38FE PUSH2 0x38F9 DUP5 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x38DE JUMP JUMPDEST PUSH2 0x2AB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x391D DUP4 PUSH2 0x38E8 JUMP JUMPDEST PUSH2 0x3931 PUSH2 0x3929 DUP3 PUSH2 0x390A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x388C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3946 PUSH2 0x3939 JUMP JUMPDEST PUSH2 0x3951 DUP2 DUP5 DUP5 PUSH2 0x3914 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3975 JUMPI PUSH2 0x396A PUSH1 0x0 DUP3 PUSH2 0x393E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3957 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x39BA JUMPI PUSH2 0x398B DUP2 PUSH2 0x385A JUMP JUMPDEST PUSH2 0x3994 DUP5 PUSH2 0x386F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x39A3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x39B7 PUSH2 0x39AF DUP6 PUSH2 0x386F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3956 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39DD PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x39BF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F6 DUP4 DUP4 PUSH2 0x39CC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A10 DUP4 DUP4 PUSH2 0x3820 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A29 JUMPI PUSH2 0x3A28 PUSH2 0x382B JUMP JUMPDEST JUMPDEST PUSH2 0x3A33 DUP3 SLOAD PUSH2 0x3715 JUMP JUMPDEST PUSH2 0x3A3E DUP3 DUP3 DUP6 PUSH2 0x3979 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3A6D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3A5B JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x3A65 DUP6 DUP3 PUSH2 0x39EA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3ACD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3A7B DUP7 PUSH2 0x385A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3AA3 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A7E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3AC0 JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x3ABC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x39CC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE1 DUP3 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AEC DUP4 PUSH2 0x2AB6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3B04 JUMPI PUSH2 0x3B03 PUSH2 0x35FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F706F73616C205261697365640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B40 PUSH1 0xF DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3B4B DUP3 PUSH2 0x3B0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B6B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D18 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3B7C DUP2 PUSH2 0x3B33 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B8B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50524F504F53414C20564F544500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BC8 PUSH1 0xD DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3BD3 DUP3 PUSH2 0x3B92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3BF3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2D18 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3C04 DUP2 PUSH2 0x3BBB JUMP JUMPDEST SWAP1 POP PUSH2 0x3C13 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x3C20 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x3C2D PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x3C3A PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2A8C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x696E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA9 PUSH1 0xE DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3CB4 DUP3 PUSH2 0x3C73 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CD8 DUP2 PUSH2 0x3C9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x434F4E545249425554494F4E205355434345535346554C4C5920524543454956 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4544210000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3B PUSH1 0x23 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3D46 DUP3 PUSH2 0x3CDF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3D66 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D18 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3D77 DUP2 PUSH2 0x3D2E JUMP JUMPDEST SWAP1 POP PUSH2 0x3D86 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC3 PUSH1 0x1F DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3DCE DUP3 PUSH2 0x3D8D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DF2 DUP2 PUSH2 0x3DB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E14 PUSH1 0x0 DUP4 PUSH2 0x3DF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E1F DUP3 PUSH2 0x3E04 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E35 DUP3 PUSH2 0x3E07 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7061796D656E74206661696C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E75 PUSH1 0xE DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3E80 DUP3 PUSH2 0x3E3F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EA4 DUP2 PUSH2 0x3E68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D652068617320616C726561647920706173736564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE1 PUSH1 0x17 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3EEC DUP3 PUSH2 0x3EAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F10 DUP2 PUSH2 0x3ED4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x646F75626C6520766F74696E67206973206E6F7420616C6C6F77656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F4D PUSH1 0x1C DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3F58 DUP3 PUSH2 0x3F17 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F7C DUP2 PUSH2 0x3F40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC4 PUSH1 0x17 DUP4 PUSH2 0x3F83 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FCF DUP3 PUSH2 0x3F8E JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE5 DUP3 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x3FEF DUP2 DUP6 PUSH2 0x3F83 JUMP JUMPDEST SWAP4 POP PUSH2 0x3FFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D5E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4041 PUSH1 0x11 DUP4 PUSH2 0x3F83 JUMP JUMPDEST SWAP2 POP PUSH2 0x404C DUP3 PUSH2 0x400B JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4062 DUP3 PUSH2 0x3FB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x406E DUP3 DUP6 PUSH2 0x3FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x4079 DUP3 PUSH2 0x4034 JUMP JUMPDEST SWAP2 POP PUSH2 0x4085 DUP3 DUP5 PUSH2 0x3FDA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409C DUP3 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x40A7 DUP4 PUSH2 0x2AB6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x40B5 DUP2 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x40CC JUMPI PUSH2 0x40CB PUSH2 0x35FB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40DE DUP3 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x40F1 JUMPI PUSH2 0x40F0 PUSH2 0x35FB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4132 PUSH1 0x20 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x413D DUP3 PUSH2 0x40FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4161 DUP2 PUSH2 0x4125 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID 0x4F PUSH15 0x6C79207374616B65686F6C64657273 KECCAK256 PUSH4 0x616E2070 PUSH6 0x72666F726D20 PUSH23 0x6F74696E674F6E6C79207374616B65686F6C6465727320 PUSH4 0x616E206D PUSH2 0x6B65 KECCAK256 PUSH17 0x61796D656E744F6E6C79207374616B6568 PUSH16 0x6C646572732061726520616C6C6F7765 PUSH5 0x20746F2063 PUSH19 0x656174652050726F706F73616C73A264697066 PUSH20 0x5822122088245946D27025F8FE5A238C09DB2F42 0x5F GAS DUP3 0xC PUSH28 0xB38F183BBA8E928610557C64736F6C63430008130033000000000000 ","sourceMap":"196:8817:9:-:0;;;381:9;332:58;;;;;433:9;397:45;;;;;495:25;449:71;;;;;572:24;527:69;;;;;2179:53;;;;;;;;;;1716:1:2;1821:7;:22;;;;2214:10:9;2203:8;;:21;;;;;;;;;;;;;;;;;;196:8817;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":5375,"id":27,"parameterSlots":0,"returnSlots":0},"@_checkRole_131":{"entryPoint":9763,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":8868,"id":92,"parameterSlots":1,"returnSlots":0},"@_grantRole_283":{"entryPoint":8888,"id":283,"parameterSlots":2,"returnSlots":0},"@_msgSender_465":{"entryPoint":9112,"id":465,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_441":{"entryPoint":8859,"id":441,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_433":{"entryPoint":8596,"id":433,"parameterSlots":0,"returnSlots":0},"@_revokeRole_314":{"entryPoint":9120,"id":314,"parameterSlots":2,"returnSlots":0},"@_setupRole_223":{"entryPoint":9749,"id":223,"parameterSlots":2,"returnSlots":0},"@contribute_2350":{"entryPoint":7153,"id":2350,"parameterSlots":0,"returnSlots":1},"@createProposal_1971":{"entryPoint":3848,"id":1971,"parameterSlots":6,"returnSlots":1},"@getAllProposals_2400":{"entryPoint":6206,"id":2400,"parameterSlots":0,"returnSlots":1},"@getContributorsBalance_2491":{"entryPoint":5034,"id":2491,"parameterSlots":0,"returnSlots":1},"@getDeployer_2499":{"entryPoint":3806,"id":2499,"parameterSlots":0,"returnSlots":1},"@getProposalVote_2414":{"entryPoint":2439,"id":2414,"parameterSlots":1,"returnSlots":1},"@getProposals_2363":{"entryPoint":2707,"id":2363,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_146":{"entryPoint":2676,"id":146,"parameterSlots":1,"returnSlots":1},"@getStakeholdersBalances_2443":{"entryPoint":3440,"id":2443,"parameterSlots":0,"returnSlots":1},"@getStakeholdersVotes_2429":{"entryPoint":8177,"id":2429,"parameterSlots":0,"returnSlots":1},"@getTotalBalance_2451":{"entryPoint":2429,"id":2451,"parameterSlots":0,"returnSlots":1},"@grantRole_166":{"entryPoint":3407,"id":166,"parameterSlots":2,"returnSlots":0},"@handleVoting_2116":{"entryPoint":9345,"id":2116,"parameterSlots":1,"returnSlots":0},"@hasRole_79":{"entryPoint":5269,"id":79,"parameterSlots":2,"returnSlots":1},"@isContributor_2477":{"entryPoint":7080,"id":2477,"parameterSlots":0,"returnSlots":1},"@payBeneficiary_2204":{"entryPoint":1453,"id":2204,"parameterSlots":1,"returnSlots":1},"@pay_2233":{"entryPoint":8675,"id":2233,"parameterSlots":2,"returnSlots":1},"@performVote_2055":{"entryPoint":5382,"id":2055,"parameterSlots":2,"returnSlots":1},"@renounceRole_209":{"entryPoint":3675,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":7047,"id":186,"parameterSlots":2,"returnSlots":0},"@stakeholderStatus_2464":{"entryPoint":8104,"id":2464,"parameterSlots":0,"returnSlots":1},"@supportsInterface_60":{"entryPoint":1331,"id":60,"parameterSlots":1,"returnSlots":1},"@supportsInterface_735":{"entryPoint":8490,"id":735,"parameterSlots":1,"returnSlots":1},"@toHexString_666":{"entryPoint":9941,"id":666,"parameterSlots":2,"returnSlots":1},"@toHexString_686":{"entryPoint":9896,"id":686,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":12087,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":12505,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":11478,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":10814,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":12229,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":10967,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":11499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":12108,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":10835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_addresst_uint256":{"entryPoint":12315,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256":{"entryPoint":10988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bool":{"entryPoint":12526,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr":{"entryPoint":12994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr":{"entryPoint":11280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":13222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_payable":{"entryPoint":11748,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address":{"entryPoint":11169,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12172,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13027,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":11317,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":11199,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10892,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":11544,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":11673,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":13404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16346,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db_to_t_string_memory_ptr_fromStack":{"entryPoint":15291,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":16677,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7_to_t_string_memory_ptr_fromStack":{"entryPoint":15516,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808_to_t_string_memory_ptr_fromStack":{"entryPoint":13536,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176_to_t_string_memory_ptr_fromStack":{"entryPoint":16084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b_to_t_string_memory_ptr_fromStack":{"entryPoint":15976,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3_to_t_string_memory_ptr_fromStack":{"entryPoint":13752,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf_to_t_string_memory_ptr_fromStack":{"entryPoint":16192,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15879,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42_to_t_string_memory_ptr_fromStack":{"entryPoint":13644,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16311,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1_to_t_string_memory_ptr_fromStack":{"entryPoint":15662,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70_to_t_string_memory_ptr_fromStack":{"entryPoint":13959,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":15798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c_to_t_string_memory_ptr_fromStack":{"entryPoint":15155,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":14229,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr":{"entryPoint":12727,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr_fromStack":{"entryPoint":11763,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr":{"entryPoint":11214,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr_fromStack":{"entryPoint":12590,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11184,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11033,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15914,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16471,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12187,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13144,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11411,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":11559,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_stringliteral_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db_t_uint256_t_uint256_t_uint256_t_bool__to_t_bytes32_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":15326,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_stringliteral_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1_t_uint256__to_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":15697,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_stringliteral_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70_t_uint256__to_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":13994,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_stringliteral_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c_t_uint256__to_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":15190,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16712,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15551,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13571,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16119,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16011,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13787,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16227,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13679,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14264,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Proposals_$1798_memory_ptr__to_t_struct$_Proposals_$1798_memory_ptr__fromStack_reversed":{"entryPoint":12030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Voted_$1805_memory_ptr__to_t_struct$_Voted_$1805_memory_ptr__fromStack_reversed":{"entryPoint":12656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11048,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr":{"entryPoint":12711,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr":{"entryPoint":11103,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13206,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":14426,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr":{"entryPoint":12683,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr":{"entryPoint":11075,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13178,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_calldata_ptr":{"entryPoint":14368,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":11586,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr":{"entryPoint":13014,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr":{"entryPoint":11304,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13246,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12694,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":11086,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13189,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15865,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":11597,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":13387,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16259,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15062,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":16529,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13866,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":14713,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":11151,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":11730,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10880,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":11445,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":10747,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":11119,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10934,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":14678,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":14568,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":14854,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":11614,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":16595,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_32_ceil":{"entryPoint":14447,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":14101,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":14826,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":14558,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":14296,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":14796,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":13819,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":14054,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15428,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14379,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":14602,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":12219,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":12214,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":12224,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":10742,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10737,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":11656,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":14463,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":14783,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":14654,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db":{"entryPoint":15250,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":16636,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7":{"entryPoint":15475,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808":{"entryPoint":13495,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176":{"entryPoint":16043,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b":{"entryPoint":15935,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3":{"entryPoint":13711,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf":{"entryPoint":16151,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":15876,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42":{"entryPoint":13603,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":16270,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1":{"entryPoint":15583,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70":{"entryPoint":13918,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":15757,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c":{"entryPoint":15114,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":16395,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":14150,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":14476,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":14612,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":12064,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":12482,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":11455,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":10791,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10944,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":14649,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:49869:10","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:10","statements":[{"nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:10"},"nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:10"},"nodeType":"YulFunctionCall","src":"187:12:10"},"nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:10"},"nodeType":"YulFunctionCall","src":"310:12:10"},"nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nodeType":"YulBlock","src":"378:105:10","statements":[{"nodeType":"YulAssignment","src":"388:89:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:10","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:10"},"nodeType":"YulFunctionCall","src":"399:78:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:10"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:10","type":""}],"src":"334:149:10"},{"body":{"nodeType":"YulBlock","src":"531:78:10","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:10"},"nodeType":"YulFunctionCall","src":"589:12:10"},"nodeType":"YulExpressionStatement","src":"589:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:10"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:10"},"nodeType":"YulFunctionCall","src":"561:23:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:10"},"nodeType":"YulFunctionCall","src":"551:34:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:10"},"nodeType":"YulFunctionCall","src":"544:42:10"},"nodeType":"YulIf","src":"541:62:10"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:10","type":""}],"src":"489:120:10"},{"body":{"nodeType":"YulBlock","src":"666:86:10","statements":[{"nodeType":"YulAssignment","src":"676:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:10"},"nodeType":"YulFunctionCall","src":"685:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:10"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:10"},"nodeType":"YulFunctionCall","src":"714:32:10"},"nodeType":"YulExpressionStatement","src":"714:32:10"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:10","type":""}],"src":"615:137:10"},{"body":{"nodeType":"YulBlock","src":"823:262:10","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:10"},"nodeType":"YulFunctionCall","src":"871:79:10"},"nodeType":"YulExpressionStatement","src":"871:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:10"},"nodeType":"YulFunctionCall","src":"840:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:10"},"nodeType":"YulFunctionCall","src":"836:32:10"},"nodeType":"YulIf","src":"833:119:10"},{"nodeType":"YulBlock","src":"962:116:10","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:10"},"nodeType":"YulFunctionCall","src":"1036:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:10"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:10"},"nodeType":"YulFunctionCall","src":"1016:52:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:10","type":""}],"src":"758:327:10"},{"body":{"nodeType":"YulBlock","src":"1133:48:10","statements":[{"nodeType":"YulAssignment","src":"1143:32:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:10"},"nodeType":"YulFunctionCall","src":"1161:13:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:10"},"nodeType":"YulFunctionCall","src":"1154:21:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:10"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:10","type":""}],"src":"1091:90:10"},{"body":{"nodeType":"YulBlock","src":"1246:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:10"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:10"},"nodeType":"YulFunctionCall","src":"1268:21:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:10"},"nodeType":"YulFunctionCall","src":"1256:34:10"},"nodeType":"YulExpressionStatement","src":"1256:34:10"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:10","type":""}],"src":"1187:109:10"},{"body":{"nodeType":"YulBlock","src":"1394:118:10","statements":[{"nodeType":"YulAssignment","src":"1404:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:10"},"nodeType":"YulFunctionCall","src":"1412:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:10"},"nodeType":"YulFunctionCall","src":"1487:17:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:10"},"nodeType":"YulFunctionCall","src":"1440:65:10"},"nodeType":"YulExpressionStatement","src":"1440:65:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:10","type":""}],"src":"1302:210:10"},{"body":{"nodeType":"YulBlock","src":"1563:32:10","statements":[{"nodeType":"YulAssignment","src":"1573:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:10","type":""}],"src":"1518:77:10"},{"body":{"nodeType":"YulBlock","src":"1644:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"1701:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1710:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1703:6:10"},"nodeType":"YulFunctionCall","src":"1703:12:10"},"nodeType":"YulExpressionStatement","src":"1703:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1667:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1692:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1674:17:10"},"nodeType":"YulFunctionCall","src":"1674:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1664:2:10"},"nodeType":"YulFunctionCall","src":"1664:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1657:6:10"},"nodeType":"YulFunctionCall","src":"1657:43:10"},"nodeType":"YulIf","src":"1654:63:10"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:10","type":""}],"src":"1601:122:10"},{"body":{"nodeType":"YulBlock","src":"1781:87:10","statements":[{"nodeType":"YulAssignment","src":"1791:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1800:12:10"},"nodeType":"YulFunctionCall","src":"1800:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1791:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1856:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1829:26:10"},"nodeType":"YulFunctionCall","src":"1829:33:10"},"nodeType":"YulExpressionStatement","src":"1829:33:10"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1759:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1767:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:10","type":""}],"src":"1729:139:10"},{"body":{"nodeType":"YulBlock","src":"1940:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"1986:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1988:77:10"},"nodeType":"YulFunctionCall","src":"1988:79:10"},"nodeType":"YulExpressionStatement","src":"1988:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1961:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1957:3:10"},"nodeType":"YulFunctionCall","src":"1957:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1982:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1953:3:10"},"nodeType":"YulFunctionCall","src":"1953:32:10"},"nodeType":"YulIf","src":"1950:119:10"},{"nodeType":"YulBlock","src":"2079:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2094:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2108:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2098:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2123:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2169:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:10"},"nodeType":"YulFunctionCall","src":"2154:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2178:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2133:20:10"},"nodeType":"YulFunctionCall","src":"2133:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2123:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1910:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1921:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1933:6:10","type":""}],"src":"1874:329:10"},{"body":{"nodeType":"YulBlock","src":"2274:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2291:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2314:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2296:17:10"},"nodeType":"YulFunctionCall","src":"2296:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2284:6:10"},"nodeType":"YulFunctionCall","src":"2284:37:10"},"nodeType":"YulExpressionStatement","src":"2284:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2262:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2269:3:10","type":""}],"src":"2209:118:10"},{"body":{"nodeType":"YulBlock","src":"2431:124:10","statements":[{"nodeType":"YulAssignment","src":"2441:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2453:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2464:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2449:3:10"},"nodeType":"YulFunctionCall","src":"2449:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2441:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2521:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2534:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2545:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2530:3:10"},"nodeType":"YulFunctionCall","src":"2530:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2477:43:10"},"nodeType":"YulFunctionCall","src":"2477:71:10"},"nodeType":"YulExpressionStatement","src":"2477:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2403:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2415:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2426:4:10","type":""}],"src":"2333:222:10"},{"body":{"nodeType":"YulBlock","src":"2658:40:10","statements":[{"nodeType":"YulAssignment","src":"2669:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2685:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2679:5:10"},"nodeType":"YulFunctionCall","src":"2679:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2669:6:10"}]}]},"name":"array_length_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2641:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2651:6:10","type":""}],"src":"2561:137:10"},{"body":{"nodeType":"YulBlock","src":"2838:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2855:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"2860:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2848:6:10"},"nodeType":"YulFunctionCall","src":"2848:19:10"},"nodeType":"YulExpressionStatement","src":"2848:19:10"},{"nodeType":"YulAssignment","src":"2876:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2895:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2900:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2891:3:10"},"nodeType":"YulFunctionCall","src":"2891:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2876:11:10"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2810:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"2815:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2826:11:10","type":""}],"src":"2704:207:10"},{"body":{"nodeType":"YulBlock","src":"3012:60:10","statements":[{"nodeType":"YulAssignment","src":"3022:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3030:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3022:4:10"}]},{"nodeType":"YulAssignment","src":"3043:22:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3055:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3060:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3051:3:10"},"nodeType":"YulFunctionCall","src":"3051:14:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3043:4:10"}]}]},"name":"array_dataslot_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2999:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3007:4:10","type":""}],"src":"2917:155:10"},{"body":{"nodeType":"YulBlock","src":"3123:81:10","statements":[{"nodeType":"YulAssignment","src":"3133:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3148:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3155:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3144:3:10"},"nodeType":"YulFunctionCall","src":"3144:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3133:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3105:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3115:7:10","type":""}],"src":"3078:126:10"},{"body":{"nodeType":"YulBlock","src":"3255:51:10","statements":[{"nodeType":"YulAssignment","src":"3265:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3294:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3276:17:10"},"nodeType":"YulFunctionCall","src":"3276:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3265:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3237:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3247:7:10","type":""}],"src":"3210:96:10"},{"body":{"nodeType":"YulBlock","src":"3367:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3384:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3407:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3389:17:10"},"nodeType":"YulFunctionCall","src":"3389:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3377:6:10"},"nodeType":"YulFunctionCall","src":"3377:37:10"},"nodeType":"YulExpressionStatement","src":"3377:37:10"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3355:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3362:3:10","type":""}],"src":"3312:108:10"},{"body":{"nodeType":"YulBlock","src":"3481:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3498:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3521:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3503:17:10"},"nodeType":"YulFunctionCall","src":"3503:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3491:6:10"},"nodeType":"YulFunctionCall","src":"3491:37:10"},"nodeType":"YulExpressionStatement","src":"3491:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3469:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3476:3:10","type":""}],"src":"3426:108:10"},{"body":{"nodeType":"YulBlock","src":"3589:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3606:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3626:5:10"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3611:14:10"},"nodeType":"YulFunctionCall","src":"3611:21:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3599:6:10"},"nodeType":"YulFunctionCall","src":"3599:34:10"},"nodeType":"YulExpressionStatement","src":"3599:34:10"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3577:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3584:3:10","type":""}],"src":"3540:99:10"},{"body":{"nodeType":"YulBlock","src":"3801:567:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3811:26:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3827:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3832:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3823:3:10"},"nodeType":"YulFunctionCall","src":"3823:14:10"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"3815:4:10","type":""}]},{"nodeType":"YulBlock","src":"3847:165:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3883:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3913:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3920:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3909:3:10"},"nodeType":"YulFunctionCall","src":"3909:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3903:5:10"},"nodeType":"YulFunctionCall","src":"3903:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3887:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3973:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3991:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3996:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3987:3:10"},"nodeType":"YulFunctionCall","src":"3987:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3939:33:10"},"nodeType":"YulFunctionCall","src":"3939:63:10"},"nodeType":"YulExpressionStatement","src":"3939:63:10"}]},{"nodeType":"YulBlock","src":"4022:169:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4062:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4092:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4099:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4088:3:10"},"nodeType":"YulFunctionCall","src":"4088:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4082:5:10"},"nodeType":"YulFunctionCall","src":"4082:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4066:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4152:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4170:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4175:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4166:3:10"},"nodeType":"YulFunctionCall","src":"4166:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4118:33:10"},"nodeType":"YulFunctionCall","src":"4118:63:10"},"nodeType":"YulExpressionStatement","src":"4118:63:10"}]},{"nodeType":"YulBlock","src":"4201:160:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4238:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4268:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4275:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4264:3:10"},"nodeType":"YulFunctionCall","src":"4264:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4258:5:10"},"nodeType":"YulFunctionCall","src":"4258:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4242:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4322:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4340:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4345:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4336:3:10"},"nodeType":"YulFunctionCall","src":"4336:14:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"4294:27:10"},"nodeType":"YulFunctionCall","src":"4294:57:10"},"nodeType":"YulExpressionStatement","src":"4294:57:10"}]}]},"name":"abi_encode_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3788:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3795:3:10","type":""}],"src":"3699:669:10"},{"body":{"nodeType":"YulBlock","src":"4500:145:10","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4590:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"4598:3:10"}],"functionName":{"name":"abi_encode_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr","nodeType":"YulIdentifier","src":"4510:79:10"},"nodeType":"YulFunctionCall","src":"4510:92:10"},"nodeType":"YulExpressionStatement","src":"4510:92:10"},{"nodeType":"YulAssignment","src":"4611:28:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4629:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4634:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4625:3:10"},"nodeType":"YulFunctionCall","src":"4625:14:10"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4611:10:10"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4473:6:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4481:3:10","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4489:10:10","type":""}],"src":"4374:271:10"},{"body":{"nodeType":"YulBlock","src":"4749:38:10","statements":[{"nodeType":"YulAssignment","src":"4759:22:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4771:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4776:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4767:3:10"},"nodeType":"YulFunctionCall","src":"4767:14:10"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"4759:4:10"}]}]},"name":"array_nextElement_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4736:3:10","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"4744:4:10","type":""}],"src":"4651:136:10"},{"body":{"nodeType":"YulBlock","src":"5021:746:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5031:91:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5116:5:10"}],"functionName":{"name":"array_length_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5045:70:10"},"nodeType":"YulFunctionCall","src":"5045:77:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5035:6:10","type":""}]},{"nodeType":"YulAssignment","src":"5131:116:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5235:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"5240:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5138:96:10"},"nodeType":"YulFunctionCall","src":"5138:109:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5131:3:10"}]},{"nodeType":"YulVariableDeclaration","src":"5256:94:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5344:5:10"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5271:72:10"},"nodeType":"YulFunctionCall","src":"5271:79:10"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5260:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5359:21:10","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5373:7:10"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5363:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5449:293:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5463:34:10","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5490:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5484:5:10"},"nodeType":"YulFunctionCall","src":"5484:13:10"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5467:13:10","type":""}]},{"nodeType":"YulAssignment","src":"5510:116:10","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"5607:13:10"},{"name":"pos","nodeType":"YulIdentifier","src":"5622:3:10"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr","nodeType":"YulIdentifier","src":"5517:89:10"},"nodeType":"YulFunctionCall","src":"5517:109:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5510:3:10"}]},{"nodeType":"YulAssignment","src":"5639:93:10","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5725:6:10"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5649:75:10"},"nodeType":"YulFunctionCall","src":"5649:83:10"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5639:6:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5411:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"5414:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5408:2:10"},"nodeType":"YulFunctionCall","src":"5408:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5422:18:10","statements":[{"nodeType":"YulAssignment","src":"5424:14:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5433:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"5436:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5429:3:10"},"nodeType":"YulFunctionCall","src":"5429:9:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5424:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"5393:14:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5395:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5404:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5399:1:10","type":""}]}]},"src":"5389:353:10"},{"nodeType":"YulAssignment","src":"5751:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"5758:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5751:3:10"}]}]},"name":"abi_encode_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5000:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5007:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5016:3:10","type":""}],"src":"4851:916:10"},{"body":{"nodeType":"YulBlock","src":"5967:271:10","statements":[{"nodeType":"YulAssignment","src":"5977:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5989:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6000:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5985:3:10"},"nodeType":"YulFunctionCall","src":"5985:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5977:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6024:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6035:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6020:3:10"},"nodeType":"YulFunctionCall","src":"6020:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6043:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6049:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6039:3:10"},"nodeType":"YulFunctionCall","src":"6039:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6013:6:10"},"nodeType":"YulFunctionCall","src":"6013:47:10"},"nodeType":"YulExpressionStatement","src":"6013:47:10"},{"nodeType":"YulAssignment","src":"6069:162:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6217:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"6226:4:10"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6077:139:10"},"nodeType":"YulFunctionCall","src":"6077:154:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6069:4:10"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5939:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5951:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5962:4:10","type":""}],"src":"5773:465:10"},{"body":{"nodeType":"YulBlock","src":"6289:32:10","statements":[{"nodeType":"YulAssignment","src":"6299:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"6310:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6299:7:10"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6271:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6281:7:10","type":""}],"src":"6244:77:10"},{"body":{"nodeType":"YulBlock","src":"6370:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"6427:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6436:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6439:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6429:6:10"},"nodeType":"YulFunctionCall","src":"6429:12:10"},"nodeType":"YulExpressionStatement","src":"6429:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6393:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6418:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6400:17:10"},"nodeType":"YulFunctionCall","src":"6400:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6390:2:10"},"nodeType":"YulFunctionCall","src":"6390:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6383:6:10"},"nodeType":"YulFunctionCall","src":"6383:43:10"},"nodeType":"YulIf","src":"6380:63:10"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6363:5:10","type":""}],"src":"6327:122:10"},{"body":{"nodeType":"YulBlock","src":"6507:87:10","statements":[{"nodeType":"YulAssignment","src":"6517:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6539:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6526:12:10"},"nodeType":"YulFunctionCall","src":"6526:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6517:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6582:5:10"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"6555:26:10"},"nodeType":"YulFunctionCall","src":"6555:33:10"},"nodeType":"YulExpressionStatement","src":"6555:33:10"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6485:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"6493:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6501:5:10","type":""}],"src":"6455:139:10"},{"body":{"nodeType":"YulBlock","src":"6666:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"6712:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6714:77:10"},"nodeType":"YulFunctionCall","src":"6714:79:10"},"nodeType":"YulExpressionStatement","src":"6714:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6687:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6696:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6683:3:10"},"nodeType":"YulFunctionCall","src":"6683:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"6708:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6679:3:10"},"nodeType":"YulFunctionCall","src":"6679:32:10"},"nodeType":"YulIf","src":"6676:119:10"},{"nodeType":"YulBlock","src":"6805:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6820:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"6834:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6824:6:10","type":""}]},{"nodeType":"YulAssignment","src":"6849:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6884:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"6895:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6880:3:10"},"nodeType":"YulFunctionCall","src":"6880:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6904:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6859:20:10"},"nodeType":"YulFunctionCall","src":"6859:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6849:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6636:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6647:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6659:6:10","type":""}],"src":"6600:329:10"},{"body":{"nodeType":"YulBlock","src":"7000:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7017:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7040:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7022:17:10"},"nodeType":"YulFunctionCall","src":"7022:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7010:6:10"},"nodeType":"YulFunctionCall","src":"7010:37:10"},"nodeType":"YulExpressionStatement","src":"7010:37:10"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6988:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6995:3:10","type":""}],"src":"6935:118:10"},{"body":{"nodeType":"YulBlock","src":"7157:124:10","statements":[{"nodeType":"YulAssignment","src":"7167:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7179:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7190:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7175:3:10"},"nodeType":"YulFunctionCall","src":"7175:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7167:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7247:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7260:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7271:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7256:3:10"},"nodeType":"YulFunctionCall","src":"7256:17:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7203:43:10"},"nodeType":"YulFunctionCall","src":"7203:71:10"},"nodeType":"YulExpressionStatement","src":"7203:71:10"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7129:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7141:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7152:4:10","type":""}],"src":"7059:222:10"},{"body":{"nodeType":"YulBlock","src":"7346:40:10","statements":[{"nodeType":"YulAssignment","src":"7357:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7373:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7367:5:10"},"nodeType":"YulFunctionCall","src":"7367:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7357:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7329:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7339:6:10","type":""}],"src":"7287:99:10"},{"body":{"nodeType":"YulBlock","src":"7478:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7495:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"7500:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7488:6:10"},"nodeType":"YulFunctionCall","src":"7488:19:10"},"nodeType":"YulExpressionStatement","src":"7488:19:10"},{"nodeType":"YulAssignment","src":"7516:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7535:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"7540:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7531:3:10"},"nodeType":"YulFunctionCall","src":"7531:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7516:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7450:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"7455:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7466:11:10","type":""}],"src":"7392:159:10"},{"body":{"nodeType":"YulBlock","src":"7619:184:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7629:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7638:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7633:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"7698:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7723:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"7728:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7719:3:10"},"nodeType":"YulFunctionCall","src":"7719:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7742:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"7747:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7738:3:10"},"nodeType":"YulFunctionCall","src":"7738:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7732:5:10"},"nodeType":"YulFunctionCall","src":"7732:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7712:6:10"},"nodeType":"YulFunctionCall","src":"7712:39:10"},"nodeType":"YulExpressionStatement","src":"7712:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7659:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"7662:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7656:2:10"},"nodeType":"YulFunctionCall","src":"7656:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7670:19:10","statements":[{"nodeType":"YulAssignment","src":"7672:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7681:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"7684:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7677:3:10"},"nodeType":"YulFunctionCall","src":"7677:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7672:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"7652:3:10","statements":[]},"src":"7648:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7781:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"7786:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7777:3:10"},"nodeType":"YulFunctionCall","src":"7777:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"7795:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7770:6:10"},"nodeType":"YulFunctionCall","src":"7770:27:10"},"nodeType":"YulExpressionStatement","src":"7770:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7601:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7606:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"7611:6:10","type":""}],"src":"7557:246:10"},{"body":{"nodeType":"YulBlock","src":"7857:54:10","statements":[{"nodeType":"YulAssignment","src":"7867:38:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7885:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"7892:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7881:3:10"},"nodeType":"YulFunctionCall","src":"7881:14:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7901:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7897:3:10"},"nodeType":"YulFunctionCall","src":"7897:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7877:3:10"},"nodeType":"YulFunctionCall","src":"7877:28:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7867:6:10"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7840:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7850:6:10","type":""}],"src":"7809:102:10"},{"body":{"nodeType":"YulBlock","src":"7999:275:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8009:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8056:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8023:32:10"},"nodeType":"YulFunctionCall","src":"8023:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8013:6:10","type":""}]},{"nodeType":"YulAssignment","src":"8071:68:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8127:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"8132:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8078:48:10"},"nodeType":"YulFunctionCall","src":"8078:61:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8071:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8187:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"8194:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8183:3:10"},"nodeType":"YulFunctionCall","src":"8183:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"8201:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"8206:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8148:34:10"},"nodeType":"YulFunctionCall","src":"8148:65:10"},"nodeType":"YulExpressionStatement","src":"8148:65:10"},{"nodeType":"YulAssignment","src":"8222:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8233:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8260:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8238:21:10"},"nodeType":"YulFunctionCall","src":"8238:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8229:3:10"},"nodeType":"YulFunctionCall","src":"8229:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8222:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7980:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7987:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7995:3:10","type":""}],"src":"7917:357:10"},{"body":{"nodeType":"YulBlock","src":"8333:51:10","statements":[{"nodeType":"YulAssignment","src":"8343:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8372:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8354:17:10"},"nodeType":"YulFunctionCall","src":"8354:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8343:7:10"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8315:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8325:7:10","type":""}],"src":"8280:104:10"},{"body":{"nodeType":"YulBlock","src":"8461:61:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8478:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8509:5:10"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"8483:25:10"},"nodeType":"YulFunctionCall","src":"8483:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8471:6:10"},"nodeType":"YulFunctionCall","src":"8471:45:10"},"nodeType":"YulExpressionStatement","src":"8471:45:10"}]},"name":"abi_encode_t_address_payable_to_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8449:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8456:3:10","type":""}],"src":"8390:132:10"},{"body":{"nodeType":"YulBlock","src":"8718:2351:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8728:28:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8744:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8749:6:10","type":"","value":"0x0180"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:10"},"nodeType":"YulFunctionCall","src":"8740:16:10"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"8732:4:10","type":""}]},{"nodeType":"YulBlock","src":"8766:162:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8799:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8829:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"8836:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8825:3:10"},"nodeType":"YulFunctionCall","src":"8825:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8819:5:10"},"nodeType":"YulFunctionCall","src":"8819:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8803:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8889:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8907:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8912:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8903:3:10"},"nodeType":"YulFunctionCall","src":"8903:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8855:33:10"},"nodeType":"YulFunctionCall","src":"8855:63:10"},"nodeType":"YulExpressionStatement","src":"8855:63:10"}]},{"nodeType":"YulBlock","src":"8938:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8975:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9005:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"9012:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9001:3:10"},"nodeType":"YulFunctionCall","src":"9001:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8995:5:10"},"nodeType":"YulFunctionCall","src":"8995:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8979:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9065:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9083:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9088:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9079:3:10"},"nodeType":"YulFunctionCall","src":"9079:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9031:33:10"},"nodeType":"YulFunctionCall","src":"9031:63:10"},"nodeType":"YulExpressionStatement","src":"9031:63:10"}]},{"nodeType":"YulBlock","src":"9114:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9151:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9181:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"9188:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9177:3:10"},"nodeType":"YulFunctionCall","src":"9177:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9171:5:10"},"nodeType":"YulFunctionCall","src":"9171:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9155:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9241:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9259:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9264:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9255:3:10"},"nodeType":"YulFunctionCall","src":"9255:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9207:33:10"},"nodeType":"YulFunctionCall","src":"9207:63:10"},"nodeType":"YulExpressionStatement","src":"9207:63:10"}]},{"nodeType":"YulBlock","src":"9290:169:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9330:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9360:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"9367:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9356:3:10"},"nodeType":"YulFunctionCall","src":"9356:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9350:5:10"},"nodeType":"YulFunctionCall","src":"9350:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9334:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9420:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9438:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9443:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9434:3:10"},"nodeType":"YulFunctionCall","src":"9434:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9386:33:10"},"nodeType":"YulFunctionCall","src":"9386:63:10"},"nodeType":"YulExpressionStatement","src":"9386:63:10"}]},{"nodeType":"YulBlock","src":"9469:168:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9508:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9538:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"9545:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9534:3:10"},"nodeType":"YulFunctionCall","src":"9534:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9528:5:10"},"nodeType":"YulFunctionCall","src":"9528:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9512:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9598:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9616:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9621:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9612:3:10"},"nodeType":"YulFunctionCall","src":"9612:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9564:33:10"},"nodeType":"YulFunctionCall","src":"9564:63:10"},"nodeType":"YulExpressionStatement","src":"9564:63:10"}]},{"nodeType":"YulBlock","src":"9647:236:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9683:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9713:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"9720:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9709:3:10"},"nodeType":"YulFunctionCall","src":"9709:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9703:5:10"},"nodeType":"YulFunctionCall","src":"9703:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9687:12:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9751:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9756:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9747:3:10"},"nodeType":"YulFunctionCall","src":"9747:14:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9767:4:10"},{"name":"pos","nodeType":"YulIdentifier","src":"9773:3:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9763:3:10"},"nodeType":"YulFunctionCall","src":"9763:14:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9740:6:10"},"nodeType":"YulFunctionCall","src":"9740:38:10"},"nodeType":"YulExpressionStatement","src":"9740:38:10"},{"nodeType":"YulAssignment","src":"9791:81:10","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9853:12:10"},{"name":"tail","nodeType":"YulIdentifier","src":"9867:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9799:53:10"},"nodeType":"YulFunctionCall","src":"9799:73:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9791:4:10"}]}]},{"nodeType":"YulBlock","src":"9893:242:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9935:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9965:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"9972:4:10","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9961:3:10"},"nodeType":"YulFunctionCall","src":"9961:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9955:5:10"},"nodeType":"YulFunctionCall","src":"9955:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9939:12:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10003:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10008:4:10","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9999:3:10"},"nodeType":"YulFunctionCall","src":"9999:14:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10019:4:10"},{"name":"pos","nodeType":"YulIdentifier","src":"10025:3:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10015:3:10"},"nodeType":"YulFunctionCall","src":"10015:14:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9992:6:10"},"nodeType":"YulFunctionCall","src":"9992:38:10"},"nodeType":"YulExpressionStatement","src":"9992:38:10"},{"nodeType":"YulAssignment","src":"10043:81:10","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10105:12:10"},{"name":"tail","nodeType":"YulIdentifier","src":"10119:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10051:53:10"},"nodeType":"YulFunctionCall","src":"10051:73:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10043:4:10"}]}]},{"nodeType":"YulBlock","src":"10145:158:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10180:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10210:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"10217:4:10","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10206:3:10"},"nodeType":"YulFunctionCall","src":"10206:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10200:5:10"},"nodeType":"YulFunctionCall","src":"10200:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10184:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10264:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10282:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10287:4:10","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10278:3:10"},"nodeType":"YulFunctionCall","src":"10278:14:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"10236:27:10"},"nodeType":"YulFunctionCall","src":"10236:57:10"},"nodeType":"YulExpressionStatement","src":"10236:57:10"}]},{"nodeType":"YulBlock","src":"10313:164:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10350:45:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10380:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"10387:6:10","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10376:3:10"},"nodeType":"YulFunctionCall","src":"10376:18:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10370:5:10"},"nodeType":"YulFunctionCall","src":"10370:25:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10354:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10436:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10454:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10459:6:10","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10450:3:10"},"nodeType":"YulFunctionCall","src":"10450:16:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"10408:27:10"},"nodeType":"YulFunctionCall","src":"10408:59:10"},"nodeType":"YulExpressionStatement","src":"10408:59:10"}]},{"nodeType":"YulBlock","src":"10487:191:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10529:45:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10559:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"10566:6:10","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10555:3:10"},"nodeType":"YulFunctionCall","src":"10555:18:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10549:5:10"},"nodeType":"YulFunctionCall","src":"10549:25:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10533:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10637:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10655:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10660:6:10","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10651:3:10"},"nodeType":"YulFunctionCall","src":"10651:16:10"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable","nodeType":"YulIdentifier","src":"10587:49:10"},"nodeType":"YulFunctionCall","src":"10587:81:10"},"nodeType":"YulExpressionStatement","src":"10587:81:10"}]},{"nodeType":"YulBlock","src":"10688:172:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10727:45:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10757:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"10764:6:10","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10753:3:10"},"nodeType":"YulFunctionCall","src":"10753:18:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10747:5:10"},"nodeType":"YulFunctionCall","src":"10747:25:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10731:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10819:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10837:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10842:6:10","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10833:3:10"},"nodeType":"YulFunctionCall","src":"10833:16:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"10785:33:10"},"nodeType":"YulFunctionCall","src":"10785:65:10"},"nodeType":"YulExpressionStatement","src":"10785:65:10"}]},{"nodeType":"YulBlock","src":"10870:172:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10909:45:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10939:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"10946:6:10","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10935:3:10"},"nodeType":"YulFunctionCall","src":"10935:18:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10929:5:10"},"nodeType":"YulFunctionCall","src":"10929:25:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10913:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11001:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11019:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"11024:6:10","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11015:3:10"},"nodeType":"YulFunctionCall","src":"11015:16:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"10967:33:10"},"nodeType":"YulFunctionCall","src":"10967:65:10"},"nodeType":"YulExpressionStatement","src":"10967:65:10"}]},{"nodeType":"YulAssignment","src":"11052:11:10","value":{"name":"tail","nodeType":"YulIdentifier","src":"11059:4:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11052:3:10"}]}]},"name":"abi_encode_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8697:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8704:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8713:3:10","type":""}],"src":"8590:2479:10"},{"body":{"nodeType":"YulBlock","src":"11227:229:10","statements":[{"nodeType":"YulAssignment","src":"11237:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11249:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11260:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11245:3:10"},"nodeType":"YulFunctionCall","src":"11245:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11237:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11284:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11295:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11280:3:10"},"nodeType":"YulFunctionCall","src":"11280:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11303:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"11309:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11299:3:10"},"nodeType":"YulFunctionCall","src":"11299:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11273:6:10"},"nodeType":"YulFunctionCall","src":"11273:47:10"},"nodeType":"YulExpressionStatement","src":"11273:47:10"},{"nodeType":"YulAssignment","src":"11329:120:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11435:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"11444:4:10"}],"functionName":{"name":"abi_encode_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11337:97:10"},"nodeType":"YulFunctionCall","src":"11337:112:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11329:4:10"}]}]},"name":"abi_encode_tuple_t_struct$_Proposals_$1798_memory_ptr__to_t_struct$_Proposals_$1798_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11199:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11211:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11222:4:10","type":""}],"src":"11075:381:10"},{"body":{"nodeType":"YulBlock","src":"11505:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"11562:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11571:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11574:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11564:6:10"},"nodeType":"YulFunctionCall","src":"11564:12:10"},"nodeType":"YulExpressionStatement","src":"11564:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11528:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11553:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11535:17:10"},"nodeType":"YulFunctionCall","src":"11535:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11525:2:10"},"nodeType":"YulFunctionCall","src":"11525:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11518:6:10"},"nodeType":"YulFunctionCall","src":"11518:43:10"},"nodeType":"YulIf","src":"11515:63:10"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11498:5:10","type":""}],"src":"11462:122:10"},{"body":{"nodeType":"YulBlock","src":"11642:87:10","statements":[{"nodeType":"YulAssignment","src":"11652:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11674:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11661:12:10"},"nodeType":"YulFunctionCall","src":"11661:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11652:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11717:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"11690:26:10"},"nodeType":"YulFunctionCall","src":"11690:33:10"},"nodeType":"YulExpressionStatement","src":"11690:33:10"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11620:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"11628:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11636:5:10","type":""}],"src":"11590:139:10"},{"body":{"nodeType":"YulBlock","src":"11818:391:10","statements":[{"body":{"nodeType":"YulBlock","src":"11864:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11866:77:10"},"nodeType":"YulFunctionCall","src":"11866:79:10"},"nodeType":"YulExpressionStatement","src":"11866:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11839:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"11848:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11835:3:10"},"nodeType":"YulFunctionCall","src":"11835:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"11860:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11831:3:10"},"nodeType":"YulFunctionCall","src":"11831:32:10"},"nodeType":"YulIf","src":"11828:119:10"},{"nodeType":"YulBlock","src":"11957:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"11972:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"11986:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11976:6:10","type":""}]},{"nodeType":"YulAssignment","src":"12001:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12036:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"12047:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12032:3:10"},"nodeType":"YulFunctionCall","src":"12032:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12056:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12011:20:10"},"nodeType":"YulFunctionCall","src":"12011:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12001:6:10"}]}]},{"nodeType":"YulBlock","src":"12084:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"12099:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"12113:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12103:6:10","type":""}]},{"nodeType":"YulAssignment","src":"12129:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12164:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"12175:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12160:3:10"},"nodeType":"YulFunctionCall","src":"12160:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12184:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12139:20:10"},"nodeType":"YulFunctionCall","src":"12139:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12129:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11780:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11791:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11803:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11811:6:10","type":""}],"src":"11735:474:10"},{"body":{"nodeType":"YulBlock","src":"12280:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12297:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12320:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12302:17:10"},"nodeType":"YulFunctionCall","src":"12302:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12290:6:10"},"nodeType":"YulFunctionCall","src":"12290:37:10"},"nodeType":"YulExpressionStatement","src":"12290:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12268:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12275:3:10","type":""}],"src":"12215:118:10"},{"body":{"nodeType":"YulBlock","src":"12437:124:10","statements":[{"nodeType":"YulAssignment","src":"12447:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12459:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12470:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12455:3:10"},"nodeType":"YulFunctionCall","src":"12455:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12447:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12527:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12540:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12551:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12536:3:10"},"nodeType":"YulFunctionCall","src":"12536:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12483:43:10"},"nodeType":"YulFunctionCall","src":"12483:71:10"},"nodeType":"YulExpressionStatement","src":"12483:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12409:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12421:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12432:4:10","type":""}],"src":"12339:222:10"},{"body":{"nodeType":"YulBlock","src":"12656:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12673:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12676:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12666:6:10"},"nodeType":"YulFunctionCall","src":"12666:12:10"},"nodeType":"YulExpressionStatement","src":"12666:12:10"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"12567:117:10"},{"body":{"nodeType":"YulBlock","src":"12779:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12796:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12799:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12789:6:10"},"nodeType":"YulFunctionCall","src":"12789:12:10"},"nodeType":"YulExpressionStatement","src":"12789:12:10"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"12690:117:10"},{"body":{"nodeType":"YulBlock","src":"12902:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12919:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12922:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12912:6:10"},"nodeType":"YulFunctionCall","src":"12912:12:10"},"nodeType":"YulExpressionStatement","src":"12912:12:10"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"12813:117:10"},{"body":{"nodeType":"YulBlock","src":"13025:478:10","statements":[{"body":{"nodeType":"YulBlock","src":"13074:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13076:77:10"},"nodeType":"YulFunctionCall","src":"13076:79:10"},"nodeType":"YulExpressionStatement","src":"13076:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13053:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13061:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13049:3:10"},"nodeType":"YulFunctionCall","src":"13049:17:10"},{"name":"end","nodeType":"YulIdentifier","src":"13068:3:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13045:3:10"},"nodeType":"YulFunctionCall","src":"13045:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13038:6:10"},"nodeType":"YulFunctionCall","src":"13038:35:10"},"nodeType":"YulIf","src":"13035:122:10"},{"nodeType":"YulAssignment","src":"13166:30:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13189:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13176:12:10"},"nodeType":"YulFunctionCall","src":"13176:20:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13166:6:10"}]},{"body":{"nodeType":"YulBlock","src":"13239:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"13241:77:10"},"nodeType":"YulFunctionCall","src":"13241:79:10"},"nodeType":"YulExpressionStatement","src":"13241:79:10"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13211:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13219:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13208:2:10"},"nodeType":"YulFunctionCall","src":"13208:30:10"},"nodeType":"YulIf","src":"13205:117:10"},{"nodeType":"YulAssignment","src":"13331:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13347:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13355:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13343:3:10"},"nodeType":"YulFunctionCall","src":"13343:17:10"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"13331:8:10"}]},{"body":{"nodeType":"YulBlock","src":"13414:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"13416:77:10"},"nodeType":"YulFunctionCall","src":"13416:79:10"},"nodeType":"YulExpressionStatement","src":"13416:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"13379:8:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13393:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13401:4:10","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13389:3:10"},"nodeType":"YulFunctionCall","src":"13389:17:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13375:3:10"},"nodeType":"YulFunctionCall","src":"13375:32:10"},{"name":"end","nodeType":"YulIdentifier","src":"13409:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13372:2:10"},"nodeType":"YulFunctionCall","src":"13372:41:10"},"nodeType":"YulIf","src":"13369:128:10"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12992:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"13000:3:10","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"13008:8:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"13018:6:10","type":""}],"src":"12950:553:10"},{"body":{"nodeType":"YulBlock","src":"13666:1008:10","statements":[{"body":{"nodeType":"YulBlock","src":"13713:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13715:77:10"},"nodeType":"YulFunctionCall","src":"13715:79:10"},"nodeType":"YulExpressionStatement","src":"13715:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13687:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"13696:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13683:3:10"},"nodeType":"YulFunctionCall","src":"13683:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"13708:3:10","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13679:3:10"},"nodeType":"YulFunctionCall","src":"13679:33:10"},"nodeType":"YulIf","src":"13676:120:10"},{"nodeType":"YulBlock","src":"13806:297:10","statements":[{"nodeType":"YulVariableDeclaration","src":"13821:45:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13852:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13863:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13848:3:10"},"nodeType":"YulFunctionCall","src":"13848:17:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13835:12:10"},"nodeType":"YulFunctionCall","src":"13835:31:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13825:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"13913:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13915:77:10"},"nodeType":"YulFunctionCall","src":"13915:79:10"},"nodeType":"YulExpressionStatement","src":"13915:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13885:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13893:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13882:2:10"},"nodeType":"YulFunctionCall","src":"13882:30:10"},"nodeType":"YulIf","src":"13879:117:10"},{"nodeType":"YulAssignment","src":"14010:83:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14065:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"14076:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14061:3:10"},"nodeType":"YulFunctionCall","src":"14061:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14085:7:10"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"14028:32:10"},"nodeType":"YulFunctionCall","src":"14028:65:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14010:6:10"},{"name":"value1","nodeType":"YulIdentifier","src":"14018:6:10"}]}]},{"nodeType":"YulBlock","src":"14113:298:10","statements":[{"nodeType":"YulVariableDeclaration","src":"14128:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14159:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14170:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14155:3:10"},"nodeType":"YulFunctionCall","src":"14155:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14142:12:10"},"nodeType":"YulFunctionCall","src":"14142:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14132:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"14221:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14223:77:10"},"nodeType":"YulFunctionCall","src":"14223:79:10"},"nodeType":"YulExpressionStatement","src":"14223:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14193:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"14201:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14190:2:10"},"nodeType":"YulFunctionCall","src":"14190:30:10"},"nodeType":"YulIf","src":"14187:117:10"},{"nodeType":"YulAssignment","src":"14318:83:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14373:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"14384:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14369:3:10"},"nodeType":"YulFunctionCall","src":"14369:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14393:7:10"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"14336:32:10"},"nodeType":"YulFunctionCall","src":"14336:65:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14318:6:10"},{"name":"value3","nodeType":"YulIdentifier","src":"14326:6:10"}]}]},{"nodeType":"YulBlock","src":"14421:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"14436:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"14450:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14440:6:10","type":""}]},{"nodeType":"YulAssignment","src":"14466:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14501:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"14512:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14497:3:10"},"nodeType":"YulFunctionCall","src":"14497:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14521:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14476:20:10"},"nodeType":"YulFunctionCall","src":"14476:53:10"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"14466:6:10"}]}]},{"nodeType":"YulBlock","src":"14549:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"14564:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"14578:2:10","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14568:6:10","type":""}]},{"nodeType":"YulAssignment","src":"14594:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14629:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"14640:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14625:3:10"},"nodeType":"YulFunctionCall","src":"14625:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14649:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14604:20:10"},"nodeType":"YulFunctionCall","src":"14604:53:10"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"14594:6:10"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13596:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13607:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13619:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13627:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13635:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13643:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13651:6:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13659:6:10","type":""}],"src":"13509:1165:10"},{"body":{"nodeType":"YulBlock","src":"14720:76:10","statements":[{"body":{"nodeType":"YulBlock","src":"14774:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14783:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14786:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14776:6:10"},"nodeType":"YulFunctionCall","src":"14776:12:10"},"nodeType":"YulExpressionStatement","src":"14776:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14743:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14765:5:10"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"14750:14:10"},"nodeType":"YulFunctionCall","src":"14750:21:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14740:2:10"},"nodeType":"YulFunctionCall","src":"14740:32:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14733:6:10"},"nodeType":"YulFunctionCall","src":"14733:40:10"},"nodeType":"YulIf","src":"14730:60:10"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14713:5:10","type":""}],"src":"14680:116:10"},{"body":{"nodeType":"YulBlock","src":"14851:84:10","statements":[{"nodeType":"YulAssignment","src":"14861:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14883:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14870:12:10"},"nodeType":"YulFunctionCall","src":"14870:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14861:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14923:5:10"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"14899:23:10"},"nodeType":"YulFunctionCall","src":"14899:30:10"},"nodeType":"YulExpressionStatement","src":"14899:30:10"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14829:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"14837:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14845:5:10","type":""}],"src":"14802:133:10"},{"body":{"nodeType":"YulBlock","src":"15021:388:10","statements":[{"body":{"nodeType":"YulBlock","src":"15067:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15069:77:10"},"nodeType":"YulFunctionCall","src":"15069:79:10"},"nodeType":"YulExpressionStatement","src":"15069:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15042:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"15051:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15038:3:10"},"nodeType":"YulFunctionCall","src":"15038:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"15063:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15034:3:10"},"nodeType":"YulFunctionCall","src":"15034:32:10"},"nodeType":"YulIf","src":"15031:119:10"},{"nodeType":"YulBlock","src":"15160:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"15175:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"15189:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15179:6:10","type":""}]},{"nodeType":"YulAssignment","src":"15204:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15239:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"15250:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15235:3:10"},"nodeType":"YulFunctionCall","src":"15235:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15259:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15214:20:10"},"nodeType":"YulFunctionCall","src":"15214:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15204:6:10"}]}]},{"nodeType":"YulBlock","src":"15287:115:10","statements":[{"nodeType":"YulVariableDeclaration","src":"15302:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"15316:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15306:6:10","type":""}]},{"nodeType":"YulAssignment","src":"15332:60:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15364:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"15375:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15360:3:10"},"nodeType":"YulFunctionCall","src":"15360:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15384:7:10"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"15342:17:10"},"nodeType":"YulFunctionCall","src":"15342:50:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15332:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14983:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14994:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15006:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15014:6:10","type":""}],"src":"14941:468:10"},{"body":{"nodeType":"YulBlock","src":"15581:567:10","statements":[{"nodeType":"YulVariableDeclaration","src":"15591:26:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15607:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15612:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15603:3:10"},"nodeType":"YulFunctionCall","src":"15603:14:10"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"15595:4:10","type":""}]},{"nodeType":"YulBlock","src":"15627:165:10","statements":[{"nodeType":"YulVariableDeclaration","src":"15663:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15693:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"15700:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15689:3:10"},"nodeType":"YulFunctionCall","src":"15689:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15683:5:10"},"nodeType":"YulFunctionCall","src":"15683:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15667:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15753:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15771:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15776:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15767:3:10"},"nodeType":"YulFunctionCall","src":"15767:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"15719:33:10"},"nodeType":"YulFunctionCall","src":"15719:63:10"},"nodeType":"YulExpressionStatement","src":"15719:63:10"}]},{"nodeType":"YulBlock","src":"15802:169:10","statements":[{"nodeType":"YulVariableDeclaration","src":"15842:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15872:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"15879:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15868:3:10"},"nodeType":"YulFunctionCall","src":"15868:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15862:5:10"},"nodeType":"YulFunctionCall","src":"15862:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15846:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15932:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15950:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15955:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15946:3:10"},"nodeType":"YulFunctionCall","src":"15946:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15898:33:10"},"nodeType":"YulFunctionCall","src":"15898:63:10"},"nodeType":"YulExpressionStatement","src":"15898:63:10"}]},{"nodeType":"YulBlock","src":"15981:160:10","statements":[{"nodeType":"YulVariableDeclaration","src":"16018:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16048:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"16055:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16044:3:10"},"nodeType":"YulFunctionCall","src":"16044:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16038:5:10"},"nodeType":"YulFunctionCall","src":"16038:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16022:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16102:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16120:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"16125:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16116:3:10"},"nodeType":"YulFunctionCall","src":"16116:14:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"16074:27:10"},"nodeType":"YulFunctionCall","src":"16074:57:10"},"nodeType":"YulExpressionStatement","src":"16074:57:10"}]}]},"name":"abi_encode_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15568:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15575:3:10","type":""}],"src":"15469:679:10"},{"body":{"nodeType":"YulBlock","src":"16298:170:10","statements":[{"nodeType":"YulAssignment","src":"16308:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16320:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16331:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16316:3:10"},"nodeType":"YulFunctionCall","src":"16316:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16308:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16434:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16447:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16458:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16443:3:10"},"nodeType":"YulFunctionCall","src":"16443:17:10"}],"functionName":{"name":"abi_encode_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16344:89:10"},"nodeType":"YulFunctionCall","src":"16344:117:10"},"nodeType":"YulExpressionStatement","src":"16344:117:10"}]},"name":"abi_encode_tuple_t_struct$_Voted_$1805_memory_ptr__to_t_struct$_Voted_$1805_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16270:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16282:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16293:4:10","type":""}],"src":"16154:314:10"},{"body":{"nodeType":"YulBlock","src":"16575:40:10","statements":[{"nodeType":"YulAssignment","src":"16586:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16602:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16596:5:10"},"nodeType":"YulFunctionCall","src":"16596:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16586:6:10"}]}]},"name":"array_length_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16558:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16568:6:10","type":""}],"src":"16474:141:10"},{"body":{"nodeType":"YulBlock","src":"16759:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16776:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"16781:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16769:6:10"},"nodeType":"YulFunctionCall","src":"16769:19:10"},"nodeType":"YulExpressionStatement","src":"16769:19:10"},{"nodeType":"YulAssignment","src":"16797:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16816:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"16821:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16812:3:10"},"nodeType":"YulFunctionCall","src":"16812:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16797:11:10"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16731:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"16736:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16747:11:10","type":""}],"src":"16621:211:10"},{"body":{"nodeType":"YulBlock","src":"16937:60:10","statements":[{"nodeType":"YulAssignment","src":"16947:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16955:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16947:4:10"}]},{"nodeType":"YulAssignment","src":"16968:22:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16980:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16976:3:10"},"nodeType":"YulFunctionCall","src":"16976:14:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16968:4:10"}]}]},"name":"array_dataslot_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16924:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16932:4:10","type":""}],"src":"16838:159:10"},{"body":{"nodeType":"YulBlock","src":"17183:2351:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17193:28:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17209:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"17214:6:10","type":"","value":"0x0180"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17205:3:10"},"nodeType":"YulFunctionCall","src":"17205:16:10"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"17197:4:10","type":""}]},{"nodeType":"YulBlock","src":"17231:162:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17264:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17294:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"17301:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17290:3:10"},"nodeType":"YulFunctionCall","src":"17290:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17284:5:10"},"nodeType":"YulFunctionCall","src":"17284:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17268:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"17354:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17372:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"17377:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17368:3:10"},"nodeType":"YulFunctionCall","src":"17368:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17320:33:10"},"nodeType":"YulFunctionCall","src":"17320:63:10"},"nodeType":"YulExpressionStatement","src":"17320:63:10"}]},{"nodeType":"YulBlock","src":"17403:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17440:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17470:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"17477:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17466:3:10"},"nodeType":"YulFunctionCall","src":"17466:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17460:5:10"},"nodeType":"YulFunctionCall","src":"17460:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17444:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"17530:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17548:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"17553:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17544:3:10"},"nodeType":"YulFunctionCall","src":"17544:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17496:33:10"},"nodeType":"YulFunctionCall","src":"17496:63:10"},"nodeType":"YulExpressionStatement","src":"17496:63:10"}]},{"nodeType":"YulBlock","src":"17579:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17616:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17646:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"17653:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17642:3:10"},"nodeType":"YulFunctionCall","src":"17642:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17636:5:10"},"nodeType":"YulFunctionCall","src":"17636:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17620:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"17706:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17724:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"17729:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17720:3:10"},"nodeType":"YulFunctionCall","src":"17720:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17672:33:10"},"nodeType":"YulFunctionCall","src":"17672:63:10"},"nodeType":"YulExpressionStatement","src":"17672:63:10"}]},{"nodeType":"YulBlock","src":"17755:169:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17795:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17825:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"17832:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17821:3:10"},"nodeType":"YulFunctionCall","src":"17821:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17815:5:10"},"nodeType":"YulFunctionCall","src":"17815:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17799:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"17885:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17903:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"17908:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17899:3:10"},"nodeType":"YulFunctionCall","src":"17899:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17851:33:10"},"nodeType":"YulFunctionCall","src":"17851:63:10"},"nodeType":"YulExpressionStatement","src":"17851:63:10"}]},{"nodeType":"YulBlock","src":"17934:168:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17973:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18003:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"18010:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17999:3:10"},"nodeType":"YulFunctionCall","src":"17999:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17993:5:10"},"nodeType":"YulFunctionCall","src":"17993:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17977:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18063:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18081:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18086:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18077:3:10"},"nodeType":"YulFunctionCall","src":"18077:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18029:33:10"},"nodeType":"YulFunctionCall","src":"18029:63:10"},"nodeType":"YulExpressionStatement","src":"18029:63:10"}]},{"nodeType":"YulBlock","src":"18112:236:10","statements":[{"nodeType":"YulVariableDeclaration","src":"18148:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18178:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"18185:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18174:3:10"},"nodeType":"YulFunctionCall","src":"18174:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18168:5:10"},"nodeType":"YulFunctionCall","src":"18168:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18152:12:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18216:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18221:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18212:3:10"},"nodeType":"YulFunctionCall","src":"18212:14:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18232:4:10"},{"name":"pos","nodeType":"YulIdentifier","src":"18238:3:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18228:3:10"},"nodeType":"YulFunctionCall","src":"18228:14:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18205:6:10"},"nodeType":"YulFunctionCall","src":"18205:38:10"},"nodeType":"YulExpressionStatement","src":"18205:38:10"},{"nodeType":"YulAssignment","src":"18256:81:10","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18318:12:10"},{"name":"tail","nodeType":"YulIdentifier","src":"18332:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18264:53:10"},"nodeType":"YulFunctionCall","src":"18264:73:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18256:4:10"}]}]},{"nodeType":"YulBlock","src":"18358:242:10","statements":[{"nodeType":"YulVariableDeclaration","src":"18400:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18430:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"18437:4:10","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18426:3:10"},"nodeType":"YulFunctionCall","src":"18426:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18420:5:10"},"nodeType":"YulFunctionCall","src":"18420:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18404:12:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18468:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18473:4:10","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18464:3:10"},"nodeType":"YulFunctionCall","src":"18464:14:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18484:4:10"},{"name":"pos","nodeType":"YulIdentifier","src":"18490:3:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18480:3:10"},"nodeType":"YulFunctionCall","src":"18480:14:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18457:6:10"},"nodeType":"YulFunctionCall","src":"18457:38:10"},"nodeType":"YulExpressionStatement","src":"18457:38:10"},{"nodeType":"YulAssignment","src":"18508:81:10","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18570:12:10"},{"name":"tail","nodeType":"YulIdentifier","src":"18584:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18516:53:10"},"nodeType":"YulFunctionCall","src":"18516:73:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18508:4:10"}]}]},{"nodeType":"YulBlock","src":"18610:158:10","statements":[{"nodeType":"YulVariableDeclaration","src":"18645:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18675:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"18682:4:10","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18671:3:10"},"nodeType":"YulFunctionCall","src":"18671:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18665:5:10"},"nodeType":"YulFunctionCall","src":"18665:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18649:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18729:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18747:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18752:4:10","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18743:3:10"},"nodeType":"YulFunctionCall","src":"18743:14:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"18701:27:10"},"nodeType":"YulFunctionCall","src":"18701:57:10"},"nodeType":"YulExpressionStatement","src":"18701:57:10"}]},{"nodeType":"YulBlock","src":"18778:164:10","statements":[{"nodeType":"YulVariableDeclaration","src":"18815:45:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18845:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"18852:6:10","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18841:3:10"},"nodeType":"YulFunctionCall","src":"18841:18:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18835:5:10"},"nodeType":"YulFunctionCall","src":"18835:25:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18819:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18901:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18919:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18924:6:10","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18915:3:10"},"nodeType":"YulFunctionCall","src":"18915:16:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"18873:27:10"},"nodeType":"YulFunctionCall","src":"18873:59:10"},"nodeType":"YulExpressionStatement","src":"18873:59:10"}]},{"nodeType":"YulBlock","src":"18952:191:10","statements":[{"nodeType":"YulVariableDeclaration","src":"18994:45:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19024:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"19031:6:10","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19020:3:10"},"nodeType":"YulFunctionCall","src":"19020:18:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19014:5:10"},"nodeType":"YulFunctionCall","src":"19014:25:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18998:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19102:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19120:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19125:6:10","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19116:3:10"},"nodeType":"YulFunctionCall","src":"19116:16:10"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable","nodeType":"YulIdentifier","src":"19052:49:10"},"nodeType":"YulFunctionCall","src":"19052:81:10"},"nodeType":"YulExpressionStatement","src":"19052:81:10"}]},{"nodeType":"YulBlock","src":"19153:172:10","statements":[{"nodeType":"YulVariableDeclaration","src":"19192:45:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19222:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"19229:6:10","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19218:3:10"},"nodeType":"YulFunctionCall","src":"19218:18:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19212:5:10"},"nodeType":"YulFunctionCall","src":"19212:25:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19196:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19284:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19302:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19307:6:10","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19298:3:10"},"nodeType":"YulFunctionCall","src":"19298:16:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"19250:33:10"},"nodeType":"YulFunctionCall","src":"19250:65:10"},"nodeType":"YulExpressionStatement","src":"19250:65:10"}]},{"nodeType":"YulBlock","src":"19335:172:10","statements":[{"nodeType":"YulVariableDeclaration","src":"19374:45:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19404:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"19411:6:10","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19400:3:10"},"nodeType":"YulFunctionCall","src":"19400:18:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19394:5:10"},"nodeType":"YulFunctionCall","src":"19394:25:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19378:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19466:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19484:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19489:6:10","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19480:3:10"},"nodeType":"YulFunctionCall","src":"19480:16:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"19432:33:10"},"nodeType":"YulFunctionCall","src":"19432:65:10"},"nodeType":"YulExpressionStatement","src":"19432:65:10"}]},{"nodeType":"YulAssignment","src":"19517:11:10","value":{"name":"tail","nodeType":"YulIdentifier","src":"19524:4:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19517:3:10"}]}]},"name":"abi_encode_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17162:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17169:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17178:3:10","type":""}],"src":"17065:2469:10"},{"body":{"nodeType":"YulBlock","src":"19674:130:10","statements":[{"nodeType":"YulAssignment","src":"19684:114:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19786:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"19794:3:10"}],"functionName":{"name":"abi_encode_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr","nodeType":"YulIdentifier","src":"19698:87:10"},"nodeType":"YulFunctionCall","src":"19698:100:10"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"19684:10:10"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"19647:6:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19655:3:10","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"19663:10:10","type":""}],"src":"19540:264:10"},{"body":{"nodeType":"YulBlock","src":"19912:38:10","statements":[{"nodeType":"YulAssignment","src":"19922:22:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"19934:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19939:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19930:3:10"},"nodeType":"YulFunctionCall","src":"19930:14:10"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"19922:4:10"}]}]},"name":"array_nextElement_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"19899:3:10","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"19907:4:10","type":""}],"src":"19810:140:10"},{"body":{"nodeType":"YulBlock","src":"20200:949:10","statements":[{"nodeType":"YulVariableDeclaration","src":"20210:95:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20299:5:10"}],"functionName":{"name":"array_length_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"20224:74:10"},"nodeType":"YulFunctionCall","src":"20224:81:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20214:6:10","type":""}]},{"nodeType":"YulAssignment","src":"20314:120:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20422:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"20427:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20321:100:10"},"nodeType":"YulFunctionCall","src":"20321:113:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20314:3:10"}]},{"nodeType":"YulVariableDeclaration","src":"20443:20:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"20460:3:10"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"20447:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20472:39:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20488:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20497:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"20505:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20493:3:10"},"nodeType":"YulFunctionCall","src":"20493:17:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20484:3:10"},"nodeType":"YulFunctionCall","src":"20484:27:10"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"20476:4:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20520:98:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20612:5:10"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"20535:76:10"},"nodeType":"YulFunctionCall","src":"20535:83:10"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"20524:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20627:21:10","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"20641:7:10"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"20631:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"20717:387:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20738:3:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20747:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"20753:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20743:3:10"},"nodeType":"YulFunctionCall","src":"20743:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20731:6:10"},"nodeType":"YulFunctionCall","src":"20731:33:10"},"nodeType":"YulExpressionStatement","src":"20731:33:10"},{"nodeType":"YulVariableDeclaration","src":"20777:34:10","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20804:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20798:5:10"},"nodeType":"YulFunctionCall","src":"20798:13:10"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"20781:13:10","type":""}]},{"nodeType":"YulAssignment","src":"20824:126:10","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"20930:13:10"},{"name":"tail","nodeType":"YulIdentifier","src":"20945:4:10"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr","nodeType":"YulIdentifier","src":"20832:97:10"},"nodeType":"YulFunctionCall","src":"20832:118:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20824:4:10"}]},{"nodeType":"YulAssignment","src":"20963:97:10","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"21053:6:10"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"20973:79:10"},"nodeType":"YulFunctionCall","src":"20973:87:10"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20963:6:10"}]},{"nodeType":"YulAssignment","src":"21073:21:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21084:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"21089:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21080:3:10"},"nodeType":"YulFunctionCall","src":"21080:14:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21073:3:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20679:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"20682:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20676:2:10"},"nodeType":"YulFunctionCall","src":"20676:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20690:18:10","statements":[{"nodeType":"YulAssignment","src":"20692:14:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20701:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"20704:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20697:3:10"},"nodeType":"YulFunctionCall","src":"20697:9:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20692:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"20661:14:10","statements":[{"nodeType":"YulVariableDeclaration","src":"20663:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"20672:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20667:1:10","type":""}]}]},"src":"20657:447:10"},{"nodeType":"YulAssignment","src":"21113:11:10","value":{"name":"tail","nodeType":"YulIdentifier","src":"21120:4:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21113:3:10"}]},{"nodeType":"YulAssignment","src":"21133:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"21140:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21133:3:10"}]}]},"name":"abi_encode_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20179:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20186:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20195:3:10","type":""}],"src":"20022:1127:10"},{"body":{"nodeType":"YulBlock","src":"21357:279:10","statements":[{"nodeType":"YulAssignment","src":"21367:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21379:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21390:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21375:3:10"},"nodeType":"YulFunctionCall","src":"21375:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21367:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21414:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21425:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21410:3:10"},"nodeType":"YulFunctionCall","src":"21410:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21433:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"21439:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21429:3:10"},"nodeType":"YulFunctionCall","src":"21429:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21403:6:10"},"nodeType":"YulFunctionCall","src":"21403:47:10"},"nodeType":"YulExpressionStatement","src":"21403:47:10"},{"nodeType":"YulAssignment","src":"21459:170:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21615:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"21624:4:10"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21467:147:10"},"nodeType":"YulFunctionCall","src":"21467:162:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21459:4:10"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21329:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21341:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21352:4:10","type":""}],"src":"21155:481:10"},{"body":{"nodeType":"YulBlock","src":"21716:40:10","statements":[{"nodeType":"YulAssignment","src":"21727:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21743:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21737:5:10"},"nodeType":"YulFunctionCall","src":"21737:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21727:6:10"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21699:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21709:6:10","type":""}],"src":"21642:114:10"},{"body":{"nodeType":"YulBlock","src":"21873:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21890:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"21895:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21883:6:10"},"nodeType":"YulFunctionCall","src":"21883:19:10"},"nodeType":"YulExpressionStatement","src":"21883:19:10"},{"nodeType":"YulAssignment","src":"21911:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21930:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"21935:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21926:3:10"},"nodeType":"YulFunctionCall","src":"21926:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21911:11:10"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21845:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"21850:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21861:11:10","type":""}],"src":"21762:184:10"},{"body":{"nodeType":"YulBlock","src":"22024:60:10","statements":[{"nodeType":"YulAssignment","src":"22034:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"22042:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"22034:4:10"}]},{"nodeType":"YulAssignment","src":"22055:22:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22067:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"22072:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22063:3:10"},"nodeType":"YulFunctionCall","src":"22063:14:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"22055:4:10"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"22011:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"22019:4:10","type":""}],"src":"21952:132:10"},{"body":{"nodeType":"YulBlock","src":"22170:99:10","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22214:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"22222:3:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22180:33:10"},"nodeType":"YulFunctionCall","src":"22180:46:10"},"nodeType":"YulExpressionStatement","src":"22180:46:10"},{"nodeType":"YulAssignment","src":"22235:28:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22253:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"22258:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22249:3:10"},"nodeType":"YulFunctionCall","src":"22249:14:10"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"22235:10:10"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"22143:6:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22151:3:10","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"22159:10:10","type":""}],"src":"22090:179:10"},{"body":{"nodeType":"YulBlock","src":"22350:38:10","statements":[{"nodeType":"YulAssignment","src":"22360:22:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22372:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"22377:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22368:3:10"},"nodeType":"YulFunctionCall","src":"22368:14:10"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"22360:4:10"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"22337:3:10","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"22345:4:10","type":""}],"src":"22275:113:10"},{"body":{"nodeType":"YulBlock","src":"22548:608:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22558:68:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22620:5:10"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22572:47:10"},"nodeType":"YulFunctionCall","src":"22572:54:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22562:6:10","type":""}]},{"nodeType":"YulAssignment","src":"22635:93:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22716:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"22721:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22642:73:10"},"nodeType":"YulFunctionCall","src":"22642:86:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22635:3:10"}]},{"nodeType":"YulVariableDeclaration","src":"22737:71:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22802:5:10"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22752:49:10"},"nodeType":"YulFunctionCall","src":"22752:56:10"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"22741:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22817:21:10","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"22831:7:10"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"22821:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"22907:224:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22921:34:10","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22948:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22942:5:10"},"nodeType":"YulFunctionCall","src":"22942:13:10"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"22925:13:10","type":""}]},{"nodeType":"YulAssignment","src":"22968:70:10","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"23019:13:10"},{"name":"pos","nodeType":"YulIdentifier","src":"23034:3:10"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22975:43:10"},"nodeType":"YulFunctionCall","src":"22975:63:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22968:3:10"}]},{"nodeType":"YulAssignment","src":"23051:70:10","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23114:6:10"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"23061:52:10"},"nodeType":"YulFunctionCall","src":"23061:60:10"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23051:6:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22869:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"22872:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22866:2:10"},"nodeType":"YulFunctionCall","src":"22866:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22880:18:10","statements":[{"nodeType":"YulAssignment","src":"22882:14:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22891:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"22894:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22887:3:10"},"nodeType":"YulFunctionCall","src":"22887:9:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22882:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"22851:14:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22853:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"22862:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22857:1:10","type":""}]}]},"src":"22847:284:10"},{"nodeType":"YulAssignment","src":"23140:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"23147:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23140:3:10"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22527:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22534:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22543:3:10","type":""}],"src":"22424:732:10"},{"body":{"nodeType":"YulBlock","src":"23310:225:10","statements":[{"nodeType":"YulAssignment","src":"23320:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23332:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23343:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23328:3:10"},"nodeType":"YulFunctionCall","src":"23328:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23320:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23367:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23378:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23363:3:10"},"nodeType":"YulFunctionCall","src":"23363:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23386:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"23392:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23382:3:10"},"nodeType":"YulFunctionCall","src":"23382:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23356:6:10"},"nodeType":"YulFunctionCall","src":"23356:47:10"},"nodeType":"YulExpressionStatement","src":"23356:47:10"},{"nodeType":"YulAssignment","src":"23412:116:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23514:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"23523:4:10"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23420:93:10"},"nodeType":"YulFunctionCall","src":"23420:108:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23412:4:10"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23282:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23294:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23305:4:10","type":""}],"src":"23162:373:10"},{"body":{"nodeType":"YulBlock","src":"23637:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23654:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"23659:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23647:6:10"},"nodeType":"YulFunctionCall","src":"23647:19:10"},"nodeType":"YulExpressionStatement","src":"23647:19:10"},{"nodeType":"YulAssignment","src":"23675:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23694:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"23699:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23690:3:10"},"nodeType":"YulFunctionCall","src":"23690:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23675:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23609:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"23614:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23625:11:10","type":""}],"src":"23541:169:10"},{"body":{"nodeType":"YulBlock","src":"23808:285:10","statements":[{"nodeType":"YulVariableDeclaration","src":"23818:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23865:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"23832:32:10"},"nodeType":"YulFunctionCall","src":"23832:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23822:6:10","type":""}]},{"nodeType":"YulAssignment","src":"23880:78:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23946:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"23951:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23887:58:10"},"nodeType":"YulFunctionCall","src":"23887:71:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23880:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24006:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"24013:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24002:3:10"},"nodeType":"YulFunctionCall","src":"24002:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"24020:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"24025:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"23967:34:10"},"nodeType":"YulFunctionCall","src":"23967:65:10"},"nodeType":"YulExpressionStatement","src":"23967:65:10"},{"nodeType":"YulAssignment","src":"24041:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24052:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24079:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"24057:21:10"},"nodeType":"YulFunctionCall","src":"24057:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24048:3:10"},"nodeType":"YulFunctionCall","src":"24048:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24041:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23789:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23796:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23804:3:10","type":""}],"src":"23716:377:10"},{"body":{"nodeType":"YulBlock","src":"24217:195:10","statements":[{"nodeType":"YulAssignment","src":"24227:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24239:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24250:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24235:3:10"},"nodeType":"YulFunctionCall","src":"24235:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24227:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24274:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24285:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24270:3:10"},"nodeType":"YulFunctionCall","src":"24270:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24293:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"24299:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24289:3:10"},"nodeType":"YulFunctionCall","src":"24289:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24263:6:10"},"nodeType":"YulFunctionCall","src":"24263:47:10"},"nodeType":"YulExpressionStatement","src":"24263:47:10"},{"nodeType":"YulAssignment","src":"24319:86:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24391:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"24400:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24327:63:10"},"nodeType":"YulFunctionCall","src":"24327:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24319:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24189:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24201:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24212:4:10","type":""}],"src":"24099:313:10"},{"body":{"nodeType":"YulBlock","src":"24524:61:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24546:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"24554:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24542:3:10"},"nodeType":"YulFunctionCall","src":"24542:14:10"},{"hexValue":"696e73756666696369656e742066756e64","kind":"string","nodeType":"YulLiteral","src":"24558:19:10","type":"","value":"insufficient fund"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24535:6:10"},"nodeType":"YulFunctionCall","src":"24535:43:10"},"nodeType":"YulExpressionStatement","src":"24535:43:10"}]},"name":"store_literal_in_memory_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24516:6:10","type":""}],"src":"24418:167:10"},{"body":{"nodeType":"YulBlock","src":"24737:220:10","statements":[{"nodeType":"YulAssignment","src":"24747:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24813:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"24818:2:10","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24754:58:10"},"nodeType":"YulFunctionCall","src":"24754:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24747:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24919:3:10"}],"functionName":{"name":"store_literal_in_memory_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808","nodeType":"YulIdentifier","src":"24830:88:10"},"nodeType":"YulFunctionCall","src":"24830:93:10"},"nodeType":"YulExpressionStatement","src":"24830:93:10"},{"nodeType":"YulAssignment","src":"24932:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24943:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"24948:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24939:3:10"},"nodeType":"YulFunctionCall","src":"24939:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24932:3:10"}]}]},"name":"abi_encode_t_stringliteral_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24725:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24733:3:10","type":""}],"src":"24591:366:10"},{"body":{"nodeType":"YulBlock","src":"25134:248:10","statements":[{"nodeType":"YulAssignment","src":"25144:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25156:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25167:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25152:3:10"},"nodeType":"YulFunctionCall","src":"25152:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25144:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25191:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25202:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25187:3:10"},"nodeType":"YulFunctionCall","src":"25187:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25210:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"25216:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25206:3:10"},"nodeType":"YulFunctionCall","src":"25206:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25180:6:10"},"nodeType":"YulFunctionCall","src":"25180:47:10"},"nodeType":"YulExpressionStatement","src":"25180:47:10"},{"nodeType":"YulAssignment","src":"25236:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25370:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25244:124:10"},"nodeType":"YulFunctionCall","src":"25244:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25236:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25114:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25129:4:10","type":""}],"src":"24963:419:10"},{"body":{"nodeType":"YulBlock","src":"25494:64:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25516:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"25524:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25512:3:10"},"nodeType":"YulFunctionCall","src":"25512:14:10"},{"hexValue":"7061796d656e7420616c7265616479206d616465","kind":"string","nodeType":"YulLiteral","src":"25528:22:10","type":"","value":"payment already made"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25505:6:10"},"nodeType":"YulFunctionCall","src":"25505:46:10"},"nodeType":"YulExpressionStatement","src":"25505:46:10"}]},"name":"store_literal_in_memory_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25486:6:10","type":""}],"src":"25388:170:10"},{"body":{"nodeType":"YulBlock","src":"25710:220:10","statements":[{"nodeType":"YulAssignment","src":"25720:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25786:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"25791:2:10","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25727:58:10"},"nodeType":"YulFunctionCall","src":"25727:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25720:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25892:3:10"}],"functionName":{"name":"store_literal_in_memory_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42","nodeType":"YulIdentifier","src":"25803:88:10"},"nodeType":"YulFunctionCall","src":"25803:93:10"},"nodeType":"YulExpressionStatement","src":"25803:93:10"},{"nodeType":"YulAssignment","src":"25905:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25916:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"25921:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25912:3:10"},"nodeType":"YulFunctionCall","src":"25912:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25905:3:10"}]}]},"name":"abi_encode_t_stringliteral_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25698:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25706:3:10","type":""}],"src":"25564:366:10"},{"body":{"nodeType":"YulBlock","src":"26107:248:10","statements":[{"nodeType":"YulAssignment","src":"26117:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26129:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"26140:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26125:3:10"},"nodeType":"YulFunctionCall","src":"26125:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26117:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26164:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"26175:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26160:3:10"},"nodeType":"YulFunctionCall","src":"26160:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26183:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"26189:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26179:3:10"},"nodeType":"YulFunctionCall","src":"26179:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26153:6:10"},"nodeType":"YulFunctionCall","src":"26153:47:10"},"nodeType":"YulExpressionStatement","src":"26153:47:10"},{"nodeType":"YulAssignment","src":"26209:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26343:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26217:124:10"},"nodeType":"YulFunctionCall","src":"26217:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26209:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26087:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26102:4:10","type":""}],"src":"25936:419:10"},{"body":{"nodeType":"YulBlock","src":"26467:62:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26489:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"26497:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26485:3:10"},"nodeType":"YulFunctionCall","src":"26485:14:10"},{"hexValue":"696e73756666696369656e7420766f746573","kind":"string","nodeType":"YulLiteral","src":"26501:20:10","type":"","value":"insufficient votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26478:6:10"},"nodeType":"YulFunctionCall","src":"26478:44:10"},"nodeType":"YulExpressionStatement","src":"26478:44:10"}]},"name":"store_literal_in_memory_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26459:6:10","type":""}],"src":"26361:168:10"},{"body":{"nodeType":"YulBlock","src":"26681:220:10","statements":[{"nodeType":"YulAssignment","src":"26691:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26757:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"26762:2:10","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26698:58:10"},"nodeType":"YulFunctionCall","src":"26698:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26691:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26863:3:10"}],"functionName":{"name":"store_literal_in_memory_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3","nodeType":"YulIdentifier","src":"26774:88:10"},"nodeType":"YulFunctionCall","src":"26774:93:10"},"nodeType":"YulExpressionStatement","src":"26774:93:10"},{"nodeType":"YulAssignment","src":"26876:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26887:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"26892:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26883:3:10"},"nodeType":"YulFunctionCall","src":"26883:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26876:3:10"}]}]},"name":"abi_encode_t_stringliteral_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26669:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26677:3:10","type":""}],"src":"26535:366:10"},{"body":{"nodeType":"YulBlock","src":"27078:248:10","statements":[{"nodeType":"YulAssignment","src":"27088:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27100:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"27111:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27096:3:10"},"nodeType":"YulFunctionCall","src":"27096:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27088:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27135:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"27146:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27131:3:10"},"nodeType":"YulFunctionCall","src":"27131:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27154:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"27160:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27150:3:10"},"nodeType":"YulFunctionCall","src":"27150:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27124:6:10"},"nodeType":"YulFunctionCall","src":"27124:47:10"},"nodeType":"YulExpressionStatement","src":"27124:47:10"},{"nodeType":"YulAssignment","src":"27180:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27314:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27188:124:10"},"nodeType":"YulFunctionCall","src":"27188:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27180:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27058:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27073:4:10","type":""}],"src":"26907:419:10"},{"body":{"nodeType":"YulBlock","src":"27360:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27377:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27380:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27370:6:10"},"nodeType":"YulFunctionCall","src":"27370:88:10"},"nodeType":"YulExpressionStatement","src":"27370:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27474:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27477:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27467:6:10"},"nodeType":"YulFunctionCall","src":"27467:15:10"},"nodeType":"YulExpressionStatement","src":"27467:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27498:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27501:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27491:6:10"},"nodeType":"YulFunctionCall","src":"27491:15:10"},"nodeType":"YulExpressionStatement","src":"27491:15:10"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"27332:180:10"},{"body":{"nodeType":"YulBlock","src":"27563:149:10","statements":[{"nodeType":"YulAssignment","src":"27573:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27596:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27578:17:10"},"nodeType":"YulFunctionCall","src":"27578:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27573:1:10"}]},{"nodeType":"YulAssignment","src":"27607:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27630:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27612:17:10"},"nodeType":"YulFunctionCall","src":"27612:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27607:1:10"}]},{"nodeType":"YulAssignment","src":"27641:17:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27653:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"27656:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27649:3:10"},"nodeType":"YulFunctionCall","src":"27649:9:10"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"27641:4:10"}]},{"body":{"nodeType":"YulBlock","src":"27683:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27685:16:10"},"nodeType":"YulFunctionCall","src":"27685:18:10"},"nodeType":"YulExpressionStatement","src":"27685:18:10"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"27674:4:10"},{"name":"x","nodeType":"YulIdentifier","src":"27680:1:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27671:2:10"},"nodeType":"YulFunctionCall","src":"27671:11:10"},"nodeType":"YulIf","src":"27668:37:10"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27549:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"27552:1:10","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"27558:4:10","type":""}],"src":"27518:194:10"},{"body":{"nodeType":"YulBlock","src":"27824:70:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27846:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"27854:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27842:3:10"},"nodeType":"YulFunctionCall","src":"27842:14:10"},{"hexValue":"5041594d454e54205355434345535346554c4c59204d41444521","kind":"string","nodeType":"YulLiteral","src":"27858:28:10","type":"","value":"PAYMENT SUCCESSFULLY MADE!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27835:6:10"},"nodeType":"YulFunctionCall","src":"27835:52:10"},"nodeType":"YulExpressionStatement","src":"27835:52:10"}]},"name":"store_literal_in_memory_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27816:6:10","type":""}],"src":"27718:176:10"},{"body":{"nodeType":"YulBlock","src":"28046:220:10","statements":[{"nodeType":"YulAssignment","src":"28056:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28122:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"28127:2:10","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28063:58:10"},"nodeType":"YulFunctionCall","src":"28063:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28056:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28228:3:10"}],"functionName":{"name":"store_literal_in_memory_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70","nodeType":"YulIdentifier","src":"28139:88:10"},"nodeType":"YulFunctionCall","src":"28139:93:10"},"nodeType":"YulExpressionStatement","src":"28139:93:10"},{"nodeType":"YulAssignment","src":"28241:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28252:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"28257:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28248:3:10"},"nodeType":"YulFunctionCall","src":"28248:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28241:3:10"}]}]},"name":"abi_encode_t_stringliteral_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28034:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28042:3:10","type":""}],"src":"27900:366:10"},{"body":{"nodeType":"YulBlock","src":"28499:412:10","statements":[{"nodeType":"YulAssignment","src":"28509:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28521:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28532:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28517:3:10"},"nodeType":"YulFunctionCall","src":"28517:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28509:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28589:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28602:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28613:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28598:3:10"},"nodeType":"YulFunctionCall","src":"28598:17:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"28545:43:10"},"nodeType":"YulFunctionCall","src":"28545:71:10"},"nodeType":"YulExpressionStatement","src":"28545:71:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28637:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28648:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28633:3:10"},"nodeType":"YulFunctionCall","src":"28633:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28657:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"28663:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28653:3:10"},"nodeType":"YulFunctionCall","src":"28653:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28626:6:10"},"nodeType":"YulFunctionCall","src":"28626:48:10"},"nodeType":"YulExpressionStatement","src":"28626:48:10"},{"nodeType":"YulAssignment","src":"28683:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28817:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28691:124:10"},"nodeType":"YulFunctionCall","src":"28691:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28683:4:10"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28876:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28889:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28900:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28885:3:10"},"nodeType":"YulFunctionCall","src":"28885:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28832:43:10"},"nodeType":"YulFunctionCall","src":"28832:72:10"},"nodeType":"YulExpressionStatement","src":"28832:72:10"}]},"name":"abi_encode_tuple_t_bytes32_t_stringliteral_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70_t_uint256__to_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28463:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28475:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28483:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28494:4:10","type":""}],"src":"28272:639:10"},{"body":{"nodeType":"YulBlock","src":"28945:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28962:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28965:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28955:6:10"},"nodeType":"YulFunctionCall","src":"28955:88:10"},"nodeType":"YulExpressionStatement","src":"28955:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29059:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29062:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29052:6:10"},"nodeType":"YulFunctionCall","src":"29052:15:10"},"nodeType":"YulExpressionStatement","src":"29052:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29083:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29086:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29076:6:10"},"nodeType":"YulFunctionCall","src":"29076:15:10"},"nodeType":"YulExpressionStatement","src":"29076:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"28917:180:10"},{"body":{"nodeType":"YulBlock","src":"29154:269:10","statements":[{"nodeType":"YulAssignment","src":"29164:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29178:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"29184:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29174:3:10"},"nodeType":"YulFunctionCall","src":"29174:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"29164:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"29195:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29225:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"29231:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29221:3:10"},"nodeType":"YulFunctionCall","src":"29221:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"29199:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"29272:51:10","statements":[{"nodeType":"YulAssignment","src":"29286:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29300:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"29308:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29296:3:10"},"nodeType":"YulFunctionCall","src":"29296:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"29286:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"29252:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29245:6:10"},"nodeType":"YulFunctionCall","src":"29245:26:10"},"nodeType":"YulIf","src":"29242:81:10"},{"body":{"nodeType":"YulBlock","src":"29375:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"29389:16:10"},"nodeType":"YulFunctionCall","src":"29389:18:10"},"nodeType":"YulExpressionStatement","src":"29389:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"29339:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29362:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"29370:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29359:2:10"},"nodeType":"YulFunctionCall","src":"29359:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29336:2:10"},"nodeType":"YulFunctionCall","src":"29336:38:10"},"nodeType":"YulIf","src":"29333:84:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"29138:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"29147:6:10","type":""}],"src":"29103:320:10"},{"body":{"nodeType":"YulBlock","src":"29535:128:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29557:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"29565:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29553:3:10"},"nodeType":"YulFunctionCall","src":"29553:14:10"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"29569:34:10","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29546:6:10"},"nodeType":"YulFunctionCall","src":"29546:58:10"},"nodeType":"YulExpressionStatement","src":"29546:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29625:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"29633:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29621:3:10"},"nodeType":"YulFunctionCall","src":"29621:15:10"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"29638:17:10","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29614:6:10"},"nodeType":"YulFunctionCall","src":"29614:42:10"},"nodeType":"YulExpressionStatement","src":"29614:42:10"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29527:6:10","type":""}],"src":"29429:234:10"},{"body":{"nodeType":"YulBlock","src":"29815:220:10","statements":[{"nodeType":"YulAssignment","src":"29825:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29891:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"29896:2:10","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29832:58:10"},"nodeType":"YulFunctionCall","src":"29832:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29825:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29997:3:10"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"29908:88:10"},"nodeType":"YulFunctionCall","src":"29908:93:10"},"nodeType":"YulExpressionStatement","src":"29908:93:10"},{"nodeType":"YulAssignment","src":"30010:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30021:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"30026:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30017:3:10"},"nodeType":"YulFunctionCall","src":"30017:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30010:3:10"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29803:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29811:3:10","type":""}],"src":"29669:366:10"},{"body":{"nodeType":"YulBlock","src":"30212:248:10","statements":[{"nodeType":"YulAssignment","src":"30222:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30234:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"30245:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30230:3:10"},"nodeType":"YulFunctionCall","src":"30230:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30222:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30269:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"30280:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30265:3:10"},"nodeType":"YulFunctionCall","src":"30265:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30288:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"30294:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30284:3:10"},"nodeType":"YulFunctionCall","src":"30284:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30258:6:10"},"nodeType":"YulFunctionCall","src":"30258:47:10"},"nodeType":"YulExpressionStatement","src":"30258:47:10"},{"nodeType":"YulAssignment","src":"30314:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30448:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30322:124:10"},"nodeType":"YulFunctionCall","src":"30322:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30314:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30192:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30207:4:10","type":""}],"src":"30041:419:10"},{"body":{"nodeType":"YulBlock","src":"30509:190:10","statements":[{"nodeType":"YulAssignment","src":"30519:33:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30546:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30528:17:10"},"nodeType":"YulFunctionCall","src":"30528:24:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30519:5:10"}]},{"body":{"nodeType":"YulBlock","src":"30642:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30644:16:10"},"nodeType":"YulFunctionCall","src":"30644:18:10"},"nodeType":"YulExpressionStatement","src":"30644:18:10"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30567:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"30574:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30564:2:10"},"nodeType":"YulFunctionCall","src":"30564:77:10"},"nodeType":"YulIf","src":"30561:103:10"},{"nodeType":"YulAssignment","src":"30673:20:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30684:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"30691:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30680:3:10"},"nodeType":"YulFunctionCall","src":"30680:13:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30673:3:10"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30495:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"30505:3:10","type":""}],"src":"30466:233:10"},{"body":{"nodeType":"YulBlock","src":"30771:31:10","statements":[{"nodeType":"YulAssignment","src":"30782:13:10","value":{"name":"len","nodeType":"YulIdentifier","src":"30792:3:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"30782:6:10"}]}]},"name":"array_length_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30749:5:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"30756:3:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"30764:6:10","type":""}],"src":"30705:97:10"},{"body":{"nodeType":"YulBlock","src":"30836:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30853:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30856:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30846:6:10"},"nodeType":"YulFunctionCall","src":"30846:88:10"},"nodeType":"YulExpressionStatement","src":"30846:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30950:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30953:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30943:6:10"},"nodeType":"YulFunctionCall","src":"30943:15:10"},"nodeType":"YulExpressionStatement","src":"30943:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30974:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30977:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30967:6:10"},"nodeType":"YulFunctionCall","src":"30967:15:10"},"nodeType":"YulExpressionStatement","src":"30967:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"30808:180:10"},{"body":{"nodeType":"YulBlock","src":"31048:87:10","statements":[{"nodeType":"YulAssignment","src":"31058:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"31066:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31058:4:10"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31086:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"31089:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31079:6:10"},"nodeType":"YulFunctionCall","src":"31079:14:10"},"nodeType":"YulExpressionStatement","src":"31079:14:10"},{"nodeType":"YulAssignment","src":"31102:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31120:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31123:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"31110:9:10"},"nodeType":"YulFunctionCall","src":"31110:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31102:4:10"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"31035:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"31043:4:10","type":""}],"src":"30994:141:10"},{"body":{"nodeType":"YulBlock","src":"31185:49:10","statements":[{"nodeType":"YulAssignment","src":"31195:33:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31213:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"31220:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31209:3:10"},"nodeType":"YulFunctionCall","src":"31209:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"31225:2:10","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"31205:3:10"},"nodeType":"YulFunctionCall","src":"31205:23:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"31195:6:10"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31168:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"31178:6:10","type":""}],"src":"31141:93:10"},{"body":{"nodeType":"YulBlock","src":"31293:54:10","statements":[{"nodeType":"YulAssignment","src":"31303:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"31328:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"31334:5:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"31324:3:10"},"nodeType":"YulFunctionCall","src":"31324:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"31303:8:10"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"31268:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"31274:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"31284:8:10","type":""}],"src":"31240:107:10"},{"body":{"nodeType":"YulBlock","src":"31429:317:10","statements":[{"nodeType":"YulVariableDeclaration","src":"31439:35:10","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"31460:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"31472:1:10","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31456:3:10"},"nodeType":"YulFunctionCall","src":"31456:18:10"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"31443:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31483:109:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"31514:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31525:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"31495:18:10"},"nodeType":"YulFunctionCall","src":"31495:97:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"31487:4:10","type":""}]},{"nodeType":"YulAssignment","src":"31601:51:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"31632:9:10"},{"name":"toInsert","nodeType":"YulIdentifier","src":"31643:8:10"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"31613:18:10"},"nodeType":"YulFunctionCall","src":"31613:39:10"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"31601:8:10"}]},{"nodeType":"YulAssignment","src":"31661:30:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31674:5:10"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"31685:4:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"31681:3:10"},"nodeType":"YulFunctionCall","src":"31681:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31670:3:10"},"nodeType":"YulFunctionCall","src":"31670:21:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31661:5:10"}]},{"nodeType":"YulAssignment","src":"31700:40:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31713:5:10"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"31724:8:10"},{"name":"mask","nodeType":"YulIdentifier","src":"31734:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31720:3:10"},"nodeType":"YulFunctionCall","src":"31720:19:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"31710:2:10"},"nodeType":"YulFunctionCall","src":"31710:30:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"31700:6:10"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31390:5:10","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"31397:10:10","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"31409:8:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"31422:6:10","type":""}],"src":"31353:393:10"},{"body":{"nodeType":"YulBlock","src":"31784:28:10","statements":[{"nodeType":"YulAssignment","src":"31794:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"31801:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"31794:3:10"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31770:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"31780:3:10","type":""}],"src":"31752:60:10"},{"body":{"nodeType":"YulBlock","src":"31878:82:10","statements":[{"nodeType":"YulAssignment","src":"31888:66:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31946:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31928:17:10"},"nodeType":"YulFunctionCall","src":"31928:24:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"31919:8:10"},"nodeType":"YulFunctionCall","src":"31919:34:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31901:17:10"},"nodeType":"YulFunctionCall","src":"31901:53:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"31888:9:10"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31858:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"31868:9:10","type":""}],"src":"31818:142:10"},{"body":{"nodeType":"YulBlock","src":"32013:28:10","statements":[{"nodeType":"YulAssignment","src":"32023:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"32030:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32023:3:10"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31999:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32009:3:10","type":""}],"src":"31966:75:10"},{"body":{"nodeType":"YulBlock","src":"32123:193:10","statements":[{"nodeType":"YulVariableDeclaration","src":"32133:63:10","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"32188:7:10"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"32157:30:10"},"nodeType":"YulFunctionCall","src":"32157:39:10"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"32137:16:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32212:4:10"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32252:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"32246:5:10"},"nodeType":"YulFunctionCall","src":"32246:11:10"},{"name":"offset","nodeType":"YulIdentifier","src":"32259:6:10"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"32291:16:10"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"32267:23:10"},"nodeType":"YulFunctionCall","src":"32267:41:10"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"32218:27:10"},"nodeType":"YulFunctionCall","src":"32218:91:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32205:6:10"},"nodeType":"YulFunctionCall","src":"32205:105:10"},"nodeType":"YulExpressionStatement","src":"32205:105:10"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"32100:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"32106:6:10","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"32114:7:10","type":""}],"src":"32047:269:10"},{"body":{"nodeType":"YulBlock","src":"32371:24:10","statements":[{"nodeType":"YulAssignment","src":"32381:8:10","value":{"kind":"number","nodeType":"YulLiteral","src":"32388:1:10","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32381:3:10"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32367:3:10","type":""}],"src":"32322:73:10"},{"body":{"nodeType":"YulBlock","src":"32454:136:10","statements":[{"nodeType":"YulVariableDeclaration","src":"32464:46:10","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"32478:30:10"},"nodeType":"YulFunctionCall","src":"32478:32:10"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"32468:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32563:4:10"},{"name":"offset","nodeType":"YulIdentifier","src":"32569:6:10"},{"name":"zero_0","nodeType":"YulIdentifier","src":"32577:6:10"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"32519:43:10"},"nodeType":"YulFunctionCall","src":"32519:65:10"},"nodeType":"YulExpressionStatement","src":"32519:65:10"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"32440:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"32446:6:10","type":""}],"src":"32401:189:10"},{"body":{"nodeType":"YulBlock","src":"32646:136:10","statements":[{"body":{"nodeType":"YulBlock","src":"32713:63:10","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"32757:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"32764:1:10","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"32727:29:10"},"nodeType":"YulFunctionCall","src":"32727:39:10"},"nodeType":"YulExpressionStatement","src":"32727:39:10"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"32666:5:10"},{"name":"end","nodeType":"YulIdentifier","src":"32673:3:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32663:2:10"},"nodeType":"YulFunctionCall","src":"32663:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"32678:26:10","statements":[{"nodeType":"YulAssignment","src":"32680:22:10","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"32693:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"32700:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32689:3:10"},"nodeType":"YulFunctionCall","src":"32689:13:10"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"32680:5:10"}]}]},"pre":{"nodeType":"YulBlock","src":"32660:2:10","statements":[]},"src":"32656:120:10"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"32634:5:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"32641:3:10","type":""}],"src":"32596:186:10"},{"body":{"nodeType":"YulBlock","src":"32867:464:10","statements":[{"body":{"nodeType":"YulBlock","src":"32893:431:10","statements":[{"nodeType":"YulVariableDeclaration","src":"32907:54:10","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"32955:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"32923:31:10"},"nodeType":"YulFunctionCall","src":"32923:38:10"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"32911:8:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32974:63:10","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"32997:8:10"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"33025:10:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"33007:17:10"},"nodeType":"YulFunctionCall","src":"33007:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32993:3:10"},"nodeType":"YulFunctionCall","src":"32993:44:10"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"32978:11:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"33194:27:10","statements":[{"nodeType":"YulAssignment","src":"33196:23:10","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"33211:8:10"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"33196:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"33178:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"33190:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33175:2:10"},"nodeType":"YulFunctionCall","src":"33175:18:10"},"nodeType":"YulIf","src":"33172:49:10"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"33263:11:10"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"33280:8:10"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"33308:3:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"33290:17:10"},"nodeType":"YulFunctionCall","src":"33290:22:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33276:3:10"},"nodeType":"YulFunctionCall","src":"33276:37:10"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"33234:28:10"},"nodeType":"YulFunctionCall","src":"33234:80:10"},"nodeType":"YulExpressionStatement","src":"33234:80:10"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"32884:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"32889:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32881:2:10"},"nodeType":"YulFunctionCall","src":"32881:11:10"},"nodeType":"YulIf","src":"32878:446:10"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"32843:5:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"32850:3:10","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"32855:10:10","type":""}],"src":"32788:543:10"},{"body":{"nodeType":"YulBlock","src":"33400:54:10","statements":[{"nodeType":"YulAssignment","src":"33410:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"33435:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"33441:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"33431:3:10"},"nodeType":"YulFunctionCall","src":"33431:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"33410:8:10"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"33375:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"33381:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"33391:8:10","type":""}],"src":"33337:117:10"},{"body":{"nodeType":"YulBlock","src":"33511:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"33521:68:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33570:1:10","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"33573:5:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33566:3:10"},"nodeType":"YulFunctionCall","src":"33566:13:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33585:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33581:3:10"},"nodeType":"YulFunctionCall","src":"33581:6:10"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"33537:28:10"},"nodeType":"YulFunctionCall","src":"33537:51:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33533:3:10"},"nodeType":"YulFunctionCall","src":"33533:56:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"33525:4:10","type":""}]},{"nodeType":"YulAssignment","src":"33598:25:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"33612:4:10"},{"name":"mask","nodeType":"YulIdentifier","src":"33618:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33608:3:10"},"nodeType":"YulFunctionCall","src":"33608:15:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"33598:6:10"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"33488:4:10","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"33494:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"33504:6:10","type":""}],"src":"33460:169:10"},{"body":{"nodeType":"YulBlock","src":"33715:214:10","statements":[{"nodeType":"YulAssignment","src":"33848:37:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"33875:4:10"},{"name":"len","nodeType":"YulIdentifier","src":"33881:3:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"33856:18:10"},"nodeType":"YulFunctionCall","src":"33856:29:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33848:4:10"}]},{"nodeType":"YulAssignment","src":"33894:29:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"33905:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33915:1:10","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"33918:3:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33911:3:10"},"nodeType":"YulFunctionCall","src":"33911:11:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"33902:2:10"},"nodeType":"YulFunctionCall","src":"33902:21:10"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"33894:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"33696:4:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"33702:3:10","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"33710:4:10","type":""}],"src":"33634:295:10"},{"body":{"nodeType":"YulBlock","src":"34033:1304:10","statements":[{"nodeType":"YulVariableDeclaration","src":"34044:58:10","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"34093:3:10"},{"name":"len","nodeType":"YulIdentifier","src":"34098:3:10"}],"functionName":{"name":"array_length_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"34058:34:10"},"nodeType":"YulFunctionCall","src":"34058:44:10"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"34048:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"34187:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"34189:16:10"},"nodeType":"YulFunctionCall","src":"34189:18:10"},"nodeType":"YulExpressionStatement","src":"34189:18:10"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"34159:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"34167:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34156:2:10"},"nodeType":"YulFunctionCall","src":"34156:30:10"},"nodeType":"YulIf","src":"34153:56:10"},{"nodeType":"YulVariableDeclaration","src":"34219:52:10","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34265:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34259:5:10"},"nodeType":"YulFunctionCall","src":"34259:11:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"34233:25:10"},"nodeType":"YulFunctionCall","src":"34233:38:10"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"34223:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34364:4:10"},{"name":"oldLen","nodeType":"YulIdentifier","src":"34370:6:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"34378:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"34318:45:10"},"nodeType":"YulFunctionCall","src":"34318:67:10"},"nodeType":"YulExpressionStatement","src":"34318:67:10"},{"nodeType":"YulVariableDeclaration","src":"34395:18:10","value":{"kind":"number","nodeType":"YulLiteral","src":"34412:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"34399:9:10","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"34460:625:10","statements":[{"nodeType":"YulVariableDeclaration","src":"34474:37:10","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"34493:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34505:4:10","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34501:3:10"},"nodeType":"YulFunctionCall","src":"34501:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34489:3:10"},"nodeType":"YulFunctionCall","src":"34489:22:10"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"34478:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34525:51:10","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34571:4:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"34539:31:10"},"nodeType":"YulFunctionCall","src":"34539:37:10"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"34529:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34589:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"34598:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"34593:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"34657:170:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"34682:6:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"34707:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"34712:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34703:3:10"},"nodeType":"YulFunctionCall","src":"34703:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"34690:12:10"},"nodeType":"YulFunctionCall","src":"34690:33:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"34675:6:10"},"nodeType":"YulFunctionCall","src":"34675:49:10"},"nodeType":"YulExpressionStatement","src":"34675:49:10"},{"nodeType":"YulAssignment","src":"34741:24:10","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"34755:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"34763:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34751:3:10"},"nodeType":"YulFunctionCall","src":"34751:14:10"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"34741:6:10"}]},{"nodeType":"YulAssignment","src":"34782:31:10","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"34799:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"34810:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34795:3:10"},"nodeType":"YulFunctionCall","src":"34795:18:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"34782:9:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"34623:1:10"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"34626:7:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34620:2:10"},"nodeType":"YulFunctionCall","src":"34620:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"34635:21:10","statements":[{"nodeType":"YulAssignment","src":"34637:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"34646:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"34649:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34642:3:10"},"nodeType":"YulFunctionCall","src":"34642:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"34637:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"34616:3:10","statements":[]},"src":"34612:215:10"},{"body":{"nodeType":"YulBlock","src":"34863:163:10","statements":[{"nodeType":"YulVariableDeclaration","src":"34881:50:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"34915:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"34920:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34911:3:10"},"nodeType":"YulFunctionCall","src":"34911:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"34898:12:10"},"nodeType":"YulFunctionCall","src":"34898:33:10"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"34885:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"34955:6:10"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"34982:9:10"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"34997:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"35005:4:10","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34993:3:10"},"nodeType":"YulFunctionCall","src":"34993:17:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"34963:18:10"},"nodeType":"YulFunctionCall","src":"34963:48:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"34948:6:10"},"nodeType":"YulFunctionCall","src":"34948:64:10"},"nodeType":"YulExpressionStatement","src":"34948:64:10"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"34846:7:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"34855:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34843:2:10"},"nodeType":"YulFunctionCall","src":"34843:19:10"},"nodeType":"YulIf","src":"34840:186:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35046:4:10"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35060:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"35068:1:10","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35056:3:10"},"nodeType":"YulFunctionCall","src":"35056:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"35072:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35052:3:10"},"nodeType":"YulFunctionCall","src":"35052:22:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35039:6:10"},"nodeType":"YulFunctionCall","src":"35039:36:10"},"nodeType":"YulExpressionStatement","src":"35039:36:10"}]},"nodeType":"YulCase","src":"34453:632:10","value":{"kind":"number","nodeType":"YulLiteral","src":"34458:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"35102:229:10","statements":[{"nodeType":"YulVariableDeclaration","src":"35116:14:10","value":{"kind":"number","nodeType":"YulLiteral","src":"35129:1:10","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"35120:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"35153:74:10","statements":[{"nodeType":"YulAssignment","src":"35171:42:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35197:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35202:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35193:3:10"},"nodeType":"YulFunctionCall","src":"35193:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"35180:12:10"},"nodeType":"YulFunctionCall","src":"35180:33:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35171:5:10"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"35146:6:10"},"nodeType":"YulIf","src":"35143:84:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35247:4:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35306:5:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"35313:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"35253:52:10"},"nodeType":"YulFunctionCall","src":"35253:67:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35240:6:10"},"nodeType":"YulFunctionCall","src":"35240:81:10"},"nodeType":"YulExpressionStatement","src":"35240:81:10"}]},"nodeType":"YulCase","src":"35094:237:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"34433:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"34441:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34430:2:10"},"nodeType":"YulFunctionCall","src":"34430:14:10"},"nodeType":"YulSwitch","src":"34423:908:10"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"34017:4:10","type":""},{"name":"src","nodeType":"YulTypedName","src":"34023:3:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"34028:3:10","type":""}],"src":"33934:1403:10"},{"body":{"nodeType":"YulBlock","src":"35387:147:10","statements":[{"nodeType":"YulAssignment","src":"35397:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35420:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35402:17:10"},"nodeType":"YulFunctionCall","src":"35402:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"35397:1:10"}]},{"nodeType":"YulAssignment","src":"35431:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35454:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35436:17:10"},"nodeType":"YulFunctionCall","src":"35436:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"35431:1:10"}]},{"nodeType":"YulAssignment","src":"35465:16:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35476:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"35479:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35472:3:10"},"nodeType":"YulFunctionCall","src":"35472:9:10"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"35465:3:10"}]},{"body":{"nodeType":"YulBlock","src":"35505:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"35507:16:10"},"nodeType":"YulFunctionCall","src":"35507:18:10"},"nodeType":"YulExpressionStatement","src":"35507:18:10"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35497:1:10"},{"name":"sum","nodeType":"YulIdentifier","src":"35500:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35494:2:10"},"nodeType":"YulFunctionCall","src":"35494:10:10"},"nodeType":"YulIf","src":"35491:36:10"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"35374:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"35377:1:10","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"35383:3:10","type":""}],"src":"35343:191:10"},{"body":{"nodeType":"YulBlock","src":"35646:59:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35668:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"35676:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35664:3:10"},"nodeType":"YulFunctionCall","src":"35664:14:10"},{"hexValue":"50726f706f73616c20526169736564","kind":"string","nodeType":"YulLiteral","src":"35680:17:10","type":"","value":"Proposal Raised"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35657:6:10"},"nodeType":"YulFunctionCall","src":"35657:41:10"},"nodeType":"YulExpressionStatement","src":"35657:41:10"}]},"name":"store_literal_in_memory_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35638:6:10","type":""}],"src":"35540:165:10"},{"body":{"nodeType":"YulBlock","src":"35857:220:10","statements":[{"nodeType":"YulAssignment","src":"35867:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35933:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"35938:2:10","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35874:58:10"},"nodeType":"YulFunctionCall","src":"35874:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35867:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36039:3:10"}],"functionName":{"name":"store_literal_in_memory_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c","nodeType":"YulIdentifier","src":"35950:88:10"},"nodeType":"YulFunctionCall","src":"35950:93:10"},"nodeType":"YulExpressionStatement","src":"35950:93:10"},{"nodeType":"YulAssignment","src":"36052:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36063:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"36068:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36059:3:10"},"nodeType":"YulFunctionCall","src":"36059:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36052:3:10"}]}]},"name":"abi_encode_t_stringliteral_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35845:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35853:3:10","type":""}],"src":"35711:366:10"},{"body":{"nodeType":"YulBlock","src":"36310:412:10","statements":[{"nodeType":"YulAssignment","src":"36320:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36332:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"36343:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36328:3:10"},"nodeType":"YulFunctionCall","src":"36328:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36320:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36400:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36413:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"36424:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36409:3:10"},"nodeType":"YulFunctionCall","src":"36409:17:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"36356:43:10"},"nodeType":"YulFunctionCall","src":"36356:71:10"},"nodeType":"YulExpressionStatement","src":"36356:71:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36448:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"36459:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36444:3:10"},"nodeType":"YulFunctionCall","src":"36444:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36468:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"36474:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36464:3:10"},"nodeType":"YulFunctionCall","src":"36464:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36437:6:10"},"nodeType":"YulFunctionCall","src":"36437:48:10"},"nodeType":"YulExpressionStatement","src":"36437:48:10"},{"nodeType":"YulAssignment","src":"36494:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36628:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36502:124:10"},"nodeType":"YulFunctionCall","src":"36502:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36494:4:10"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36687:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36700:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"36711:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36696:3:10"},"nodeType":"YulFunctionCall","src":"36696:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36643:43:10"},"nodeType":"YulFunctionCall","src":"36643:72:10"},"nodeType":"YulExpressionStatement","src":"36643:72:10"}]},"name":"abi_encode_tuple_t_bytes32_t_stringliteral_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c_t_uint256__to_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36274:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36286:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36294:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36305:4:10","type":""}],"src":"36083:639:10"},{"body":{"nodeType":"YulBlock","src":"36834:57:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36856:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"36864:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36852:3:10"},"nodeType":"YulFunctionCall","src":"36852:14:10"},{"hexValue":"50524f504f53414c20564f5445","kind":"string","nodeType":"YulLiteral","src":"36868:15:10","type":"","value":"PROPOSAL VOTE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36845:6:10"},"nodeType":"YulFunctionCall","src":"36845:39:10"},"nodeType":"YulExpressionStatement","src":"36845:39:10"}]},"name":"store_literal_in_memory_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36826:6:10","type":""}],"src":"36728:163:10"},{"body":{"nodeType":"YulBlock","src":"37043:220:10","statements":[{"nodeType":"YulAssignment","src":"37053:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37119:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"37124:2:10","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37060:58:10"},"nodeType":"YulFunctionCall","src":"37060:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37053:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37225:3:10"}],"functionName":{"name":"store_literal_in_memory_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db","nodeType":"YulIdentifier","src":"37136:88:10"},"nodeType":"YulFunctionCall","src":"37136:93:10"},"nodeType":"YulExpressionStatement","src":"37136:93:10"},{"nodeType":"YulAssignment","src":"37238:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37249:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"37254:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37245:3:10"},"nodeType":"YulFunctionCall","src":"37245:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37238:3:10"}]}]},"name":"abi_encode_t_stringliteral_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37031:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37039:3:10","type":""}],"src":"36897:366:10"},{"body":{"nodeType":"YulBlock","src":"37574:655:10","statements":[{"nodeType":"YulAssignment","src":"37584:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37596:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"37607:3:10","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37592:3:10"},"nodeType":"YulFunctionCall","src":"37592:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37584:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37665:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37678:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"37689:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37674:3:10"},"nodeType":"YulFunctionCall","src":"37674:17:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37621:43:10"},"nodeType":"YulFunctionCall","src":"37621:71:10"},"nodeType":"YulExpressionStatement","src":"37621:71:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37713:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"37724:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37709:3:10"},"nodeType":"YulFunctionCall","src":"37709:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37733:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"37739:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37729:3:10"},"nodeType":"YulFunctionCall","src":"37729:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37702:6:10"},"nodeType":"YulFunctionCall","src":"37702:48:10"},"nodeType":"YulExpressionStatement","src":"37702:48:10"},{"nodeType":"YulAssignment","src":"37759:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37893:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37767:124:10"},"nodeType":"YulFunctionCall","src":"37767:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37759:4:10"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37952:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37965:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"37976:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37961:3:10"},"nodeType":"YulFunctionCall","src":"37961:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37908:43:10"},"nodeType":"YulFunctionCall","src":"37908:72:10"},"nodeType":"YulExpressionStatement","src":"37908:72:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38034:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38047:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"38058:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38043:3:10"},"nodeType":"YulFunctionCall","src":"38043:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37990:43:10"},"nodeType":"YulFunctionCall","src":"37990:72:10"},"nodeType":"YulExpressionStatement","src":"37990:72:10"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38116:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38129:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"38140:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38125:3:10"},"nodeType":"YulFunctionCall","src":"38125:19:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"38072:43:10"},"nodeType":"YulFunctionCall","src":"38072:73:10"},"nodeType":"YulExpressionStatement","src":"38072:73:10"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"38193:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38206:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"38217:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38202:3:10"},"nodeType":"YulFunctionCall","src":"38202:19:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"38155:37:10"},"nodeType":"YulFunctionCall","src":"38155:67:10"},"nodeType":"YulExpressionStatement","src":"38155:67:10"}]},"name":"abi_encode_tuple_t_bytes32_t_stringliteral_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db_t_uint256_t_uint256_t_uint256_t_bool__to_t_bytes32_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37514:9:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"37526:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37534:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37542:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37550:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37558:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37569:4:10","type":""}],"src":"37269:960:10"},{"body":{"nodeType":"YulBlock","src":"38263:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38280:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38283:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38273:6:10"},"nodeType":"YulFunctionCall","src":"38273:88:10"},"nodeType":"YulExpressionStatement","src":"38273:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38377:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"38380:4:10","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38370:6:10"},"nodeType":"YulFunctionCall","src":"38370:15:10"},"nodeType":"YulExpressionStatement","src":"38370:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38401:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38404:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38394:6:10"},"nodeType":"YulFunctionCall","src":"38394:15:10"},"nodeType":"YulExpressionStatement","src":"38394:15:10"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"38235:180:10"},{"body":{"nodeType":"YulBlock","src":"38527:58:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38549:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"38557:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38545:3:10"},"nodeType":"YulFunctionCall","src":"38545:14:10"},{"hexValue":"696e76616c696420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"38561:16:10","type":"","value":"invalid amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38538:6:10"},"nodeType":"YulFunctionCall","src":"38538:40:10"},"nodeType":"YulExpressionStatement","src":"38538:40:10"}]},"name":"store_literal_in_memory_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38519:6:10","type":""}],"src":"38421:164:10"},{"body":{"nodeType":"YulBlock","src":"38737:220:10","statements":[{"nodeType":"YulAssignment","src":"38747:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38813:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"38818:2:10","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38754:58:10"},"nodeType":"YulFunctionCall","src":"38754:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38747:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38919:3:10"}],"functionName":{"name":"store_literal_in_memory_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7","nodeType":"YulIdentifier","src":"38830:88:10"},"nodeType":"YulFunctionCall","src":"38830:93:10"},"nodeType":"YulExpressionStatement","src":"38830:93:10"},{"nodeType":"YulAssignment","src":"38932:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38943:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"38948:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38939:3:10"},"nodeType":"YulFunctionCall","src":"38939:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38932:3:10"}]}]},"name":"abi_encode_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38725:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38733:3:10","type":""}],"src":"38591:366:10"},{"body":{"nodeType":"YulBlock","src":"39134:248:10","statements":[{"nodeType":"YulAssignment","src":"39144:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39156:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"39167:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39152:3:10"},"nodeType":"YulFunctionCall","src":"39152:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39144:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39191:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"39202:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39187:3:10"},"nodeType":"YulFunctionCall","src":"39187:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39210:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"39216:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39206:3:10"},"nodeType":"YulFunctionCall","src":"39206:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39180:6:10"},"nodeType":"YulFunctionCall","src":"39180:47:10"},"nodeType":"YulExpressionStatement","src":"39180:47:10"},{"nodeType":"YulAssignment","src":"39236:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39370:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39244:124:10"},"nodeType":"YulFunctionCall","src":"39244:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39236:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39114:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39129:4:10","type":""}],"src":"38963:419:10"},{"body":{"nodeType":"YulBlock","src":"39494:116:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39516:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"39524:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39512:3:10"},"nodeType":"YulFunctionCall","src":"39512:14:10"},{"hexValue":"434f4e545249425554494f4e205355434345535346554c4c5920524543454956","kind":"string","nodeType":"YulLiteral","src":"39528:34:10","type":"","value":"CONTRIBUTION SUCCESSFULLY RECEIV"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39505:6:10"},"nodeType":"YulFunctionCall","src":"39505:58:10"},"nodeType":"YulExpressionStatement","src":"39505:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39584:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"39592:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39580:3:10"},"nodeType":"YulFunctionCall","src":"39580:15:10"},{"hexValue":"454421","kind":"string","nodeType":"YulLiteral","src":"39597:5:10","type":"","value":"ED!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39573:6:10"},"nodeType":"YulFunctionCall","src":"39573:30:10"},"nodeType":"YulExpressionStatement","src":"39573:30:10"}]},"name":"store_literal_in_memory_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39486:6:10","type":""}],"src":"39388:222:10"},{"body":{"nodeType":"YulBlock","src":"39762:220:10","statements":[{"nodeType":"YulAssignment","src":"39772:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39838:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"39843:2:10","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39779:58:10"},"nodeType":"YulFunctionCall","src":"39779:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39772:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39944:3:10"}],"functionName":{"name":"store_literal_in_memory_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1","nodeType":"YulIdentifier","src":"39855:88:10"},"nodeType":"YulFunctionCall","src":"39855:93:10"},"nodeType":"YulExpressionStatement","src":"39855:93:10"},{"nodeType":"YulAssignment","src":"39957:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39968:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"39973:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39964:3:10"},"nodeType":"YulFunctionCall","src":"39964:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39957:3:10"}]}]},"name":"abi_encode_t_stringliteral_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39750:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39758:3:10","type":""}],"src":"39616:366:10"},{"body":{"nodeType":"YulBlock","src":"40215:412:10","statements":[{"nodeType":"YulAssignment","src":"40225:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40237:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"40248:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40233:3:10"},"nodeType":"YulFunctionCall","src":"40233:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40225:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40305:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40318:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"40329:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40314:3:10"},"nodeType":"YulFunctionCall","src":"40314:17:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"40261:43:10"},"nodeType":"YulFunctionCall","src":"40261:71:10"},"nodeType":"YulExpressionStatement","src":"40261:71:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40353:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"40364:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40349:3:10"},"nodeType":"YulFunctionCall","src":"40349:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40373:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"40379:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40369:3:10"},"nodeType":"YulFunctionCall","src":"40369:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40342:6:10"},"nodeType":"YulFunctionCall","src":"40342:48:10"},"nodeType":"YulExpressionStatement","src":"40342:48:10"},{"nodeType":"YulAssignment","src":"40399:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40533:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40407:124:10"},"nodeType":"YulFunctionCall","src":"40407:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40399:4:10"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40592:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40605:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"40616:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40601:3:10"},"nodeType":"YulFunctionCall","src":"40601:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"40548:43:10"},"nodeType":"YulFunctionCall","src":"40548:72:10"},"nodeType":"YulExpressionStatement","src":"40548:72:10"}]},"name":"abi_encode_tuple_t_bytes32_t_stringliteral_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1_t_uint256__to_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40179:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40191:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40199:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40210:4:10","type":""}],"src":"39988:639:10"},{"body":{"nodeType":"YulBlock","src":"40739:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40761:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"40769:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40757:3:10"},"nodeType":"YulFunctionCall","src":"40757:14:10"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"40773:33:10","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40750:6:10"},"nodeType":"YulFunctionCall","src":"40750:57:10"},"nodeType":"YulExpressionStatement","src":"40750:57:10"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40731:6:10","type":""}],"src":"40633:181:10"},{"body":{"nodeType":"YulBlock","src":"40966:220:10","statements":[{"nodeType":"YulAssignment","src":"40976:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41042:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"41047:2:10","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40983:58:10"},"nodeType":"YulFunctionCall","src":"40983:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40976:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41148:3:10"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"41059:88:10"},"nodeType":"YulFunctionCall","src":"41059:93:10"},"nodeType":"YulExpressionStatement","src":"41059:93:10"},{"nodeType":"YulAssignment","src":"41161:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41172:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"41177:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41168:3:10"},"nodeType":"YulFunctionCall","src":"41168:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41161:3:10"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40954:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40962:3:10","type":""}],"src":"40820:366:10"},{"body":{"nodeType":"YulBlock","src":"41363:248:10","statements":[{"nodeType":"YulAssignment","src":"41373:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41385:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"41396:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41381:3:10"},"nodeType":"YulFunctionCall","src":"41381:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41373:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41420:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"41431:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41416:3:10"},"nodeType":"YulFunctionCall","src":"41416:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41439:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"41445:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41435:3:10"},"nodeType":"YulFunctionCall","src":"41435:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41409:6:10"},"nodeType":"YulFunctionCall","src":"41409:47:10"},"nodeType":"YulExpressionStatement","src":"41409:47:10"},{"nodeType":"YulAssignment","src":"41465:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41599:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41473:124:10"},"nodeType":"YulFunctionCall","src":"41473:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41465:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41343:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41358:4:10","type":""}],"src":"41192:419:10"},{"body":{"nodeType":"YulBlock","src":"41730:34:10","statements":[{"nodeType":"YulAssignment","src":"41740:18:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"41755:3:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"41740:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41702:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"41707:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"41718:11:10","type":""}],"src":"41617:147:10"},{"body":{"nodeType":"YulBlock","src":"41876:8:10","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41868:6:10","type":""}],"src":"41770:114:10"},{"body":{"nodeType":"YulBlock","src":"42053:235:10","statements":[{"nodeType":"YulAssignment","src":"42063:90:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42146:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"42151:1:10","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42070:75:10"},"nodeType":"YulFunctionCall","src":"42070:83:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42063:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42251:3:10"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"42162:88:10"},"nodeType":"YulFunctionCall","src":"42162:93:10"},"nodeType":"YulExpressionStatement","src":"42162:93:10"},{"nodeType":"YulAssignment","src":"42264:18:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42275:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"42280:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42271:3:10"},"nodeType":"YulFunctionCall","src":"42271:11:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42264:3:10"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42041:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42049:3:10","type":""}],"src":"41890:398:10"},{"body":{"nodeType":"YulBlock","src":"42482:191:10","statements":[{"nodeType":"YulAssignment","src":"42493:154:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42643:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42500:141:10"},"nodeType":"YulFunctionCall","src":"42500:147:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42493:3:10"}]},{"nodeType":"YulAssignment","src":"42657:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"42664:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42657:3:10"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42469:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42478:3:10","type":""}],"src":"42294:379:10"},{"body":{"nodeType":"YulBlock","src":"42785:58:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42807:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"42815:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42803:3:10"},"nodeType":"YulFunctionCall","src":"42803:14:10"},{"hexValue":"7061796d656e74206661696c6564","kind":"string","nodeType":"YulLiteral","src":"42819:16:10","type":"","value":"payment failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42796:6:10"},"nodeType":"YulFunctionCall","src":"42796:40:10"},"nodeType":"YulExpressionStatement","src":"42796:40:10"}]},"name":"store_literal_in_memory_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42777:6:10","type":""}],"src":"42679:164:10"},{"body":{"nodeType":"YulBlock","src":"42995:220:10","statements":[{"nodeType":"YulAssignment","src":"43005:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43071:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"43076:2:10","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43012:58:10"},"nodeType":"YulFunctionCall","src":"43012:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43005:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43177:3:10"}],"functionName":{"name":"store_literal_in_memory_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b","nodeType":"YulIdentifier","src":"43088:88:10"},"nodeType":"YulFunctionCall","src":"43088:93:10"},"nodeType":"YulExpressionStatement","src":"43088:93:10"},{"nodeType":"YulAssignment","src":"43190:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43201:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"43206:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43197:3:10"},"nodeType":"YulFunctionCall","src":"43197:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43190:3:10"}]}]},"name":"abi_encode_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42983:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42991:3:10","type":""}],"src":"42849:366:10"},{"body":{"nodeType":"YulBlock","src":"43392:248:10","statements":[{"nodeType":"YulAssignment","src":"43402:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43414:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"43425:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43410:3:10"},"nodeType":"YulFunctionCall","src":"43410:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43402:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43449:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"43460:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43445:3:10"},"nodeType":"YulFunctionCall","src":"43445:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43468:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"43474:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43464:3:10"},"nodeType":"YulFunctionCall","src":"43464:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43438:6:10"},"nodeType":"YulFunctionCall","src":"43438:47:10"},"nodeType":"YulExpressionStatement","src":"43438:47:10"},{"nodeType":"YulAssignment","src":"43494:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43628:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43502:124:10"},"nodeType":"YulFunctionCall","src":"43502:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43494:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43372:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43387:4:10","type":""}],"src":"43221:419:10"},{"body":{"nodeType":"YulBlock","src":"43752:67:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43774:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"43782:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43770:3:10"},"nodeType":"YulFunctionCall","src":"43770:14:10"},{"hexValue":"54696d652068617320616c726561647920706173736564","kind":"string","nodeType":"YulLiteral","src":"43786:25:10","type":"","value":"Time has already passed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43763:6:10"},"nodeType":"YulFunctionCall","src":"43763:49:10"},"nodeType":"YulExpressionStatement","src":"43763:49:10"}]},"name":"store_literal_in_memory_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43744:6:10","type":""}],"src":"43646:173:10"},{"body":{"nodeType":"YulBlock","src":"43971:220:10","statements":[{"nodeType":"YulAssignment","src":"43981:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44047:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"44052:2:10","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43988:58:10"},"nodeType":"YulFunctionCall","src":"43988:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43981:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44153:3:10"}],"functionName":{"name":"store_literal_in_memory_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176","nodeType":"YulIdentifier","src":"44064:88:10"},"nodeType":"YulFunctionCall","src":"44064:93:10"},"nodeType":"YulExpressionStatement","src":"44064:93:10"},{"nodeType":"YulAssignment","src":"44166:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44177:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"44182:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44173:3:10"},"nodeType":"YulFunctionCall","src":"44173:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44166:3:10"}]}]},"name":"abi_encode_t_stringliteral_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43959:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43967:3:10","type":""}],"src":"43825:366:10"},{"body":{"nodeType":"YulBlock","src":"44368:248:10","statements":[{"nodeType":"YulAssignment","src":"44378:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44390:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"44401:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44386:3:10"},"nodeType":"YulFunctionCall","src":"44386:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44378:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44425:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"44436:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44421:3:10"},"nodeType":"YulFunctionCall","src":"44421:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44444:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"44450:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44440:3:10"},"nodeType":"YulFunctionCall","src":"44440:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44414:6:10"},"nodeType":"YulFunctionCall","src":"44414:47:10"},"nodeType":"YulExpressionStatement","src":"44414:47:10"},{"nodeType":"YulAssignment","src":"44470:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44604:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44478:124:10"},"nodeType":"YulFunctionCall","src":"44478:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44470:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44348:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44363:4:10","type":""}],"src":"44197:419:10"},{"body":{"nodeType":"YulBlock","src":"44728:72:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44750:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"44758:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44746:3:10"},"nodeType":"YulFunctionCall","src":"44746:14:10"},{"hexValue":"646f75626c6520766f74696e67206973206e6f7420616c6c6f776564","kind":"string","nodeType":"YulLiteral","src":"44762:30:10","type":"","value":"double voting is not allowed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44739:6:10"},"nodeType":"YulFunctionCall","src":"44739:54:10"},"nodeType":"YulExpressionStatement","src":"44739:54:10"}]},"name":"store_literal_in_memory_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44720:6:10","type":""}],"src":"44622:178:10"},{"body":{"nodeType":"YulBlock","src":"44952:220:10","statements":[{"nodeType":"YulAssignment","src":"44962:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45028:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"45033:2:10","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44969:58:10"},"nodeType":"YulFunctionCall","src":"44969:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44962:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45134:3:10"}],"functionName":{"name":"store_literal_in_memory_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf","nodeType":"YulIdentifier","src":"45045:88:10"},"nodeType":"YulFunctionCall","src":"45045:93:10"},"nodeType":"YulExpressionStatement","src":"45045:93:10"},{"nodeType":"YulAssignment","src":"45147:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45158:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"45163:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45154:3:10"},"nodeType":"YulFunctionCall","src":"45154:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45147:3:10"}]}]},"name":"abi_encode_t_stringliteral_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44940:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44948:3:10","type":""}],"src":"44806:366:10"},{"body":{"nodeType":"YulBlock","src":"45349:248:10","statements":[{"nodeType":"YulAssignment","src":"45359:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45371:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"45382:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45367:3:10"},"nodeType":"YulFunctionCall","src":"45367:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45359:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45406:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"45417:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45402:3:10"},"nodeType":"YulFunctionCall","src":"45402:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45425:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"45431:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45421:3:10"},"nodeType":"YulFunctionCall","src":"45421:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45395:6:10"},"nodeType":"YulFunctionCall","src":"45395:47:10"},"nodeType":"YulExpressionStatement","src":"45395:47:10"},{"nodeType":"YulAssignment","src":"45451:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45585:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45459:124:10"},"nodeType":"YulFunctionCall","src":"45459:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45451:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45329:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45344:4:10","type":""}],"src":"45178:419:10"},{"body":{"nodeType":"YulBlock","src":"45717:34:10","statements":[{"nodeType":"YulAssignment","src":"45727:18:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"45742:3:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"45727:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45689:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"45694:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"45705:11:10","type":""}],"src":"45603:148:10"},{"body":{"nodeType":"YulBlock","src":"45863:67:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45885:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"45893:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45881:3:10"},"nodeType":"YulFunctionCall","src":"45881:14:10"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"45897:25:10","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45874:6:10"},"nodeType":"YulFunctionCall","src":"45874:49:10"},"nodeType":"YulExpressionStatement","src":"45874:49:10"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45855:6:10","type":""}],"src":"45757:173:10"},{"body":{"nodeType":"YulBlock","src":"46100:238:10","statements":[{"nodeType":"YulAssignment","src":"46110:92:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46194:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"46199:2:10","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46117:76:10"},"nodeType":"YulFunctionCall","src":"46117:85:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46110:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46300:3:10"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"46211:88:10"},"nodeType":"YulFunctionCall","src":"46211:93:10"},"nodeType":"YulExpressionStatement","src":"46211:93:10"},{"nodeType":"YulAssignment","src":"46313:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46324:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"46329:2:10","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46320:3:10"},"nodeType":"YulFunctionCall","src":"46320:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46313:3:10"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46088:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46096:3:10","type":""}],"src":"45936:402:10"},{"body":{"nodeType":"YulBlock","src":"46454:280:10","statements":[{"nodeType":"YulVariableDeclaration","src":"46464:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46511:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"46478:32:10"},"nodeType":"YulFunctionCall","src":"46478:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"46468:6:10","type":""}]},{"nodeType":"YulAssignment","src":"46526:96:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46610:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"46615:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46533:76:10"},"nodeType":"YulFunctionCall","src":"46533:89:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46526:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46670:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"46677:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46666:3:10"},"nodeType":"YulFunctionCall","src":"46666:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"46684:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"46689:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"46631:34:10"},"nodeType":"YulFunctionCall","src":"46631:65:10"},"nodeType":"YulExpressionStatement","src":"46631:65:10"},{"nodeType":"YulAssignment","src":"46705:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46716:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"46721:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46712:3:10"},"nodeType":"YulFunctionCall","src":"46712:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46705:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46435:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"46442:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46450:3:10","type":""}],"src":"46344:390:10"},{"body":{"nodeType":"YulBlock","src":"46846:61:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46868:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"46876:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46864:3:10"},"nodeType":"YulFunctionCall","src":"46864:14:10"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"46880:19:10","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46857:6:10"},"nodeType":"YulFunctionCall","src":"46857:43:10"},"nodeType":"YulExpressionStatement","src":"46857:43:10"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46838:6:10","type":""}],"src":"46740:167:10"},{"body":{"nodeType":"YulBlock","src":"47077:238:10","statements":[{"nodeType":"YulAssignment","src":"47087:92:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47171:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"47176:2:10","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"47094:76:10"},"nodeType":"YulFunctionCall","src":"47094:85:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47087:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47277:3:10"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"47188:88:10"},"nodeType":"YulFunctionCall","src":"47188:93:10"},"nodeType":"YulExpressionStatement","src":"47188:93:10"},{"nodeType":"YulAssignment","src":"47290:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47301:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"47306:2:10","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47297:3:10"},"nodeType":"YulFunctionCall","src":"47297:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47290:3:10"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47065:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47073:3:10","type":""}],"src":"46913:402:10"},{"body":{"nodeType":"YulBlock","src":"47707:581:10","statements":[{"nodeType":"YulAssignment","src":"47718:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47869:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"47725:142:10"},"nodeType":"YulFunctionCall","src":"47725:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47718:3:10"}]},{"nodeType":"YulAssignment","src":"47883:102:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"47972:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"47981:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"47890:81:10"},"nodeType":"YulFunctionCall","src":"47890:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47883:3:10"}]},{"nodeType":"YulAssignment","src":"47995:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48146:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"48002:142:10"},"nodeType":"YulFunctionCall","src":"48002:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47995:3:10"}]},{"nodeType":"YulAssignment","src":"48160:102:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"48249:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"48258:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"48167:81:10"},"nodeType":"YulFunctionCall","src":"48167:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48160:3:10"}]},{"nodeType":"YulAssignment","src":"48272:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"48279:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48272:3:10"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47678:3:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47684:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47692:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47703:3:10","type":""}],"src":"47321:967:10"},{"body":{"nodeType":"YulBlock","src":"48342:362:10","statements":[{"nodeType":"YulAssignment","src":"48352:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"48375:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"48357:17:10"},"nodeType":"YulFunctionCall","src":"48357:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"48352:1:10"}]},{"nodeType":"YulAssignment","src":"48386:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"48409:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"48391:17:10"},"nodeType":"YulFunctionCall","src":"48391:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"48386:1:10"}]},{"nodeType":"YulVariableDeclaration","src":"48420:28:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"48443:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"48446:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"48439:3:10"},"nodeType":"YulFunctionCall","src":"48439:9:10"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"48424:11:10","type":""}]},{"nodeType":"YulAssignment","src":"48457:41:10","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"48486:11:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"48468:17:10"},"nodeType":"YulFunctionCall","src":"48468:30:10"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"48457:7:10"}]},{"body":{"nodeType":"YulBlock","src":"48675:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"48677:16:10"},"nodeType":"YulFunctionCall","src":"48677:18:10"},"nodeType":"YulExpressionStatement","src":"48677:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"48608:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"48601:6:10"},"nodeType":"YulFunctionCall","src":"48601:9:10"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"48631:1:10"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"48638:7:10"},{"name":"x","nodeType":"YulIdentifier","src":"48647:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"48634:3:10"},"nodeType":"YulFunctionCall","src":"48634:15:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"48628:2:10"},"nodeType":"YulFunctionCall","src":"48628:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"48581:2:10"},"nodeType":"YulFunctionCall","src":"48581:83:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"48561:6:10"},"nodeType":"YulFunctionCall","src":"48561:113:10"},"nodeType":"YulIf","src":"48558:139:10"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"48325:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"48328:1:10","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"48334:7:10","type":""}],"src":"48294:410:10"},{"body":{"nodeType":"YulBlock","src":"48753:128:10","statements":[{"nodeType":"YulAssignment","src":"48763:33:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48790:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"48772:17:10"},"nodeType":"YulFunctionCall","src":"48772:24:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"48763:5:10"}]},{"body":{"nodeType":"YulBlock","src":"48824:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"48826:16:10"},"nodeType":"YulFunctionCall","src":"48826:18:10"},"nodeType":"YulExpressionStatement","src":"48826:18:10"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48811:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"48818:4:10","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"48808:2:10"},"nodeType":"YulFunctionCall","src":"48808:15:10"},"nodeType":"YulIf","src":"48805:41:10"},{"nodeType":"YulAssignment","src":"48855:20:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48866:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"48873:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48862:3:10"},"nodeType":"YulFunctionCall","src":"48862:13:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"48855:3:10"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48739:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"48749:3:10","type":""}],"src":"48710:171:10"},{"body":{"nodeType":"YulBlock","src":"48993:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49015:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"49023:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49011:3:10"},"nodeType":"YulFunctionCall","src":"49011:14:10"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"49027:34:10","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49004:6:10"},"nodeType":"YulFunctionCall","src":"49004:58:10"},"nodeType":"YulExpressionStatement","src":"49004:58:10"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48985:6:10","type":""}],"src":"48887:182:10"},{"body":{"nodeType":"YulBlock","src":"49221:220:10","statements":[{"nodeType":"YulAssignment","src":"49231:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49297:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"49302:2:10","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49238:58:10"},"nodeType":"YulFunctionCall","src":"49238:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49231:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49403:3:10"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"49314:88:10"},"nodeType":"YulFunctionCall","src":"49314:93:10"},"nodeType":"YulExpressionStatement","src":"49314:93:10"},{"nodeType":"YulAssignment","src":"49416:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49427:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"49432:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49423:3:10"},"nodeType":"YulFunctionCall","src":"49423:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"49416:3:10"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"49209:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"49217:3:10","type":""}],"src":"49075:366:10"},{"body":{"nodeType":"YulBlock","src":"49618:248:10","statements":[{"nodeType":"YulAssignment","src":"49628:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49640:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"49651:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49636:3:10"},"nodeType":"YulFunctionCall","src":"49636:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49628:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49675:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"49686:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49671:3:10"},"nodeType":"YulFunctionCall","src":"49671:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49694:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"49700:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49690:3:10"},"nodeType":"YulFunctionCall","src":"49690:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49664:6:10"},"nodeType":"YulFunctionCall","src":"49664:47:10"},"nodeType":"YulExpressionStatement","src":"49664:47:10"},{"nodeType":"YulAssignment","src":"49720:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49854:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49728:124:10"},"nodeType":"YulFunctionCall","src":"49728:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49720:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49598:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49613:4:10","type":""}],"src":"49447:419:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct MantaDao.Voted -> struct MantaDao.Voted\n    function abi_encode_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // voter\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // chosen\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x60)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct MantaDao.Voted[] -> struct MantaDao.Voted[]\n    function abi_encode_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Voted_$1805_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    // struct MantaDao.Proposals -> struct MantaDao.Proposals\n    function abi_encode_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0180)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // upVote\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // downVotes\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // duration\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // title\n\n            let memberValue0 := mload(add(value, 0xa0))\n\n            mstore(add(pos, 0xa0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // description\n\n            let memberValue0 := mload(add(value, 0xc0))\n\n            mstore(add(pos, 0xc0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // paid\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // passed\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // beneficiary\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // propoper\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x0140))\n        }\n\n        {\n            // executor\n\n            let memberValue0 := mload(add(value, 0x0160))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x0160))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Proposals_$1798_memory_ptr__to_t_struct$_Proposals_$1798_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // struct MantaDao.Voted -> struct MantaDao.Voted\n    function abi_encode_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // voter\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // chosen\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Voted_$1805_memory_ptr__to_t_struct$_Voted_$1805_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_struct$_Voted_$1805_memory_ptr_to_t_struct$_Voted_$1805_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct MantaDao.Proposals -> struct MantaDao.Proposals\n    function abi_encode_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x0180)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // upVote\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // downVotes\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // duration\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // title\n\n            let memberValue0 := mload(add(value, 0xa0))\n\n            mstore(add(pos, 0xa0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // description\n\n            let memberValue0 := mload(add(value, 0xc0))\n\n            mstore(add(pos, 0xc0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // paid\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // passed\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // beneficiary\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // propoper\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x0140))\n        }\n\n        {\n            // executor\n\n            let memberValue0 := mload(add(value, 0x0160))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x0160))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct MantaDao.Proposals[] -> struct MantaDao.Proposals[]\n    function abi_encode_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Proposals_$1798_memory_ptr_to_t_struct$_Proposals_$1798_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposals_$1798_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function store_literal_in_memory_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient fund\")\n\n    }\n\n    function abi_encode_t_stringliteral_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_592abcc5f54215f2cd2861eadeaf6bca4e49b12fcb3ba3b0f7aec50dd8364808_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42(memPtr) {\n\n        mstore(add(memPtr, 0), \"payment already made\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3eb27a23ec88d0e9ff230907aa010d1f6121768b8c4351a98aaaa8d17e29b42_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_739f78d5d9a0f5f3559e0a53414dcfe39007085d11cf832532ededfcd103f2d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70(memPtr) {\n\n        mstore(add(memPtr, 0), \"PAYMENT SUCCESSFULLY MADE!\")\n\n    }\n\n    function abi_encode_t_stringliteral_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_stringliteral_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70_t_uint256__to_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e90d2277e7ab5039d446417fc029e90148d9df658060b35d3b8c55c968908a70_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_string_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len) {\n\n        let newLen := array_length_t_string_calldata_ptr(src, len)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := calldataload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal Raised\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_stringliteral_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c_t_uint256__to_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef93be19f9e96827eb89ca06962a31915f992326f46a0dd7baa86c9d2673136c_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db(memPtr) {\n\n        mstore(add(memPtr, 0), \"PROPOSAL VOTE\")\n\n    }\n\n    function abi_encode_t_stringliteral_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_stringliteral_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db_t_uint256_t_uint256_t_uint256_t_bool__to_t_bytes32_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_041f008c5c81b74883177c40caf5af1f1f12ac4cbca47c185de3bd2c7760e8db_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 160))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"CONTRIBUTION SUCCESSFULLY RECEIV\")\n\n        mstore(add(memPtr, 32), \"ED!\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_stringliteral_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1_t_uint256__to_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4226e0d77bc98aa4c3293f13a184a458c0445f713051161834c14f315e8b8a1_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b(memPtr) {\n\n        mstore(add(memPtr, 0), \"payment failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176(memPtr) {\n\n        mstore(add(memPtr, 0), \"Time has already passed\")\n\n    }\n\n    function abi_encode_t_stringliteral_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68d2d57f3c8e1c3751e220f17d167aca6dcdb8c8d73ae679348689b0e1f8f176_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf(memPtr) {\n\n        mstore(add(memPtr, 0), \"double voting is not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87c06c9eb9f6c2224eb2a2b05e1959b6e0d7f950d5b066d92f95b9a5f6f23bdf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1736":[{"length":32,"start":7348}],"1739":[{"length":32,"start":4167}],"1744":[{"length":32,"start":5095},{"length":32,"start":7586},{"length":32,"start":7719}],"1749":[{"length":32,"start":1485},{"length":32,"start":2350},{"length":32,"start":3501},{"length":32,"start":3886},{"length":32,"start":4298},{"length":32,"start":5420},{"length":32,"start":6073},{"length":32,"start":7226},{"length":32,"start":7544},{"length":32,"start":8042},{"length":32,"start":8238}]},"linkReferences":{},"object":"60806040526004361061012a5760003560e01c80637cdc2eb7116100ab578063cceb68f51161006f578063cceb68f514610440578063d547741f1461046b578063d6cc801614610494578063d7bb99ba146104bf578063f43327d2146104dd578063ff4b0db7146105085761012a565b80637cdc2eb71461033357806383047f801461037057806391d148541461039b578063a217fddf146103d8578063b31f111c146104035761012a565b80632c72fdfc116100f25780632c72fdfc1461024e5780632f2ff15d1461028b578063341edbed146102b457806336568abe146102df57806372630531146103085761012a565b806301ffc9a71461012f578063119c37c81461016c57806312b58349146101a95780631c9b2f35146101d4578063248a9ca314610211575b600080fd5b34801561013b57600080fd5b5061015660048036038101906101519190612a53565b610533565b6040516101639190612a9b565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190612aec565b6105ad565b6040516101a09190612b28565b60405180910390f35b3480156101b557600080fd5b506101be61097d565b6040516101cb9190612b28565b60405180910390f35b3480156101e057600080fd5b506101fb60048036038101906101f69190612aec565b610987565b6040516102089190612c93565b60405180910390f35b34801561021d57600080fd5b5061023860048036038101906102339190612ceb565b610a74565b6040516102459190612d27565b60405180910390f35b34801561025a57600080fd5b5061027560048036038101906102709190612aec565b610a93565b6040516102829190612efe565b60405180910390f35b34801561029757600080fd5b506102b260048036038101906102ad9190612f4c565b610d4f565b005b3480156102c057600080fd5b506102c9610d70565b6040516102d69190612b28565b60405180910390f35b3480156102eb57600080fd5b5061030660048036038101906103019190612f4c565b610e5b565b005b34801561031457600080fd5b5061031d610ede565b60405161032a9190612f9b565b60405180910390f35b34801561033f57600080fd5b5061035a6004803603810190610355919061301b565b610f08565b6040516103679190612efe565b60405180910390f35b34801561037c57600080fd5b506103856113aa565b6040516103929190612b28565b60405180910390f35b3480156103a757600080fd5b506103c260048036038101906103bd9190612f4c565b611495565b6040516103cf9190612a9b565b60405180910390f35b3480156103e457600080fd5b506103ed6114ff565b6040516103fa9190612d27565b60405180910390f35b34801561040f57600080fd5b5061042a600480360381019061042591906130ee565b611506565b6040516104379190613170565b60405180910390f35b34801561044c57600080fd5b5061045561183e565b6040516104629190613358565b60405180910390f35b34801561047757600080fd5b50610492600480360381019061048d9190612f4c565b611b87565b005b3480156104a057600080fd5b506104a9611ba8565b6040516104b69190612a9b565b60405180910390f35b6104c7611bf1565b6040516104d49190612b28565b60405180910390f35b3480156104e957600080fd5b506104f2611fa8565b6040516104ff9190612a9b565b60405180910390f35b34801561051457600080fd5b5061051d611ff1565b60405161052a9190613429565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105a657506105a58261212a565b5b9050919050565b600060405180606001604052806022815260200161418d602291396105f27f000000000000000000000000000000000000000000000000000000000000000033611495565b8190610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b9190613495565b60405180910390fd5b506040518060400160405280601e81526020017f4f6e6c79206465706c6f7965722063616e206d616b65207061796d656e740000815250600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161481906106fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f59190613495565b60405180910390fd5b50610707612194565b600060056000868152602001908152602001600020905080600101546003541015610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075e90613503565b60405180910390fd5b600115158160070160009054906101000a900460ff161515036107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b69061356f565b60405180910390fd5b8060030154816002015411610809576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610800906135db565b60405180910390fd5b61083b81600101548260070160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121e3565b5060018160070160006101000a81548160ff021916908315150217905550338160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060010154600360008282546108b2919061362a565b925050819055508060070160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f73a1cb60f50f2e728bc99e4885df312cacdf69558d195a114a0e37d2836696a37f000000000000000000000000000000000000000000000000000000000000000084600101546040516109609291906136aa565b60405180910390a360035493505061097661229b565b5050919050565b6000600354905090565b606060076000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610a6957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff161515151581525050815260200190600101906109bc565b505050509050919050565b6000806000838152602001908152602001600020600101549050919050565b610a9b612911565b60056000838152602001908152602001600020604051806101800160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582018054610afc90613715565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2890613715565b8015610b755780601f10610b4a57610100808354040283529160200191610b75565b820191906000526020600020905b815481529060010190602001808311610b5857829003601f168201915b50505050508152602001600682018054610b8e90613715565b80601f0160208091040260200160405190810160405280929190818152602001828054610bba90613715565b8015610c075780601f10610bdc57610100808354040283529160200191610c07565b820191906000526020600020905b815481529060010190602001808311610bea57829003601f168201915b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff161515151581526020016007820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b610d5882610a74565b610d61816122a4565b610d6b83836122b8565b505050565b60006040518060400160405280600c81526020017f756e617574686f72697a65640000000000000000000000000000000000000000815250610dd27f000000000000000000000000000000000000000000000000000000000000000033611495565b8190610e14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0b9190613495565b60405180910390fd5b50600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505090565b610e63612398565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ed0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec7906137b8565b60405180910390fd5b610eda82826123a0565b5050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f10612911565b6040518060600160405280603181526020016141af60319139610f537f000000000000000000000000000000000000000000000000000000000000000033611495565b8190610f95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8c9190613495565b60405180910390fd5b50600060026000815480929190610fab906137d8565b91905055905060006005600083815260200190815260200160002090508181600001819055508481600101819055508989826005019182610fed929190613a06565b508787826006019182611001929190613a06565b50858160070160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0000000000000000000000000000000000000000000000000000000000000000426110719190613ad6565b81600401819055508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f73a1cb60f50f2e728bc99e4885df312cacdf69558d195a114a0e37d2836696a37f0000000000000000000000000000000000000000000000000000000000000000886040516110f8929190613b56565b60405180910390a38060405180610180016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201805461114f90613715565b80601f016020809104026020016040519081016040528092919081815260200182805461117b90613715565b80156111c85780601f1061119d576101008083540402835291602001916111c8565b820191906000526020600020905b8154815290600101906020018083116111ab57829003601f168201915b505050505081526020016006820180546111e190613715565b80601f016020809104026020016040519081016040528092919081815260200182805461120d90613715565b801561125a5780601f1061122f5761010080835404028352916020019161125a565b820191906000526020600020905b81548152906001019060200180831161123d57829003601f168201915b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff161515151581526020016007820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505093505050509695505050505050565b60006040518060400160405280600b81526020017f756e6174686f72697a656400000000000000000000000000000000000000000081525061140c7f000000000000000000000000000000000000000000000000000000000000000033611495565b819061144e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114459190613495565b60405180910390fd5b50600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505090565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b61150e6129b8565b604051806060016040528060248152602001614169602491396115517f000000000000000000000000000000000000000000000000000000000000000033611495565b8190611593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158a9190613495565b60405180910390fd5b5060006005600086815260200190815260200160002090506115b481612481565b83156115d9578060020160008154809291906115cf906137d8565b91905055506115f4565b8060030160008154809291906115ee906137d8565b91905055505b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600001549080600181540180825580915050600190039060005260206000200160009091909190915055600760008260000154815260200190815260200160002060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001861515815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555050508060070160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f547e0c985508bf44e88e036a89b60fb24d98f87250028cb1b4f9991ab734e6957f00000000000000000000000000000000000000000000000000000000000000008460010154856002015486600301548a6040516117f9959493929190613bde565b60405180910390a360405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018515158152509250505092915050565b606060025467ffffffffffffffff81111561185c5761185b61382b565b5b60405190808252806020026020018201604052801561189557816020015b611882612911565b81526020019060019003908161187a5790505b50905060005b600254811015611b83576005600082815260200190815260200160002060405180610180016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201805461190690613715565b80601f016020809104026020016040519081016040528092919081815260200182805461193290613715565b801561197f5780601f106119545761010080835404028352916020019161197f565b820191906000526020600020905b81548152906001019060200180831161196257829003601f168201915b5050505050815260200160068201805461199890613715565b80601f01602080910402602001604051908101604052809291908181526020018280546119c490613715565b8015611a115780601f106119e657610100808354040283529160200191611a11565b820191906000526020600020905b8154815290600101906020018083116119f457829003601f168201915b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff161515151581526020016007820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050828281518110611b6557611b64613c44565b5b60200260200101819052508080611b7b906137d8565b91505061189b565b5090565b611b9082610a74565b611b99816122a4565b611ba383836123a0565b505050565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411905090565b6000803411611c35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2c90613cbf565b60405180910390fd5b611c5f7f000000000000000000000000000000000000000000000000000000000000000033611495565b611e5357600034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cb09190613ad6565b90507f00000000000000000000000000000000000000000000000000000000000000008110611dcc5734600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611d6c9190613ad6565b92505081905550611d9d7f000000000000000000000000000000000000000000000000000000000000000033612615565b611dc77f000000000000000000000000000000000000000000000000000000000000000033612615565b611e4d565b34600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611e1b9190613ad6565b92505081905550611e4c7f000000000000000000000000000000000000000000000000000000000000000033612615565b5b50611f00565b34600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ea29190613ad6565b9250508190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ef89190613ad6565b925050819055505b3460036000828254611f129190613ad6565b925050819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f73a1cb60f50f2e728bc99e4885df312cacdf69558d195a114a0e37d2836696a37f000000000000000000000000000000000000000000000000000000000000000034604051611f98929190613d51565b60405180910390a3600354905090565b600080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411905090565b60606040518060400160405280600c81526020017f556e617574686f72697a656400000000000000000000000000000000000000008152506120537f000000000000000000000000000000000000000000000000000000000000000033611495565b8190612095576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161208c9190613495565b60405180910390fd5b50600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561211f57602002820191906000526020600020905b81548152602001906001019080831161210b575b505050505091505090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6002600154036121d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d090613dd9565b60405180910390fd5b6002600181905550565b6000808273ffffffffffffffffffffffffffffffffffffffff168460405161220a90613e2a565b60006040518083038185875af1925050503d8060008114612247576040519150601f19603f3d011682016040523d82523d6000602084013e61224c565b606091505b5050905080612290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161228790613e8b565b60405180910390fd5b600191505092915050565b60018081905550565b6122b5816122b0612398565b612623565b50565b6122c28282611495565b61239457600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612339612398565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b6123aa8282611495565b1561247d57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612422612398565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b8060070160019054906101000a900460ff16806124a2575042816004015411155b156124ff5760018160070160016101000a81548160ff0219169083151502179055506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124f690613ef7565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561258a57602002820191906000526020600020905b815481526020019060010190808311612576575b5050505050905060005b8151811015612610578181815181106125b0576125af613c44565b5b60200260200101518360000154036125fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125f490613f63565b60405180910390fd5b8080612608906137d8565b915050612594565b505050565b61261f82826122b8565b5050565b61262d8282611495565b6126a45761263a816126a8565b6126488360001c60206126d5565b604051602001612659929190614057565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161269b9190613495565b60405180910390fd5b5050565b60606126ce8273ffffffffffffffffffffffffffffffffffffffff16601460ff166126d5565b9050919050565b6060600060028360026126e89190614091565b6126f29190613ad6565b67ffffffffffffffff81111561270b5761270a61382b565b5b6040519080825280601f01601f19166020018201604052801561273d5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061277557612774613c44565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106127d9576127d8613c44565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026128199190614091565b6128239190613ad6565b90505b60018111156128c3577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061286557612864613c44565b5b1a60f81b82828151811061287c5761287b613c44565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806128bc906140d3565b9050612826565b5060008414612907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128fe90614148565b60405180910390fd5b8091505092915050565b60405180610180016040528060008152602001600081526020016000815260200160008152602001600081526020016060815260200160608152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612a30816129fb565b8114612a3b57600080fd5b50565b600081359050612a4d81612a27565b92915050565b600060208284031215612a6957612a686129f1565b5b6000612a7784828501612a3e565b91505092915050565b60008115159050919050565b612a9581612a80565b82525050565b6000602082019050612ab06000830184612a8c565b92915050565b6000819050919050565b612ac981612ab6565b8114612ad457600080fd5b50565b600081359050612ae681612ac0565b92915050565b600060208284031215612b0257612b016129f1565b5b6000612b1084828501612ad7565b91505092915050565b612b2281612ab6565b82525050565b6000602082019050612b3d6000830184612b19565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b9a82612b6f565b9050919050565b612baa81612b8f565b82525050565b612bb981612ab6565b82525050565b612bc881612a80565b82525050565b606082016000820151612be46000850182612ba1565b506020820151612bf76020850182612bb0565b506040820151612c0a6040850182612bbf565b50505050565b6000612c1c8383612bce565b60608301905092915050565b6000602082019050919050565b6000612c4082612b43565b612c4a8185612b4e565b9350612c5583612b5f565b8060005b83811015612c86578151612c6d8882612c10565b9750612c7883612c28565b925050600181019050612c59565b5085935050505092915050565b60006020820190508181036000830152612cad8184612c35565b905092915050565b6000819050919050565b612cc881612cb5565b8114612cd357600080fd5b50565b600081359050612ce581612cbf565b92915050565b600060208284031215612d0157612d006129f1565b5b6000612d0f84828501612cd6565b91505092915050565b612d2181612cb5565b82525050565b6000602082019050612d3c6000830184612d18565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612d7c578082015181840152602081019050612d61565b60008484015250505050565b6000601f19601f8301169050919050565b6000612da482612d42565b612dae8185612d4d565b9350612dbe818560208601612d5e565b612dc781612d88565b840191505092915050565b6000612ddd82612b6f565b9050919050565b612ded81612dd2565b82525050565b600061018083016000830151612e0c6000860182612bb0565b506020830151612e1f6020860182612bb0565b506040830151612e326040860182612bb0565b506060830151612e456060860182612bb0565b506080830151612e586080860182612bb0565b5060a083015184820360a0860152612e708282612d99565b91505060c083015184820360c0860152612e8a8282612d99565b91505060e0830151612e9f60e0860182612bbf565b50610100830151612eb4610100860182612bbf565b50610120830151612ec9610120860182612de4565b50610140830151612ede610140860182612ba1565b50610160830151612ef3610160860182612ba1565b508091505092915050565b60006020820190508181036000830152612f188184612df3565b905092915050565b612f2981612b8f565b8114612f3457600080fd5b50565b600081359050612f4681612f20565b92915050565b60008060408385031215612f6357612f626129f1565b5b6000612f7185828601612cd6565b9250506020612f8285828601612f37565b9150509250929050565b612f9581612b8f565b82525050565b6000602082019050612fb06000830184612f8c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612fdb57612fda612fb6565b5b8235905067ffffffffffffffff811115612ff857612ff7612fbb565b5b60208301915083600182028301111561301457613013612fc0565b5b9250929050565b60008060008060008060808789031215613038576130376129f1565b5b600087013567ffffffffffffffff811115613056576130556129f6565b5b61306289828a01612fc5565b9650965050602087013567ffffffffffffffff811115613085576130846129f6565b5b61309189828a01612fc5565b945094505060406130a489828a01612f37565b92505060606130b589828a01612ad7565b9150509295509295509295565b6130cb81612a80565b81146130d657600080fd5b50565b6000813590506130e8816130c2565b92915050565b60008060408385031215613105576131046129f1565b5b600061311385828601612ad7565b9250506020613124858286016130d9565b9150509250929050565b6060820160008201516131446000850182612ba1565b5060208201516131576020850182612bb0565b50604082015161316a6040850182612bbf565b50505050565b6000606082019050613185600083018461312e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610180830160008301516131d06000860182612bb0565b5060208301516131e36020860182612bb0565b5060408301516131f66040860182612bb0565b5060608301516132096060860182612bb0565b50608083015161321c6080860182612bb0565b5060a083015184820360a08601526132348282612d99565b91505060c083015184820360c086015261324e8282612d99565b91505060e083015161326360e0860182612bbf565b50610100830151613278610100860182612bbf565b5061012083015161328d610120860182612de4565b506101408301516132a2610140860182612ba1565b506101608301516132b7610160860182612ba1565b508091505092915050565b60006132ce83836131b7565b905092915050565b6000602082019050919050565b60006132ee8261318b565b6132f88185613196565b93508360208202850161330a856131a7565b8060005b85811015613346578484038952815161332785826132c2565b9450613332836132d6565b925060208a0199505060018101905061330e565b50829750879550505050505092915050565b6000602082019050818103600083015261337281846132e3565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006133b28383612bb0565b60208301905092915050565b6000602082019050919050565b60006133d68261337a565b6133e08185613385565b93506133eb83613396565b8060005b8381101561341c57815161340388826133a6565b975061340e836133be565b9250506001810190506133ef565b5085935050505092915050565b6000602082019050818103600083015261344381846133cb565b905092915050565b600082825260208201905092915050565b600061346782612d42565b613471818561344b565b9350613481818560208601612d5e565b61348a81612d88565b840191505092915050565b600060208201905081810360008301526134af818461345c565b905092915050565b7f696e73756666696369656e742066756e64000000000000000000000000000000600082015250565b60006134ed60118361344b565b91506134f8826134b7565b602082019050919050565b6000602082019050818103600083015261351c816134e0565b9050919050565b7f7061796d656e7420616c7265616479206d616465000000000000000000000000600082015250565b600061355960148361344b565b915061356482613523565b602082019050919050565b600060208201905081810360008301526135888161354c565b9050919050565b7f696e73756666696369656e7420766f7465730000000000000000000000000000600082015250565b60006135c560128361344b565b91506135d08261358f565b602082019050919050565b600060208201905081810360008301526135f4816135b8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061363582612ab6565b915061364083612ab6565b9250828203905081811115613658576136576135fb565b5b92915050565b7f5041594d454e54205355434345535346554c4c59204d41444521000000000000600082015250565b6000613694601a8361344b565b915061369f8261365e565b602082019050919050565b60006060820190506136bf6000830185612d18565b81810360208301526136d081613687565b90506136df6040830184612b19565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061372d57607f821691505b6020821081036137405761373f6136e6565b5b50919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006137a2602f8361344b565b91506137ad82613746565b604082019050919050565b600060208201905081810360008301526137d181613795565b9050919050565b60006137e382612ab6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613815576138146135fb565b5b600182019050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026138bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261387f565b6138c6868361387f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006139036138fe6138f984612ab6565b6138de565b612ab6565b9050919050565b6000819050919050565b61391d836138e8565b6139316139298261390a565b84845461388c565b825550505050565b600090565b613946613939565b613951818484613914565b505050565b5b818110156139755761396a60008261393e565b600181019050613957565b5050565b601f8211156139ba5761398b8161385a565b6139948461386f565b810160208510156139a3578190505b6139b76139af8561386f565b830182613956565b50505b505050565b600082821c905092915050565b60006139dd600019846008026139bf565b1980831691505092915050565b60006139f683836139cc565b9150826002028217905092915050565b613a108383613820565b67ffffffffffffffff811115613a2957613a2861382b565b5b613a338254613715565b613a3e828285613979565b6000601f831160018114613a6d5760008415613a5b578287013590505b613a6585826139ea565b865550613acd565b601f198416613a7b8661385a565b60005b82811015613aa357848901358255600182019150602085019450602081019050613a7e565b86831015613ac05784890135613abc601f8916826139cc565b8355505b6001600288020188555050505b50505050505050565b6000613ae182612ab6565b9150613aec83612ab6565b9250828201905080821115613b0457613b036135fb565b5b92915050565b7f50726f706f73616c205261697365640000000000000000000000000000000000600082015250565b6000613b40600f8361344b565b9150613b4b82613b0a565b602082019050919050565b6000606082019050613b6b6000830185612d18565b8181036020830152613b7c81613b33565b9050613b8b6040830184612b19565b9392505050565b7f50524f504f53414c20564f544500000000000000000000000000000000000000600082015250565b6000613bc8600d8361344b565b9150613bd382613b92565b602082019050919050565b600060c082019050613bf36000830188612d18565b8181036020830152613c0481613bbb565b9050613c136040830187612b19565b613c206060830186612b19565b613c2d6080830185612b19565b613c3a60a0830184612a8c565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f696e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000613ca9600e8361344b565b9150613cb482613c73565b602082019050919050565b60006020820190508181036000830152613cd881613c9c565b9050919050565b7f434f4e545249425554494f4e205355434345535346554c4c592052454345495660008201527f4544210000000000000000000000000000000000000000000000000000000000602082015250565b6000613d3b60238361344b565b9150613d4682613cdf565b604082019050919050565b6000606082019050613d666000830185612d18565b8181036020830152613d7781613d2e565b9050613d866040830184612b19565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613dc3601f8361344b565b9150613dce82613d8d565b602082019050919050565b60006020820190508181036000830152613df281613db6565b9050919050565b600081905092915050565b50565b6000613e14600083613df9565b9150613e1f82613e04565b600082019050919050565b6000613e3582613e07565b9150819050919050565b7f7061796d656e74206661696c6564000000000000000000000000000000000000600082015250565b6000613e75600e8361344b565b9150613e8082613e3f565b602082019050919050565b60006020820190508181036000830152613ea481613e68565b9050919050565b7f54696d652068617320616c726561647920706173736564000000000000000000600082015250565b6000613ee160178361344b565b9150613eec82613eab565b602082019050919050565b60006020820190508181036000830152613f1081613ed4565b9050919050565b7f646f75626c6520766f74696e67206973206e6f7420616c6c6f77656400000000600082015250565b6000613f4d601c8361344b565b9150613f5882613f17565b602082019050919050565b60006020820190508181036000830152613f7c81613f40565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000613fc4601783613f83565b9150613fcf82613f8e565b601782019050919050565b6000613fe582612d42565b613fef8185613f83565b9350613fff818560208601612d5e565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000614041601183613f83565b915061404c8261400b565b601182019050919050565b600061406282613fb7565b915061406e8285613fda565b915061407982614034565b91506140858284613fda565b91508190509392505050565b600061409c82612ab6565b91506140a783612ab6565b92508282026140b581612ab6565b915082820484148315176140cc576140cb6135fb565b5b5092915050565b60006140de82612ab6565b9150600082036140f1576140f06135fb565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061413260208361344b565b915061413d826140fc565b602082019050919050565b6000602082019050818103600083015261416181614125565b905091905056fe4f6e6c79207374616b65686f6c646572732063616e20706572666f726d20766f74696e674f6e6c79207374616b65686f6c646572732063616e206d616b65207061796d656e744f6e6c79207374616b65686f6c646572732061726520616c6c6f77656420746f206372656174652050726f706f73616c73a264697066735822122088245946d27025f8fe5a238c09db2f425f5a820c7bb38f183bba8e928610557c64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CDC2EB7 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xCCEB68F5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCCEB68F5 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xD6CC8016 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xD7BB99BA EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xF43327D2 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xFF4B0DB7 EQ PUSH2 0x508 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x7CDC2EB7 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x83047F80 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xB31F111C EQ PUSH2 0x403 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x2C72FDFC GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x2C72FDFC EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x341EDBED EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x72630531 EQ PUSH2 0x308 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x119C37C8 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x12B58349 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x1C9B2F35 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x211 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x2A53 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x2A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x2AEC JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BE PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x2AEC JUMP JUMPDEST PUSH2 0x987 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x2CEB JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x2D27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x2AEC JUMP JUMPDEST PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x2EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0xD4F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C9 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0xE5B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x2F9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x301B JUMP JUMPDEST PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x2EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x2A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x2D27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x30EE JUMP JUMPDEST PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x3170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x455 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x3358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x1B87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A9 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C7 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 PUSH2 0x1FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x2A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51D PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x3429 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5A6 JUMPI POP PUSH2 0x5A5 DUP3 PUSH2 0x212A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x418D PUSH1 0x22 SWAP2 CODECOPY PUSH2 0x5F2 PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F6E6C79206465706C6F7965722063616E206D616B65207061796D656E740000 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP2 SWAP1 PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x707 PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD LT ISZERO PUSH2 0x767 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75E SWAP1 PUSH2 0x3503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x356F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x809 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP1 PUSH2 0x35DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83B DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x7 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21E3 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x362A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x73A1CB60F50F2E728BC99E4885DF312CACDF69558D195A114A0E37D2836696A3 PUSH32 0x0 DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x960 SWAP3 SWAP2 SWAP1 PUSH2 0x36AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 SLOAD SWAP4 POP POP PUSH2 0x976 PUSH2 0x229B JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA69 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x9BC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9B PUSH2 0x2911 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0xAFC SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB28 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB75 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB4A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB75 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB58 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0xB8E SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBBA SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBDC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD58 DUP3 PUSH2 0xA74 JUMP JUMPDEST PUSH2 0xD61 DUP2 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0xD6B DUP4 DUP4 PUSH2 0x22B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x756E617574686F72697A65640000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xDD2 PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0B SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0x2398 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC7 SWAP1 PUSH2 0x37B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEDA DUP3 DUP3 PUSH2 0x23A0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF10 PUSH2 0x2911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x41AF PUSH1 0x31 SWAP2 CODECOPY PUSH2 0xF53 PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0xF95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFAB SWAP1 PUSH2 0x37D8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP10 DUP10 DUP3 PUSH1 0x5 ADD SWAP2 DUP3 PUSH2 0xFED SWAP3 SWAP2 SWAP1 PUSH2 0x3A06 JUMP JUMPDEST POP DUP8 DUP8 DUP3 PUSH1 0x6 ADD SWAP2 DUP3 PUSH2 0x1001 SWAP3 SWAP2 SWAP1 PUSH2 0x3A06 JUMP JUMPDEST POP DUP6 DUP2 PUSH1 0x7 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 TIMESTAMP PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x73A1CB60F50F2E728BC99E4885DF312CACDF69558D195A114A0E37D2836696A3 PUSH32 0x0 DUP9 PUSH1 0x40 MLOAD PUSH2 0x10F8 SWAP3 SWAP2 SWAP1 PUSH2 0x3B56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x114F SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x117B SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x119D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x11E1 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x120D SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x125A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x122F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x125A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x123D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP4 POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x756E6174686F72697A6564000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x140C PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0x144E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1445 SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x150E PUSH2 0x29B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4169 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1551 PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0x1593 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158A SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x15B4 DUP2 PUSH2 0x2481 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x15D9 JUMPI DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x15CF SWAP1 PUSH2 0x37D8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x15F4 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x15EE SWAP1 PUSH2 0x37D8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x7 PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 PUSH1 0x7 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E0C985508BF44E88E036A89B60FB24D98F87250028CB1B4F9991AB734E695 PUSH32 0x0 DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x2 ADD SLOAD DUP7 PUSH1 0x3 ADD SLOAD DUP11 PUSH1 0x40 MLOAD PUSH2 0x17F9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x185C JUMPI PUSH2 0x185B PUSH2 0x382B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1895 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1882 PUSH2 0x2911 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x187A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1B83 JUMPI PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x1906 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1932 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x197F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1954 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x197F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1962 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x1998 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19C4 SWAP1 PUSH2 0x3715 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A11 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A11 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B65 JUMPI PUSH2 0x1B64 PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x1B7B SWAP1 PUSH2 0x37D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x189B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1B90 DUP3 PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x1B99 DUP2 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x1BA3 DUP4 DUP4 PUSH2 0x23A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE GT PUSH2 0x1C35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2C SWAP1 PUSH2 0x3CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C5F PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x1E53 JUMPI PUSH1 0x0 CALLVALUE PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1CB0 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 LT PUSH2 0x1DCC JUMPI CALLVALUE PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D6C SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D9D PUSH32 0x0 CALLER PUSH2 0x2615 JUMP JUMPDEST PUSH2 0x1DC7 PUSH32 0x0 CALLER PUSH2 0x2615 JUMP JUMPDEST PUSH2 0x1E4D JUMP JUMPDEST CALLVALUE PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E1B SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E4C PUSH32 0x0 CALLER PUSH2 0x2615 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F00 JUMP JUMPDEST CALLVALUE PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EA2 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EF8 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST CALLVALUE PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F12 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x73A1CB60F50F2E728BC99E4885DF312CACDF69558D195A114A0E37D2836696A3 PUSH32 0x0 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1F98 SWAP3 SWAP2 SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E617574686F72697A65640000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2053 PUSH32 0x0 CALLER PUSH2 0x1495 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0x2095 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208C SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x211F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x210B JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x21D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D0 SWAP1 PUSH2 0x3DD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x220A SWAP1 PUSH2 0x3E2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2247 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x224C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2287 SWAP1 PUSH2 0x3E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x22B5 DUP2 PUSH2 0x22B0 PUSH2 0x2398 JUMP JUMPDEST PUSH2 0x2623 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x22C2 DUP3 DUP3 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x2394 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2339 PUSH2 0x2398 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x23AA DUP3 DUP3 PUSH2 0x1495 JUMP JUMPDEST ISZERO PUSH2 0x247D JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2422 PUSH2 0x2398 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x24A2 JUMPI POP TIMESTAMP DUP2 PUSH1 0x4 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x24FF JUMPI PUSH1 0x1 DUP2 PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24F6 SWAP1 PUSH2 0x3EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x258A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2576 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2610 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x25B0 JUMPI PUSH2 0x25AF PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x25FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F4 SWAP1 PUSH2 0x3F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x2608 SWAP1 PUSH2 0x37D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2594 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x261F DUP3 DUP3 PUSH2 0x22B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x262D DUP3 DUP3 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x26A4 JUMPI PUSH2 0x263A DUP2 PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x2648 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2659 SWAP3 SWAP2 SWAP1 PUSH2 0x4057 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269B SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x26CE DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x26D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x26E8 SWAP2 SWAP1 PUSH2 0x4091 JUMP JUMPDEST PUSH2 0x26F2 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x270B JUMPI PUSH2 0x270A PUSH2 0x382B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x273D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2775 JUMPI PUSH2 0x2774 PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x27D9 JUMPI PUSH2 0x27D8 PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x2819 SWAP2 SWAP1 PUSH2 0x4091 JUMP JUMPDEST PUSH2 0x2823 SWAP2 SWAP1 PUSH2 0x3AD6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x28C3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x2865 JUMPI PUSH2 0x2864 PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x287C JUMPI PUSH2 0x287B PUSH2 0x3C44 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x28BC SWAP1 PUSH2 0x40D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2826 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x2907 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28FE SWAP1 PUSH2 0x4148 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A30 DUP2 PUSH2 0x29FB JUMP JUMPDEST DUP2 EQ PUSH2 0x2A3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A4D DUP2 PUSH2 0x2A27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A69 JUMPI PUSH2 0x2A68 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A77 DUP5 DUP3 DUP6 ADD PUSH2 0x2A3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A95 DUP2 PUSH2 0x2A80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC9 DUP2 PUSH2 0x2AB6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AE6 DUP2 PUSH2 0x2AC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B02 JUMPI PUSH2 0x2B01 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B10 DUP5 DUP3 DUP6 ADD PUSH2 0x2AD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B22 DUP2 PUSH2 0x2AB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B3D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B9A DUP3 PUSH2 0x2B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BAA DUP2 PUSH2 0x2B8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2BB9 DUP2 PUSH2 0x2AB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2BC8 DUP2 PUSH2 0x2A80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2BE4 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2BF7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2C0A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1C DUP4 DUP4 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C40 DUP3 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0x2C4A DUP2 DUP6 PUSH2 0x2B4E JUMP JUMPDEST SWAP4 POP PUSH2 0x2C55 DUP4 PUSH2 0x2B5F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C86 JUMPI DUP2 MLOAD PUSH2 0x2C6D DUP9 DUP3 PUSH2 0x2C10 JUMP JUMPDEST SWAP8 POP PUSH2 0x2C78 DUP4 PUSH2 0x2C28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C59 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CAD DUP2 DUP5 PUSH2 0x2C35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CC8 DUP2 PUSH2 0x2CB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CE5 DUP2 PUSH2 0x2CBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D01 JUMPI PUSH2 0x2D00 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D0F DUP5 DUP3 DUP6 ADD PUSH2 0x2CD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D21 DUP2 PUSH2 0x2CB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D7C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA4 DUP3 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x2DAE DUP2 DUP6 PUSH2 0x2D4D JUMP JUMPDEST SWAP4 POP PUSH2 0x2DBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x2DC7 DUP2 PUSH2 0x2D88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDD DUP3 PUSH2 0x2B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DED DUP2 PUSH2 0x2DD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2E0C PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2E1F PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2E32 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2E45 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2E58 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x2E70 DUP3 DUP3 PUSH2 0x2D99 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x2E8A DUP3 DUP3 PUSH2 0x2D99 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x2E9F PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x2EB4 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x2EC9 PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0x2DE4 JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x2EDE PUSH2 0x140 DUP7 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH2 0x160 DUP4 ADD MLOAD PUSH2 0x2EF3 PUSH2 0x160 DUP7 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F18 DUP2 DUP5 PUSH2 0x2DF3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F29 DUP2 PUSH2 0x2B8F JUMP JUMPDEST DUP2 EQ PUSH2 0x2F34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F46 DUP2 PUSH2 0x2F20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F63 JUMPI PUSH2 0x2F62 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F71 DUP6 DUP3 DUP7 ADD PUSH2 0x2CD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F82 DUP6 DUP3 DUP7 ADD PUSH2 0x2F37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F95 DUP2 PUSH2 0x2B8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2FDB JUMPI PUSH2 0x2FDA PUSH2 0x2FB6 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FF8 JUMPI PUSH2 0x2FF7 PUSH2 0x2FBB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3014 JUMPI PUSH2 0x3013 PUSH2 0x2FC0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3038 JUMPI PUSH2 0x3037 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3056 JUMPI PUSH2 0x3055 PUSH2 0x29F6 JUMP JUMPDEST JUMPDEST PUSH2 0x3062 DUP10 DUP3 DUP11 ADD PUSH2 0x2FC5 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3085 JUMPI PUSH2 0x3084 PUSH2 0x29F6 JUMP JUMPDEST JUMPDEST PUSH2 0x3091 DUP10 DUP3 DUP11 ADD PUSH2 0x2FC5 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 PUSH2 0x30A4 DUP10 DUP3 DUP11 ADD PUSH2 0x2F37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x30B5 DUP10 DUP3 DUP11 ADD PUSH2 0x2AD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x30CB DUP2 PUSH2 0x2A80 JUMP JUMPDEST DUP2 EQ PUSH2 0x30D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30E8 DUP2 PUSH2 0x30C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3105 JUMPI PUSH2 0x3104 PUSH2 0x29F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3113 DUP6 DUP3 DUP7 ADD PUSH2 0x2AD7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3124 DUP6 DUP3 DUP7 ADD PUSH2 0x30D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3144 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3157 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x316A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3185 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x312E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x31D0 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x31E3 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x31F6 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x3209 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x321C PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2BB0 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x3234 DUP3 DUP3 PUSH2 0x2D99 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x324E DUP3 DUP3 PUSH2 0x2D99 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x3263 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x3278 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x2BBF JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x328D PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0x2DE4 JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x32A2 PUSH2 0x140 DUP7 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH2 0x160 DUP4 ADD MLOAD PUSH2 0x32B7 PUSH2 0x160 DUP7 ADD DUP3 PUSH2 0x2BA1 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32CE DUP4 DUP4 PUSH2 0x31B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32EE DUP3 PUSH2 0x318B JUMP JUMPDEST PUSH2 0x32F8 DUP2 DUP6 PUSH2 0x3196 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x330A DUP6 PUSH2 0x31A7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3346 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3327 DUP6 DUP3 PUSH2 0x32C2 JUMP JUMPDEST SWAP5 POP PUSH2 0x3332 DUP4 PUSH2 0x32D6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x330E JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3372 DUP2 DUP5 PUSH2 0x32E3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B2 DUP4 DUP4 PUSH2 0x2BB0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D6 DUP3 PUSH2 0x337A JUMP JUMPDEST PUSH2 0x33E0 DUP2 DUP6 PUSH2 0x3385 JUMP JUMPDEST SWAP4 POP PUSH2 0x33EB DUP4 PUSH2 0x3396 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x341C JUMPI DUP2 MLOAD PUSH2 0x3403 DUP9 DUP3 PUSH2 0x33A6 JUMP JUMPDEST SWAP8 POP PUSH2 0x340E DUP4 PUSH2 0x33BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33EF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3443 DUP2 DUP5 PUSH2 0x33CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3467 DUP3 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x3471 DUP2 DUP6 PUSH2 0x344B JUMP JUMPDEST SWAP4 POP PUSH2 0x3481 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x348A DUP2 PUSH2 0x2D88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34AF DUP2 DUP5 PUSH2 0x345C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742066756E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34ED PUSH1 0x11 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x34F8 DUP3 PUSH2 0x34B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x351C DUP2 PUSH2 0x34E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7061796D656E7420616C7265616479206D616465000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3559 PUSH1 0x14 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3564 DUP3 PUSH2 0x3523 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3588 DUP2 PUSH2 0x354C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420766F7465730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C5 PUSH1 0x12 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x35D0 DUP3 PUSH2 0x358F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35F4 DUP2 PUSH2 0x35B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3635 DUP3 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3640 DUP4 PUSH2 0x2AB6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3658 JUMPI PUSH2 0x3657 PUSH2 0x35FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5041594D454E54205355434345535346554C4C59204D41444521000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3694 PUSH1 0x1A DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x369F DUP3 PUSH2 0x365E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x36BF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D18 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x36D0 DUP2 PUSH2 0x3687 JUMP JUMPDEST SWAP1 POP PUSH2 0x36DF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x372D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3740 JUMPI PUSH2 0x373F PUSH2 0x36E6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A2 PUSH1 0x2F DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x37AD DUP3 PUSH2 0x3746 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37D1 DUP2 PUSH2 0x3795 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E3 DUP3 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3815 JUMPI PUSH2 0x3814 PUSH2 0x35FB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x38BC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x387F JUMP JUMPDEST PUSH2 0x38C6 DUP7 DUP4 PUSH2 0x387F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3903 PUSH2 0x38FE PUSH2 0x38F9 DUP5 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x38DE JUMP JUMPDEST PUSH2 0x2AB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x391D DUP4 PUSH2 0x38E8 JUMP JUMPDEST PUSH2 0x3931 PUSH2 0x3929 DUP3 PUSH2 0x390A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x388C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3946 PUSH2 0x3939 JUMP JUMPDEST PUSH2 0x3951 DUP2 DUP5 DUP5 PUSH2 0x3914 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3975 JUMPI PUSH2 0x396A PUSH1 0x0 DUP3 PUSH2 0x393E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3957 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x39BA JUMPI PUSH2 0x398B DUP2 PUSH2 0x385A JUMP JUMPDEST PUSH2 0x3994 DUP5 PUSH2 0x386F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x39A3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x39B7 PUSH2 0x39AF DUP6 PUSH2 0x386F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3956 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39DD PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x39BF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F6 DUP4 DUP4 PUSH2 0x39CC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A10 DUP4 DUP4 PUSH2 0x3820 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A29 JUMPI PUSH2 0x3A28 PUSH2 0x382B JUMP JUMPDEST JUMPDEST PUSH2 0x3A33 DUP3 SLOAD PUSH2 0x3715 JUMP JUMPDEST PUSH2 0x3A3E DUP3 DUP3 DUP6 PUSH2 0x3979 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3A6D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3A5B JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x3A65 DUP6 DUP3 PUSH2 0x39EA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3ACD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3A7B DUP7 PUSH2 0x385A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3AA3 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A7E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3AC0 JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x3ABC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x39CC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE1 DUP3 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AEC DUP4 PUSH2 0x2AB6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3B04 JUMPI PUSH2 0x3B03 PUSH2 0x35FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F706F73616C205261697365640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B40 PUSH1 0xF DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3B4B DUP3 PUSH2 0x3B0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B6B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D18 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3B7C DUP2 PUSH2 0x3B33 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B8B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50524F504F53414C20564F544500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BC8 PUSH1 0xD DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3BD3 DUP3 PUSH2 0x3B92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3BF3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2D18 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3C04 DUP2 PUSH2 0x3BBB JUMP JUMPDEST SWAP1 POP PUSH2 0x3C13 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x3C20 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x3C2D PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x3C3A PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2A8C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x696E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA9 PUSH1 0xE DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3CB4 DUP3 PUSH2 0x3C73 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CD8 DUP2 PUSH2 0x3C9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x434F4E545249425554494F4E205355434345535346554C4C5920524543454956 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4544210000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3B PUSH1 0x23 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3D46 DUP3 PUSH2 0x3CDF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3D66 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D18 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3D77 DUP2 PUSH2 0x3D2E JUMP JUMPDEST SWAP1 POP PUSH2 0x3D86 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC3 PUSH1 0x1F DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3DCE DUP3 PUSH2 0x3D8D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DF2 DUP2 PUSH2 0x3DB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E14 PUSH1 0x0 DUP4 PUSH2 0x3DF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E1F DUP3 PUSH2 0x3E04 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E35 DUP3 PUSH2 0x3E07 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7061796D656E74206661696C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E75 PUSH1 0xE DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3E80 DUP3 PUSH2 0x3E3F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EA4 DUP2 PUSH2 0x3E68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D652068617320616C726561647920706173736564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE1 PUSH1 0x17 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3EEC DUP3 PUSH2 0x3EAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F10 DUP2 PUSH2 0x3ED4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x646F75626C6520766F74696E67206973206E6F7420616C6C6F77656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F4D PUSH1 0x1C DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x3F58 DUP3 PUSH2 0x3F17 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F7C DUP2 PUSH2 0x3F40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC4 PUSH1 0x17 DUP4 PUSH2 0x3F83 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FCF DUP3 PUSH2 0x3F8E JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE5 DUP3 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x3FEF DUP2 DUP6 PUSH2 0x3F83 JUMP JUMPDEST SWAP4 POP PUSH2 0x3FFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D5E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4041 PUSH1 0x11 DUP4 PUSH2 0x3F83 JUMP JUMPDEST SWAP2 POP PUSH2 0x404C DUP3 PUSH2 0x400B JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4062 DUP3 PUSH2 0x3FB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x406E DUP3 DUP6 PUSH2 0x3FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x4079 DUP3 PUSH2 0x4034 JUMP JUMPDEST SWAP2 POP PUSH2 0x4085 DUP3 DUP5 PUSH2 0x3FDA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409C DUP3 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x40A7 DUP4 PUSH2 0x2AB6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x40B5 DUP2 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x40CC JUMPI PUSH2 0x40CB PUSH2 0x35FB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40DE DUP3 PUSH2 0x2AB6 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x40F1 JUMPI PUSH2 0x40F0 PUSH2 0x35FB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4132 PUSH1 0x20 DUP4 PUSH2 0x344B JUMP JUMPDEST SWAP2 POP PUSH2 0x413D DUP3 PUSH2 0x40FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4161 DUP2 PUSH2 0x4125 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID 0x4F PUSH15 0x6C79207374616B65686F6C64657273 KECCAK256 PUSH4 0x616E2070 PUSH6 0x72666F726D20 PUSH23 0x6F74696E674F6E6C79207374616B65686F6C6465727320 PUSH4 0x616E206D PUSH2 0x6B65 KECCAK256 PUSH17 0x61796D656E744F6E6C79207374616B6568 PUSH16 0x6C646572732061726520616C6C6F7765 PUSH5 0x20746F2063 PUSH19 0x656174652050726F706F73616C73A264697066 PUSH20 0x5822122088245946D27025F8FE5A238C09DB2F42 0x5F GAS DUP3 0xC PUSH28 0xB38F183BBA8E928610557C64736F6C63430008130033000000000000 ","sourceMap":"196:8817:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4875:1008:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8342:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7792:127;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:129:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7335:135:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4929:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8157:149:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6038:214:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8920:88:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2269:937;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8767:145;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3021::0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3235:1089:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7504:242;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5354:147:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8618:106:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6169:1126;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8471:110;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7958:157;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2732:202:0;2817:4;2855:32;2840:47;;;:11;:47;;;;:87;;;;2891:36;2915:11;2891:23;:36::i;:::-;2840:87;2833:94;;2732:202;;;:::o;4875:1008:9:-;5054:7;1340:132;;;;;;;;;;;;;;;;;1407:36;1415:16;1432:10;1407:7;:36::i;:::-;1444:7;1399:53;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1618:117:::1;;;;;;;;;;;;;;;;::::0;1696:8:::1;;;;;;;;;;;1682:22;;:10;:22;;;1705:7;1674:39;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2261:21:2::2;:19;:21::i;:::-;5073:37:9::3;5113:15;:27;5129:10;5113:27;;;;;;;;;;;5073:67;;5170:19;:26;;;5159:7;;:37;;5151:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;5260:4;5232:32;;:19;:24;;;;;;;;;;;;:32;;::::0;5229:67:::3;;5266:30;;;;;;;;;;:::i;:::-;;;;;;;;5229:67;5340:19;:29;;;5310:19;:26;;;:59;5307:92;;5371:28;;;;;;;;;;:::i;:::-;;;;;;;;5307:92;5412:63;5416:19;:26;;;5443:19;:31;;;;;;;;;;;;5412:3;:63::i;:::-;;5513:4;5486:19;:24;;;:31;;;;;;;;;;;;;;;;;;5559:10;5528:19;:28;;;:41;;;;;;;;;;;;;;;;;;5591:19;:26;;;5580:7;;:37;;;;;;;:::i;:::-;;;;;;;;5763:19;:31;;;;;;;;;;;;5635:211;;5664:10;5635:211;;;5689:16;5809:19;:26;;;5635:211;;;;;;;:::i;:::-;;;;;;;;5866:7;;5859:14;;;2303:20:2::2;:18;:20::i;:::-;1463:1:9::1;4875:1008:::0;;;;:::o;8342:92::-;8391:7;8417;;8410:14;;8342:92;:::o;7792:127::-;7859:14;7892:7;:19;7900:10;7892:19;;;;;;;;;;;7885:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7792:127;;;:::o;4504:129:0:-;4578:7;4604:6;:12;4611:4;4604:12;;;;;;;;;;;:22;;;4597:29;;4504:129;;;:::o;7335:135:9:-;7399:16;;:::i;:::-;7435:15;:27;7451:10;7435:27;;;;;;;;;;;7428:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7335:135;;;:::o;4929:145:0:-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;8157:149:9:-;8246:7;1340:132;;;;;;;;;;;;;;;;;1407:36;1415:16;1432:10;1407:7;:36::i;:::-;1444:7;1399:53;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8272:12:::1;:24;8285:10;8272:24;;;;;;;;;;;;;;;;8265:31;;8157:149:::0;;:::o;6038:214:0:-;6144:12;:10;:12::i;:::-;6133:23;;:7;:23;;;6125:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;8920:88:9:-;8964:7;8990:8;;;;;;;;;;;8983:15;;8920:88;:::o;2269:937::-;2511:16;;:::i;:::-;1340:132;;;;;;;;;;;;;;;;;1407:36;1415:16;1432:10;1407:7;:36::i;:::-;1444:7;1399:53;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2539:17:::1;2559:14;;:16;;;;;;;;;:::i;:::-;;;;;2539:36;;2586:37;2626:15;:26;2642:9;2626:26;;;;;;;;;;;2586:66;;2688:9;2663:19;:22;;:34;;;;2737:6;2708:19;:26;;:35;;;;2782:5;;2754:19;:25;;:33;;;;;;;:::i;:::-;;2832:11;;2798:19;:31;;:45;;;;;;;:::i;:::-;;2896:11;2854:19;:31;;;:54;;;;;;;;;;;;;;;;;;2968:15;2950;:33;;;;:::i;:::-;2919:19;:28;;:64;;;;3118:11;3001:160;;3030:10;3001:160;;;3055:16;3144:6;3001:160;;;;;;;:::i;:::-;;;;;;;;3179:19;3172:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;2269:937:::0;;;;;;;;;:::o;8767:145::-;8854:7;1478:132;;;;;;;;;;;;;;;;;1544:37;1552:17;1570:10;1544:7;:37::i;:::-;1582:7;1536:54;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8880:12:::1;:24;8893:10;8880:24;;;;;;;;;;;;;;;;8873:31;;8767:145:::0;;:::o;3021::0:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;2153:49::-;2198:4;2153:49;;;:::o;3235:1089:9:-;3371:12;;:::i;:::-;1340:132;;;;;;;;;;;;;;;;;1407:36;1415:16;1432:10;1407:7;:36::i;:::-;1444:7;1399:53;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3401:37:::1;3441:15;:27;3457:10;3441:27;;;;;;;;;;;3401:67;;3479:33;3492:19;3479:12;:33::i;:::-;3526:6;3523:86;;;3534:19;:26;;;:28;;;;;;;;;:::i;:::-;;;;;;3523:86;;;3578:19;:29;;;:31;;;;;;;;;:::i;:::-;;;;;;3523:86;3622:16;:28;3639:10;3622:28;;;;;;;;;;;;;;;3670:19;:22;;;3622:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3714:7;:31;3722:19;:22;;;3714:31;;;;;;;;;;;3765:108;;;;;;;;3789:10;3765:108;;;;;;3818:15;3765:108;;;;3852:6;3765:108;;;;::::0;3714:170:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4013:19;:31;;;;;;;;;;;;3902:300;;3927:10;3902:300;;;3952:16;4059:19;:26;;;4100:19;:26;;;4141:19;:29;;;4185:6;3902:300;;;;;;;;;;:::i;:::-;;;;;;;;4222:92;;;;;;;;4242:10;4222:92;;;;;;4267:15;4222:92;;;;4297:6;4222:92;;;;::::0;4215:99:::1;;;3235:1089:::0;;;;;:::o;7504:242::-;7553:24;7613:14;;7597:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7589:39;;7644:6;7639:98;7660:14;;7656:1;:18;7639:98;;;7707:15;:18;7723:1;7707:18;;;;;;;;;;;7696:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;7702:1;7696:8;;;;;;;;:::i;:::-;;;;;;;:29;;;;7676:3;;;;;:::i;:::-;;;;7639:98;;;;7504:242;:::o;5354:147:0:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;:::-;5354:147:::0;;;:::o;8618:106:9:-;8665:4;8715:1;8688:12;:24;8701:10;8688:24;;;;;;;;;;;;;;;;:28;8681:35;;8618:106;:::o;6169:1126::-;6216:7;6255;6243:9;:19;6235:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;6297:37;6305:16;6323:10;6297:7;:37::i;:::-;6292:733;;6351:26;6407:9;6380:12;:24;6393:10;6380:24;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;6351:65;;6459:28;6437:18;:50;6433:451;;6535:9;6508:12;:24;6521:10;6508:24;;;;;;;;;;;;;;;:36;;;;6591:9;6563:12;:24;6576:10;6563:24;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;6619:39;6630:16;6647:10;6619;:39::i;:::-;6677:41;6688:17;6707:10;6677;:41::i;:::-;6433:451;;;6800:9;6772:12;:24;6785:10;6772:24;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;6828:40;6839:17;6857:10;6828;:40::i;:::-;6433:451;6336:559;6292:733;;;6952:9;6924:12;:24;6937:10;6924:24;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;7004:9;6976:12;:24;6989:10;6976:24;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;6292:733;7048:9;7037:7;;:20;;;;;;;:::i;:::-;;;;;;;;7218:4;7073:185;;7102:10;7073:185;;;7127:16;7238:9;7073:185;;;;;;;:::i;:::-;;;;;;;;7280:7;;7273:14;;6169:1126;:::o;8471:110::-;8522:4;8572:1;8545:12;:24;8558:10;8545:24;;;;;;;;;;;;;;;;:28;8538:35;;8471:110;:::o;7958:157::-;8044:16;1340:132;;;;;;;;;;;;;;;;;1407:36;1415:16;1432:10;1407:7;:36::i;:::-;1444:7;1399:53;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8079:16:::1;:28;8096:10;8079:28;;;;;;;;;;;;;;;8072:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7958:157:::0;;:::o;829:155:5:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;5922:202:9:-;5979:4;5996:12;6021:2;6013:16;;6038:6;6013:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5995:54;;;6068:7;6060:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;6112:4;6105:11;;;5922:202;;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;3460:103:0:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;:12::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;655:96:3:-;708:7;734:10;727:17;;655:96;:::o;7991:234:0:-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:6;:12;8119:4;8112:12;;;;;;;;;;;:20;;:29;8133:7;8112:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8195:12;:10;:12::i;:::-;8168:40;;8186:7;8168:40;;8180:4;8168:40;;;;;;;;;;8070:149;7991:234;;:::o;4354:488:9:-;4427:8;:15;;;;;;;;;;;;:55;;;;4467:15;4446:8;:17;;;:36;;4427:55;4423:158;;;4517:4;4499:8;:15;;;:22;;;;;;;;;;;;;;;;;;4536:33;;;;;;;;;;:::i;:::-;;;;;;;;4423:158;4591:26;4620:16;:28;4637:10;4620:28;;;;;;;;;;;;;;;4591:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4664:12;4659:174;4689:9;:16;4682:4;:23;4659:174;;;4749:9;4759:4;4749:15;;;;;;;;:::i;:::-;;;;;;;;4734:8;:11;;;:30;4730:91;;4783:38;;;;;;;;;;:::i;:::-;;;;;;;;4730:91;4707:6;;;;;:::i;:::-;;;;4659:174;;;;4412:430;4354:488;:::o;6937:110:0:-;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;3844:479::-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4234:13;;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3970:336;;;;;;;;;;;:::i;:::-;;;;;;;;3927:390;3844:479;;:::o;2407:149:4:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:10:-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:137::-;2651:6;2685:5;2679:12;2669:22;;2561:137;;;:::o;2704:207::-;2826:11;2860:6;2855:3;2848:19;2900:4;2895:3;2891:14;2876:29;;2704:207;;;;:::o;2917:155::-;3007:4;3030:3;3022:11;;3060:4;3055:3;3051:14;3043:22;;2917:155;;;:::o;3078:126::-;3115:7;3155:42;3148:5;3144:54;3133:65;;3078:126;;;:::o;3210:96::-;3247:7;3276:24;3294:5;3276:24;:::i;:::-;3265:35;;3210:96;;;:::o;3312:108::-;3389:24;3407:5;3389:24;:::i;:::-;3384:3;3377:37;3312:108;;:::o;3426:::-;3503:24;3521:5;3503:24;:::i;:::-;3498:3;3491:37;3426:108;;:::o;3540:99::-;3611:21;3626:5;3611:21;:::i;:::-;3606:3;3599:34;3540:99;;:::o;3699:669::-;3832:4;3827:3;3823:14;3920:4;3913:5;3909:16;3903:23;3939:63;3996:4;3991:3;3987:14;3973:12;3939:63;:::i;:::-;3847:165;4099:4;4092:5;4088:16;4082:23;4118:63;4175:4;4170:3;4166:14;4152:12;4118:63;:::i;:::-;4022:169;4275:4;4268:5;4264:16;4258:23;4294:57;4345:4;4340:3;4336:14;4322:12;4294:57;:::i;:::-;4201:160;3801:567;3699:669;;:::o;4374:271::-;4489:10;4510:92;4598:3;4590:6;4510:92;:::i;:::-;4634:4;4629:3;4625:14;4611:28;;4374:271;;;;:::o;4651:136::-;4744:4;4776;4771:3;4767:14;4759:22;;4651:136;;;:::o;4851:916::-;5016:3;5045:77;5116:5;5045:77;:::i;:::-;5138:109;5240:6;5235:3;5138:109;:::i;:::-;5131:116;;5271:79;5344:5;5271:79;:::i;:::-;5373:7;5404:1;5389:353;5414:6;5411:1;5408:13;5389:353;;;5490:6;5484:13;5517:109;5622:3;5607:13;5517:109;:::i;:::-;5510:116;;5649:83;5725:6;5649:83;:::i;:::-;5639:93;;5449:293;5436:1;5433;5429:9;5424:14;;5389:353;;;5393:14;5758:3;5751:10;;5021:746;;;4851:916;;;;:::o;5773:465::-;5962:4;6000:2;5989:9;5985:18;5977:26;;6049:9;6043:4;6039:20;6035:1;6024:9;6020:17;6013:47;6077:154;6226:4;6217:6;6077:154;:::i;:::-;6069:162;;5773:465;;;;:::o;6244:77::-;6281:7;6310:5;6299:16;;6244:77;;;:::o;6327:122::-;6400:24;6418:5;6400:24;:::i;:::-;6393:5;6390:35;6380:63;;6439:1;6436;6429:12;6380:63;6327:122;:::o;6455:139::-;6501:5;6539:6;6526:20;6517:29;;6555:33;6582:5;6555:33;:::i;:::-;6455:139;;;;:::o;6600:329::-;6659:6;6708:2;6696:9;6687:7;6683:23;6679:32;6676:119;;;6714:79;;:::i;:::-;6676:119;6834:1;6859:53;6904:7;6895:6;6884:9;6880:22;6859:53;:::i;:::-;6849:63;;6805:117;6600:329;;;;:::o;6935:118::-;7022:24;7040:5;7022:24;:::i;:::-;7017:3;7010:37;6935:118;;:::o;7059:222::-;7152:4;7190:2;7179:9;7175:18;7167:26;;7203:71;7271:1;7260:9;7256:17;7247:6;7203:71;:::i;:::-;7059:222;;;;:::o;7287:99::-;7339:6;7373:5;7367:12;7357:22;;7287:99;;;:::o;7392:159::-;7466:11;7500:6;7495:3;7488:19;7540:4;7535:3;7531:14;7516:29;;7392:159;;;;:::o;7557:246::-;7638:1;7648:113;7662:6;7659:1;7656:13;7648:113;;;7747:1;7742:3;7738:11;7732:18;7728:1;7723:3;7719:11;7712:39;7684:2;7681:1;7677:10;7672:15;;7648:113;;;7795:1;7786:6;7781:3;7777:16;7770:27;7619:184;7557:246;;;:::o;7809:102::-;7850:6;7901:2;7897:7;7892:2;7885:5;7881:14;7877:28;7867:38;;7809:102;;;:::o;7917:357::-;7995:3;8023:39;8056:5;8023:39;:::i;:::-;8078:61;8132:6;8127:3;8078:61;:::i;:::-;8071:68;;8148:65;8206:6;8201:3;8194:4;8187:5;8183:16;8148:65;:::i;:::-;8238:29;8260:6;8238:29;:::i;:::-;8233:3;8229:39;8222:46;;7999:275;7917:357;;;;:::o;8280:104::-;8325:7;8354:24;8372:5;8354:24;:::i;:::-;8343:35;;8280:104;;;:::o;8390:132::-;8483:32;8509:5;8483:32;:::i;:::-;8478:3;8471:45;8390:132;;:::o;8590:2479::-;8713:3;8749:6;8744:3;8740:16;8836:4;8829:5;8825:16;8819:23;8855:63;8912:4;8907:3;8903:14;8889:12;8855:63;:::i;:::-;8766:162;9012:4;9005:5;9001:16;8995:23;9031:63;9088:4;9083:3;9079:14;9065:12;9031:63;:::i;:::-;8938:166;9188:4;9181:5;9177:16;9171:23;9207:63;9264:4;9259:3;9255:14;9241:12;9207:63;:::i;:::-;9114:166;9367:4;9360:5;9356:16;9350:23;9386:63;9443:4;9438:3;9434:14;9420:12;9386:63;:::i;:::-;9290:169;9545:4;9538:5;9534:16;9528:23;9564:63;9621:4;9616:3;9612:14;9598:12;9564:63;:::i;:::-;9469:168;9720:4;9713:5;9709:16;9703:23;9773:3;9767:4;9763:14;9756:4;9751:3;9747:14;9740:38;9799:73;9867:4;9853:12;9799:73;:::i;:::-;9791:81;;9647:236;9972:4;9965:5;9961:16;9955:23;10025:3;10019:4;10015:14;10008:4;10003:3;9999:14;9992:38;10051:73;10119:4;10105:12;10051:73;:::i;:::-;10043:81;;9893:242;10217:4;10210:5;10206:16;10200:23;10236:57;10287:4;10282:3;10278:14;10264:12;10236:57;:::i;:::-;10145:158;10387:6;10380:5;10376:18;10370:25;10408:59;10459:6;10454:3;10450:16;10436:12;10408:59;:::i;:::-;10313:164;10566:6;10559:5;10555:18;10549:25;10587:81;10660:6;10655:3;10651:16;10637:12;10587:81;:::i;:::-;10487:191;10764:6;10757:5;10753:18;10747:25;10785:65;10842:6;10837:3;10833:16;10819:12;10785:65;:::i;:::-;10688:172;10946:6;10939:5;10935:18;10929:25;10967:65;11024:6;11019:3;11015:16;11001:12;10967:65;:::i;:::-;10870:172;11059:4;11052:11;;8718:2351;8590:2479;;;;:::o;11075:381::-;11222:4;11260:2;11249:9;11245:18;11237:26;;11309:9;11303:4;11299:20;11295:1;11284:9;11280:17;11273:47;11337:112;11444:4;11435:6;11337:112;:::i;:::-;11329:120;;11075:381;;;;:::o;11462:122::-;11535:24;11553:5;11535:24;:::i;:::-;11528:5;11525:35;11515:63;;11574:1;11571;11564:12;11515:63;11462:122;:::o;11590:139::-;11636:5;11674:6;11661:20;11652:29;;11690:33;11717:5;11690:33;:::i;:::-;11590:139;;;;:::o;11735:474::-;11803:6;11811;11860:2;11848:9;11839:7;11835:23;11831:32;11828:119;;;11866:79;;:::i;:::-;11828:119;11986:1;12011:53;12056:7;12047:6;12036:9;12032:22;12011:53;:::i;:::-;12001:63;;11957:117;12113:2;12139:53;12184:7;12175:6;12164:9;12160:22;12139:53;:::i;:::-;12129:63;;12084:118;11735:474;;;;;:::o;12215:118::-;12302:24;12320:5;12302:24;:::i;:::-;12297:3;12290:37;12215:118;;:::o;12339:222::-;12432:4;12470:2;12459:9;12455:18;12447:26;;12483:71;12551:1;12540:9;12536:17;12527:6;12483:71;:::i;:::-;12339:222;;;;:::o;12567:117::-;12676:1;12673;12666:12;12690:117;12799:1;12796;12789:12;12813:117;12922:1;12919;12912:12;12950:553;13008:8;13018:6;13068:3;13061:4;13053:6;13049:17;13045:27;13035:122;;13076:79;;:::i;:::-;13035:122;13189:6;13176:20;13166:30;;13219:18;13211:6;13208:30;13205:117;;;13241:79;;:::i;:::-;13205:117;13355:4;13347:6;13343:17;13331:29;;13409:3;13401:4;13393:6;13389:17;13379:8;13375:32;13372:41;13369:128;;;13416:79;;:::i;:::-;13369:128;12950:553;;;;;:::o;13509:1165::-;13619:6;13627;13635;13643;13651;13659;13708:3;13696:9;13687:7;13683:23;13679:33;13676:120;;;13715:79;;:::i;:::-;13676:120;13863:1;13852:9;13848:17;13835:31;13893:18;13885:6;13882:30;13879:117;;;13915:79;;:::i;:::-;13879:117;14028:65;14085:7;14076:6;14065:9;14061:22;14028:65;:::i;:::-;14010:83;;;;13806:297;14170:2;14159:9;14155:18;14142:32;14201:18;14193:6;14190:30;14187:117;;;14223:79;;:::i;:::-;14187:117;14336:65;14393:7;14384:6;14373:9;14369:22;14336:65;:::i;:::-;14318:83;;;;14113:298;14450:2;14476:53;14521:7;14512:6;14501:9;14497:22;14476:53;:::i;:::-;14466:63;;14421:118;14578:2;14604:53;14649:7;14640:6;14629:9;14625:22;14604:53;:::i;:::-;14594:63;;14549:118;13509:1165;;;;;;;;:::o;14680:116::-;14750:21;14765:5;14750:21;:::i;:::-;14743:5;14740:32;14730:60;;14786:1;14783;14776:12;14730:60;14680:116;:::o;14802:133::-;14845:5;14883:6;14870:20;14861:29;;14899:30;14923:5;14899:30;:::i;:::-;14802:133;;;;:::o;14941:468::-;15006:6;15014;15063:2;15051:9;15042:7;15038:23;15034:32;15031:119;;;15069:79;;:::i;:::-;15031:119;15189:1;15214:53;15259:7;15250:6;15239:9;15235:22;15214:53;:::i;:::-;15204:63;;15160:117;15316:2;15342:50;15384:7;15375:6;15364:9;15360:22;15342:50;:::i;:::-;15332:60;;15287:115;14941:468;;;;;:::o;15469:679::-;15612:4;15607:3;15603:14;15700:4;15693:5;15689:16;15683:23;15719:63;15776:4;15771:3;15767:14;15753:12;15719:63;:::i;:::-;15627:165;15879:4;15872:5;15868:16;15862:23;15898:63;15955:4;15950:3;15946:14;15932:12;15898:63;:::i;:::-;15802:169;16055:4;16048:5;16044:16;16038:23;16074:57;16125:4;16120:3;16116:14;16102:12;16074:57;:::i;:::-;15981:160;15581:567;15469:679;;:::o;16154:314::-;16293:4;16331:2;16320:9;16316:18;16308:26;;16344:117;16458:1;16447:9;16443:17;16434:6;16344:117;:::i;:::-;16154:314;;;;:::o;16474:141::-;16568:6;16602:5;16596:12;16586:22;;16474:141;;;:::o;16621:211::-;16747:11;16781:6;16776:3;16769:19;16821:4;16816:3;16812:14;16797:29;;16621:211;;;;:::o;16838:159::-;16932:4;16955:3;16947:11;;16985:4;16980:3;16976:14;16968:22;;16838:159;;;:::o;17065:2469::-;17178:3;17214:6;17209:3;17205:16;17301:4;17294:5;17290:16;17284:23;17320:63;17377:4;17372:3;17368:14;17354:12;17320:63;:::i;:::-;17231:162;17477:4;17470:5;17466:16;17460:23;17496:63;17553:4;17548:3;17544:14;17530:12;17496:63;:::i;:::-;17403:166;17653:4;17646:5;17642:16;17636:23;17672:63;17729:4;17724:3;17720:14;17706:12;17672:63;:::i;:::-;17579:166;17832:4;17825:5;17821:16;17815:23;17851:63;17908:4;17903:3;17899:14;17885:12;17851:63;:::i;:::-;17755:169;18010:4;18003:5;17999:16;17993:23;18029:63;18086:4;18081:3;18077:14;18063:12;18029:63;:::i;:::-;17934:168;18185:4;18178:5;18174:16;18168:23;18238:3;18232:4;18228:14;18221:4;18216:3;18212:14;18205:38;18264:73;18332:4;18318:12;18264:73;:::i;:::-;18256:81;;18112:236;18437:4;18430:5;18426:16;18420:23;18490:3;18484:4;18480:14;18473:4;18468:3;18464:14;18457:38;18516:73;18584:4;18570:12;18516:73;:::i;:::-;18508:81;;18358:242;18682:4;18675:5;18671:16;18665:23;18701:57;18752:4;18747:3;18743:14;18729:12;18701:57;:::i;:::-;18610:158;18852:6;18845:5;18841:18;18835:25;18873:59;18924:6;18919:3;18915:16;18901:12;18873:59;:::i;:::-;18778:164;19031:6;19024:5;19020:18;19014:25;19052:81;19125:6;19120:3;19116:16;19102:12;19052:81;:::i;:::-;18952:191;19229:6;19222:5;19218:18;19212:25;19250:65;19307:6;19302:3;19298:16;19284:12;19250:65;:::i;:::-;19153:172;19411:6;19404:5;19400:18;19394:25;19432:65;19489:6;19484:3;19480:16;19466:12;19432:65;:::i;:::-;19335:172;19524:4;19517:11;;17183:2351;17065:2469;;;;:::o;19540:264::-;19663:10;19698:100;19794:3;19786:6;19698:100;:::i;:::-;19684:114;;19540:264;;;;:::o;19810:140::-;19907:4;19939;19934:3;19930:14;19922:22;;19810:140;;;:::o;20022:1127::-;20195:3;20224:81;20299:5;20224:81;:::i;:::-;20321:113;20427:6;20422:3;20321:113;:::i;:::-;20314:120;;20460:3;20505:4;20497:6;20493:17;20488:3;20484:27;20535:83;20612:5;20535:83;:::i;:::-;20641:7;20672:1;20657:447;20682:6;20679:1;20676:13;20657:447;;;20753:9;20747:4;20743:20;20738:3;20731:33;20804:6;20798:13;20832:118;20945:4;20930:13;20832:118;:::i;:::-;20824:126;;20973:87;21053:6;20973:87;:::i;:::-;20963:97;;21089:4;21084:3;21080:14;21073:21;;20717:387;20704:1;20701;20697:9;20692:14;;20657:447;;;20661:14;21120:4;21113:11;;21140:3;21133:10;;20200:949;;;;;20022:1127;;;;:::o;21155:481::-;21352:4;21390:2;21379:9;21375:18;21367:26;;21439:9;21433:4;21429:20;21425:1;21414:9;21410:17;21403:47;21467:162;21624:4;21615:6;21467:162;:::i;:::-;21459:170;;21155:481;;;;:::o;21642:114::-;21709:6;21743:5;21737:12;21727:22;;21642:114;;;:::o;21762:184::-;21861:11;21895:6;21890:3;21883:19;21935:4;21930:3;21926:14;21911:29;;21762:184;;;;:::o;21952:132::-;22019:4;22042:3;22034:11;;22072:4;22067:3;22063:14;22055:22;;21952:132;;;:::o;22090:179::-;22159:10;22180:46;22222:3;22214:6;22180:46;:::i;:::-;22258:4;22253:3;22249:14;22235:28;;22090:179;;;;:::o;22275:113::-;22345:4;22377;22372:3;22368:14;22360:22;;22275:113;;;:::o;22424:732::-;22543:3;22572:54;22620:5;22572:54;:::i;:::-;22642:86;22721:6;22716:3;22642:86;:::i;:::-;22635:93;;22752:56;22802:5;22752:56;:::i;:::-;22831:7;22862:1;22847:284;22872:6;22869:1;22866:13;22847:284;;;22948:6;22942:13;22975:63;23034:3;23019:13;22975:63;:::i;:::-;22968:70;;23061:60;23114:6;23061:60;:::i;:::-;23051:70;;22907:224;22894:1;22891;22887:9;22882:14;;22847:284;;;22851:14;23147:3;23140:10;;22548:608;;;22424:732;;;;:::o;23162:373::-;23305:4;23343:2;23332:9;23328:18;23320:26;;23392:9;23386:4;23382:20;23378:1;23367:9;23363:17;23356:47;23420:108;23523:4;23514:6;23420:108;:::i;:::-;23412:116;;23162:373;;;;:::o;23541:169::-;23625:11;23659:6;23654:3;23647:19;23699:4;23694:3;23690:14;23675:29;;23541:169;;;;:::o;23716:377::-;23804:3;23832:39;23865:5;23832:39;:::i;:::-;23887:71;23951:6;23946:3;23887:71;:::i;:::-;23880:78;;23967:65;24025:6;24020:3;24013:4;24006:5;24002:16;23967:65;:::i;:::-;24057:29;24079:6;24057:29;:::i;:::-;24052:3;24048:39;24041:46;;23808:285;23716:377;;;;:::o;24099:313::-;24212:4;24250:2;24239:9;24235:18;24227:26;;24299:9;24293:4;24289:20;24285:1;24274:9;24270:17;24263:47;24327:78;24400:4;24391:6;24327:78;:::i;:::-;24319:86;;24099:313;;;;:::o;24418:167::-;24558:19;24554:1;24546:6;24542:14;24535:43;24418:167;:::o;24591:366::-;24733:3;24754:67;24818:2;24813:3;24754:67;:::i;:::-;24747:74;;24830:93;24919:3;24830:93;:::i;:::-;24948:2;24943:3;24939:12;24932:19;;24591:366;;;:::o;24963:419::-;25129:4;25167:2;25156:9;25152:18;25144:26;;25216:9;25210:4;25206:20;25202:1;25191:9;25187:17;25180:47;25244:131;25370:4;25244:131;:::i;:::-;25236:139;;24963:419;;;:::o;25388:170::-;25528:22;25524:1;25516:6;25512:14;25505:46;25388:170;:::o;25564:366::-;25706:3;25727:67;25791:2;25786:3;25727:67;:::i;:::-;25720:74;;25803:93;25892:3;25803:93;:::i;:::-;25921:2;25916:3;25912:12;25905:19;;25564:366;;;:::o;25936:419::-;26102:4;26140:2;26129:9;26125:18;26117:26;;26189:9;26183:4;26179:20;26175:1;26164:9;26160:17;26153:47;26217:131;26343:4;26217:131;:::i;:::-;26209:139;;25936:419;;;:::o;26361:168::-;26501:20;26497:1;26489:6;26485:14;26478:44;26361:168;:::o;26535:366::-;26677:3;26698:67;26762:2;26757:3;26698:67;:::i;:::-;26691:74;;26774:93;26863:3;26774:93;:::i;:::-;26892:2;26887:3;26883:12;26876:19;;26535:366;;;:::o;26907:419::-;27073:4;27111:2;27100:9;27096:18;27088:26;;27160:9;27154:4;27150:20;27146:1;27135:9;27131:17;27124:47;27188:131;27314:4;27188:131;:::i;:::-;27180:139;;26907:419;;;:::o;27332:180::-;27380:77;27377:1;27370:88;27477:4;27474:1;27467:15;27501:4;27498:1;27491:15;27518:194;27558:4;27578:20;27596:1;27578:20;:::i;:::-;27573:25;;27612:20;27630:1;27612:20;:::i;:::-;27607:25;;27656:1;27653;27649:9;27641:17;;27680:1;27674:4;27671:11;27668:37;;;27685:18;;:::i;:::-;27668:37;27518:194;;;;:::o;27718:176::-;27858:28;27854:1;27846:6;27842:14;27835:52;27718:176;:::o;27900:366::-;28042:3;28063:67;28127:2;28122:3;28063:67;:::i;:::-;28056:74;;28139:93;28228:3;28139:93;:::i;:::-;28257:2;28252:3;28248:12;28241:19;;27900:366;;;:::o;28272:639::-;28494:4;28532:2;28521:9;28517:18;28509:26;;28545:71;28613:1;28602:9;28598:17;28589:6;28545:71;:::i;:::-;28663:9;28657:4;28653:20;28648:2;28637:9;28633:18;28626:48;28691:131;28817:4;28691:131;:::i;:::-;28683:139;;28832:72;28900:2;28889:9;28885:18;28876:6;28832:72;:::i;:::-;28272:639;;;;;:::o;28917:180::-;28965:77;28962:1;28955:88;29062:4;29059:1;29052:15;29086:4;29083:1;29076:15;29103:320;29147:6;29184:1;29178:4;29174:12;29164:22;;29231:1;29225:4;29221:12;29252:18;29242:81;;29308:4;29300:6;29296:17;29286:27;;29242:81;29370:2;29362:6;29359:14;29339:18;29336:38;29333:84;;29389:18;;:::i;:::-;29333:84;29154:269;29103:320;;;:::o;29429:234::-;29569:34;29565:1;29557:6;29553:14;29546:58;29638:17;29633:2;29625:6;29621:15;29614:42;29429:234;:::o;29669:366::-;29811:3;29832:67;29896:2;29891:3;29832:67;:::i;:::-;29825:74;;29908:93;29997:3;29908:93;:::i;:::-;30026:2;30021:3;30017:12;30010:19;;29669:366;;;:::o;30041:419::-;30207:4;30245:2;30234:9;30230:18;30222:26;;30294:9;30288:4;30284:20;30280:1;30269:9;30265:17;30258:47;30322:131;30448:4;30322:131;:::i;:::-;30314:139;;30041:419;;;:::o;30466:233::-;30505:3;30528:24;30546:5;30528:24;:::i;:::-;30519:33;;30574:66;30567:5;30564:77;30561:103;;30644:18;;:::i;:::-;30561:103;30691:1;30684:5;30680:13;30673:20;;30466:233;;;:::o;30705:97::-;30764:6;30792:3;30782:13;;30705:97;;;;:::o;30808:180::-;30856:77;30853:1;30846:88;30953:4;30950:1;30943:15;30977:4;30974:1;30967:15;30994:141;31043:4;31066:3;31058:11;;31089:3;31086:1;31079:14;31123:4;31120:1;31110:18;31102:26;;30994:141;;;:::o;31141:93::-;31178:6;31225:2;31220;31213:5;31209:14;31205:23;31195:33;;31141:93;;;:::o;31240:107::-;31284:8;31334:5;31328:4;31324:16;31303:37;;31240:107;;;;:::o;31353:393::-;31422:6;31472:1;31460:10;31456:18;31495:97;31525:66;31514:9;31495:97;:::i;:::-;31613:39;31643:8;31632:9;31613:39;:::i;:::-;31601:51;;31685:4;31681:9;31674:5;31670:21;31661:30;;31734:4;31724:8;31720:19;31713:5;31710:30;31700:40;;31429:317;;31353:393;;;;;:::o;31752:60::-;31780:3;31801:5;31794:12;;31752:60;;;:::o;31818:142::-;31868:9;31901:53;31919:34;31928:24;31946:5;31928:24;:::i;:::-;31919:34;:::i;:::-;31901:53;:::i;:::-;31888:66;;31818:142;;;:::o;31966:75::-;32009:3;32030:5;32023:12;;31966:75;;;:::o;32047:269::-;32157:39;32188:7;32157:39;:::i;:::-;32218:91;32267:41;32291:16;32267:41;:::i;:::-;32259:6;32252:4;32246:11;32218:91;:::i;:::-;32212:4;32205:105;32123:193;32047:269;;;:::o;32322:73::-;32367:3;32322:73;:::o;32401:189::-;32478:32;;:::i;:::-;32519:65;32577:6;32569;32563:4;32519:65;:::i;:::-;32454:136;32401:189;;:::o;32596:186::-;32656:120;32673:3;32666:5;32663:14;32656:120;;;32727:39;32764:1;32757:5;32727:39;:::i;:::-;32700:1;32693:5;32689:13;32680:22;;32656:120;;;32596:186;;:::o;32788:543::-;32889:2;32884:3;32881:11;32878:446;;;32923:38;32955:5;32923:38;:::i;:::-;33007:29;33025:10;33007:29;:::i;:::-;32997:8;32993:44;33190:2;33178:10;33175:18;33172:49;;;33211:8;33196:23;;33172:49;33234:80;33290:22;33308:3;33290:22;:::i;:::-;33280:8;33276:37;33263:11;33234:80;:::i;:::-;32893:431;;32878:446;32788:543;;;:::o;33337:117::-;33391:8;33441:5;33435:4;33431:16;33410:37;;33337:117;;;;:::o;33460:169::-;33504:6;33537:51;33585:1;33581:6;33573:5;33570:1;33566:13;33537:51;:::i;:::-;33533:56;33618:4;33612;33608:15;33598:25;;33511:118;33460:169;;;;:::o;33634:295::-;33710:4;33856:29;33881:3;33875:4;33856:29;:::i;:::-;33848:37;;33918:3;33915:1;33911:11;33905:4;33902:21;33894:29;;33634:295;;;;:::o;33934:1403::-;34058:44;34098:3;34093;34058:44;:::i;:::-;34167:18;34159:6;34156:30;34153:56;;;34189:18;;:::i;:::-;34153:56;34233:38;34265:4;34259:11;34233:38;:::i;:::-;34318:67;34378:6;34370;34364:4;34318:67;:::i;:::-;34412:1;34441:2;34433:6;34430:14;34458:1;34453:632;;;;35129:1;35146:6;35143:84;;;35202:9;35197:3;35193:19;35180:33;35171:42;;35143:84;35253:67;35313:6;35306:5;35253:67;:::i;:::-;35247:4;35240:81;35102:229;34423:908;;34453:632;34505:4;34501:9;34493:6;34489:22;34539:37;34571:4;34539:37;:::i;:::-;34598:1;34612:215;34626:7;34623:1;34620:14;34612:215;;;34712:9;34707:3;34703:19;34690:33;34682:6;34675:49;34763:1;34755:6;34751:14;34741:24;;34810:2;34799:9;34795:18;34782:31;;34649:4;34646:1;34642:12;34637:17;;34612:215;;;34855:6;34846:7;34843:19;34840:186;;;34920:9;34915:3;34911:19;34898:33;34963:48;35005:4;34997:6;34993:17;34982:9;34963:48;:::i;:::-;34955:6;34948:64;34863:163;34840:186;35072:1;35068;35060:6;35056:14;35052:22;35046:4;35039:36;34460:625;;;34423:908;;34033:1304;;;33934:1403;;;:::o;35343:191::-;35383:3;35402:20;35420:1;35402:20;:::i;:::-;35397:25;;35436:20;35454:1;35436:20;:::i;:::-;35431:25;;35479:1;35476;35472:9;35465:16;;35500:3;35497:1;35494:10;35491:36;;;35507:18;;:::i;:::-;35491:36;35343:191;;;;:::o;35540:165::-;35680:17;35676:1;35668:6;35664:14;35657:41;35540:165;:::o;35711:366::-;35853:3;35874:67;35938:2;35933:3;35874:67;:::i;:::-;35867:74;;35950:93;36039:3;35950:93;:::i;:::-;36068:2;36063:3;36059:12;36052:19;;35711:366;;;:::o;36083:639::-;36305:4;36343:2;36332:9;36328:18;36320:26;;36356:71;36424:1;36413:9;36409:17;36400:6;36356:71;:::i;:::-;36474:9;36468:4;36464:20;36459:2;36448:9;36444:18;36437:48;36502:131;36628:4;36502:131;:::i;:::-;36494:139;;36643:72;36711:2;36700:9;36696:18;36687:6;36643:72;:::i;:::-;36083:639;;;;;:::o;36728:163::-;36868:15;36864:1;36856:6;36852:14;36845:39;36728:163;:::o;36897:366::-;37039:3;37060:67;37124:2;37119:3;37060:67;:::i;:::-;37053:74;;37136:93;37225:3;37136:93;:::i;:::-;37254:2;37249:3;37245:12;37238:19;;36897:366;;;:::o;37269:960::-;37569:4;37607:3;37596:9;37592:19;37584:27;;37621:71;37689:1;37678:9;37674:17;37665:6;37621:71;:::i;:::-;37739:9;37733:4;37729:20;37724:2;37713:9;37709:18;37702:48;37767:131;37893:4;37767:131;:::i;:::-;37759:139;;37908:72;37976:2;37965:9;37961:18;37952:6;37908:72;:::i;:::-;37990;38058:2;38047:9;38043:18;38034:6;37990:72;:::i;:::-;38072:73;38140:3;38129:9;38125:19;38116:6;38072:73;:::i;:::-;38155:67;38217:3;38206:9;38202:19;38193:6;38155:67;:::i;:::-;37269:960;;;;;;;;:::o;38235:180::-;38283:77;38280:1;38273:88;38380:4;38377:1;38370:15;38404:4;38401:1;38394:15;38421:164;38561:16;38557:1;38549:6;38545:14;38538:40;38421:164;:::o;38591:366::-;38733:3;38754:67;38818:2;38813:3;38754:67;:::i;:::-;38747:74;;38830:93;38919:3;38830:93;:::i;:::-;38948:2;38943:3;38939:12;38932:19;;38591:366;;;:::o;38963:419::-;39129:4;39167:2;39156:9;39152:18;39144:26;;39216:9;39210:4;39206:20;39202:1;39191:9;39187:17;39180:47;39244:131;39370:4;39244:131;:::i;:::-;39236:139;;38963:419;;;:::o;39388:222::-;39528:34;39524:1;39516:6;39512:14;39505:58;39597:5;39592:2;39584:6;39580:15;39573:30;39388:222;:::o;39616:366::-;39758:3;39779:67;39843:2;39838:3;39779:67;:::i;:::-;39772:74;;39855:93;39944:3;39855:93;:::i;:::-;39973:2;39968:3;39964:12;39957:19;;39616:366;;;:::o;39988:639::-;40210:4;40248:2;40237:9;40233:18;40225:26;;40261:71;40329:1;40318:9;40314:17;40305:6;40261:71;:::i;:::-;40379:9;40373:4;40369:20;40364:2;40353:9;40349:18;40342:48;40407:131;40533:4;40407:131;:::i;:::-;40399:139;;40548:72;40616:2;40605:9;40601:18;40592:6;40548:72;:::i;:::-;39988:639;;;;;:::o;40633:181::-;40773:33;40769:1;40761:6;40757:14;40750:57;40633:181;:::o;40820:366::-;40962:3;40983:67;41047:2;41042:3;40983:67;:::i;:::-;40976:74;;41059:93;41148:3;41059:93;:::i;:::-;41177:2;41172:3;41168:12;41161:19;;40820:366;;;:::o;41192:419::-;41358:4;41396:2;41385:9;41381:18;41373:26;;41445:9;41439:4;41435:20;41431:1;41420:9;41416:17;41409:47;41473:131;41599:4;41473:131;:::i;:::-;41465:139;;41192:419;;;:::o;41617:147::-;41718:11;41755:3;41740:18;;41617:147;;;;:::o;41770:114::-;;:::o;41890:398::-;42049:3;42070:83;42151:1;42146:3;42070:83;:::i;:::-;42063:90;;42162:93;42251:3;42162:93;:::i;:::-;42280:1;42275:3;42271:11;42264:18;;41890:398;;;:::o;42294:379::-;42478:3;42500:147;42643:3;42500:147;:::i;:::-;42493:154;;42664:3;42657:10;;42294:379;;;:::o;42679:164::-;42819:16;42815:1;42807:6;42803:14;42796:40;42679:164;:::o;42849:366::-;42991:3;43012:67;43076:2;43071:3;43012:67;:::i;:::-;43005:74;;43088:93;43177:3;43088:93;:::i;:::-;43206:2;43201:3;43197:12;43190:19;;42849:366;;;:::o;43221:419::-;43387:4;43425:2;43414:9;43410:18;43402:26;;43474:9;43468:4;43464:20;43460:1;43449:9;43445:17;43438:47;43502:131;43628:4;43502:131;:::i;:::-;43494:139;;43221:419;;;:::o;43646:173::-;43786:25;43782:1;43774:6;43770:14;43763:49;43646:173;:::o;43825:366::-;43967:3;43988:67;44052:2;44047:3;43988:67;:::i;:::-;43981:74;;44064:93;44153:3;44064:93;:::i;:::-;44182:2;44177:3;44173:12;44166:19;;43825:366;;;:::o;44197:419::-;44363:4;44401:2;44390:9;44386:18;44378:26;;44450:9;44444:4;44440:20;44436:1;44425:9;44421:17;44414:47;44478:131;44604:4;44478:131;:::i;:::-;44470:139;;44197:419;;;:::o;44622:178::-;44762:30;44758:1;44750:6;44746:14;44739:54;44622:178;:::o;44806:366::-;44948:3;44969:67;45033:2;45028:3;44969:67;:::i;:::-;44962:74;;45045:93;45134:3;45045:93;:::i;:::-;45163:2;45158:3;45154:12;45147:19;;44806:366;;;:::o;45178:419::-;45344:4;45382:2;45371:9;45367:18;45359:26;;45431:9;45425:4;45421:20;45417:1;45406:9;45402:17;45395:47;45459:131;45585:4;45459:131;:::i;:::-;45451:139;;45178:419;;;:::o;45603:148::-;45705:11;45742:3;45727:18;;45603:148;;;;:::o;45757:173::-;45897:25;45893:1;45885:6;45881:14;45874:49;45757:173;:::o;45936:402::-;46096:3;46117:85;46199:2;46194:3;46117:85;:::i;:::-;46110:92;;46211:93;46300:3;46211:93;:::i;:::-;46329:2;46324:3;46320:12;46313:19;;45936:402;;;:::o;46344:390::-;46450:3;46478:39;46511:5;46478:39;:::i;:::-;46533:89;46615:6;46610:3;46533:89;:::i;:::-;46526:96;;46631:65;46689:6;46684:3;46677:4;46670:5;46666:16;46631:65;:::i;:::-;46721:6;46716:3;46712:16;46705:23;;46454:280;46344:390;;;;:::o;46740:167::-;46880:19;46876:1;46868:6;46864:14;46857:43;46740:167;:::o;46913:402::-;47073:3;47094:85;47176:2;47171:3;47094:85;:::i;:::-;47087:92;;47188:93;47277:3;47188:93;:::i;:::-;47306:2;47301:3;47297:12;47290:19;;46913:402;;;:::o;47321:967::-;47703:3;47725:148;47869:3;47725:148;:::i;:::-;47718:155;;47890:95;47981:3;47972:6;47890:95;:::i;:::-;47883:102;;48002:148;48146:3;48002:148;:::i;:::-;47995:155;;48167:95;48258:3;48249:6;48167:95;:::i;:::-;48160:102;;48279:3;48272:10;;47321:967;;;;;:::o;48294:410::-;48334:7;48357:20;48375:1;48357:20;:::i;:::-;48352:25;;48391:20;48409:1;48391:20;:::i;:::-;48386:25;;48446:1;48443;48439:9;48468:30;48486:11;48468:30;:::i;:::-;48457:41;;48647:1;48638:7;48634:15;48631:1;48628:22;48608:1;48601:9;48581:83;48558:139;;48677:18;;:::i;:::-;48558:139;48342:362;48294:410;;;;:::o;48710:171::-;48749:3;48772:24;48790:5;48772:24;:::i;:::-;48763:33;;48818:4;48811:5;48808:15;48805:41;;48826:18;;:::i;:::-;48805:41;48873:1;48866:5;48862:13;48855:20;;48710:171;;;:::o;48887:182::-;49027:34;49023:1;49015:6;49011:14;49004:58;48887:182;:::o;49075:366::-;49217:3;49238:67;49302:2;49297:3;49238:67;:::i;:::-;49231:74;;49314:93;49403:3;49314:93;:::i;:::-;49432:2;49427:3;49423:12;49416:19;;49075:366;;;:::o;49447:419::-;49613:4;49651:2;49640:9;49636:18;49628:26;;49700:9;49694:4;49690:20;49686:1;49675:9;49671:17;49664:47;49728:131;49854:4;49728:131;:::i;:::-;49720:139;;49447:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3383400","executionCost":"infinite","totalCost":"infinite"},"external":{"DEFAULT_ADMIN_ROLE()":"424","contribute()":"infinite","createProposal(string,string,address,uint256)":"infinite","getAllProposals()":"infinite","getContributorsBalance()":"infinite","getDeployer()":"2633","getProposalVote(uint256)":"infinite","getProposals(uint256)":"infinite","getRoleAdmin(bytes32)":"infinite","getStakeholdersBalances()":"infinite","getStakeholdersVotes()":"infinite","getTotalBalance()":"2505","grantRole(bytes32,address)":"infinite","hasRole(bytes32,address)":"3207","isContributor()":"2604","payBeneficiary(uint256)":"infinite","performVote(uint256,bool)":"infinite","renounceRole(bytes32,address)":"infinite","revokeRole(bytes32,address)":"infinite","stakeholderStatus()":"2648","supportsInterface(bytes4)":"751"},"internal":{"handleVoting(struct MantaDao.Proposals storage pointer)":"infinite","pay(uint256,address)":"infinite"}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","contribute()":"d7bb99ba","createProposal(string,string,address,uint256)":"7cdc2eb7","getAllProposals()":"cceb68f5","getContributorsBalance()":"83047f80","getDeployer()":"72630531","getProposalVote(uint256)":"1c9b2f35","getProposals(uint256)":"2c72fdfc","getRoleAdmin(bytes32)":"248a9ca3","getStakeholdersBalances()":"341edbed","getStakeholdersVotes()":"ff4b0db7","getTotalBalance()":"12b58349","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isContributor()":"d6cc8016","payBeneficiary(uint256)":"119c37c8","performVote(uint256,bool)":"b31f111c","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","stakeholderStatus()":"f43327d2","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProposalAction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upVote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"downVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"chosen\",\"type\":\"bool\"}],\"name\":\"VoteAction\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contribute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upVote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"downVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"passed\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"propoper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"internalType\":\"struct MantaDao.Proposals\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upVote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"downVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"passed\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"propoper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"internalType\":\"struct MantaDao.Proposals[]\",\"name\":\"props\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContributorsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalID\",\"type\":\"uint256\"}],\"name\":\"getProposalVote\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"chosen\",\"type\":\"bool\"}],\"internalType\":\"struct MantaDao.Voted[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalID\",\"type\":\"uint256\"}],\"name\":\"getProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upVote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"downVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"passed\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"propoper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"internalType\":\"struct MantaDao.Proposals\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeholdersBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeholdersVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isContributor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"payBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"chosen\",\"type\":\"bool\"}],\"name\":\"performVote\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"chosen\",\"type\":\"bool\"}],\"internalType\":\"struct MantaDao.Voted\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeholderStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MantaDao.sol\":\"MantaDao\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/MantaDao.sol\":{\"content\":\"// SPDX-License-Identifier : UNLICENSED\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\ncontract MantaDao is AccessControl,ReentrancyGuard {\\r\\n\\r\\n    uint256 totalProposals;\\r\\n    uint256 balance;\\r\\n    address deployer;\\r\\n\\r\\n    uint256 immutable STAKEHOLDER_MIN_CONTRIBUTION = 0.1 ether;\\r\\n    uint256 immutable MIN_VOTE_PERIOD = 5 minutes;\\r\\n    bytes32 private immutable COLLABORATOR_ROLE = keccak256(\\\"collaborator\\\");\\r\\n    bytes32 private immutable STAKEHOLDER_ROLE = keccak256(\\\"stakeholder\\\");\\r\\n\\r\\n    mapping(uint256 => Proposals) private raisedProposals;\\r\\n    mapping(address => uint256[]) private stakeholderVotes;\\r\\n    mapping(uint256 => Voted[]) private votedOn;\\r\\n    mapping(address => uint256) private contributors;\\r\\n    mapping(address => uint256) private stakeholders;\\r\\n\\r\\n      struct Proposals {\\r\\n        uint256 id;\\r\\n        uint256 amount;\\r\\n        uint256 upVote;\\r\\n        uint256 downVotes;\\r\\n        uint256 duration;\\r\\n        string title;\\r\\n        string description;\\r\\n        bool paid;\\r\\n        bool passed;\\r\\n        address payable beneficiary;\\r\\n        address propoper;\\r\\n        address executor;\\r\\n    }\\r\\n\\r\\n     struct Voted {\\r\\n        address voter;\\r\\n        uint256 timestamp;\\r\\n        bool chosen;\\r\\n    }\\r\\n\\r\\n     modifier stakeholderOnly(string memory message) {\\r\\n        require(hasRole(STAKEHOLDER_ROLE,msg.sender),message);\\r\\n        _;\\r\\n    }\\r\\n    modifier contributorOnly(string memory message){\\r\\n        require(hasRole(COLLABORATOR_ROLE,msg.sender),message);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyDeployer(string memory message) {\\r\\n        require(msg.sender == deployer,message);\\r\\n\\r\\n        _;\\r\\n    }\\r\\n\\r\\n     event ProposalAction(\\r\\n        address indexed creator,\\r\\n        bytes32 role,\\r\\n        string message,\\r\\n        address indexed beneficiary,\\r\\n        uint256 amount\\r\\n    );\\r\\n\\r\\n     event VoteAction(\\r\\n        address indexed creator,\\r\\n        bytes32 role,\\r\\n        string message,\\r\\n        address indexed beneficiary,\\r\\n        uint256 amount,\\r\\n        uint256 upVote,\\r\\n        uint256 downVotes,\\r\\n        bool chosen\\r\\n    );\\r\\n\\r\\n     constructor(){\\r\\n        deployer = msg.sender;\\r\\n    }\\r\\n\\r\\n       // proposal creation\\r\\n    function createProposal (\\r\\n        string calldata title,\\r\\n        string calldata description,\\r\\n        address beneficiary,\\r\\n        uint256 amount\\r\\n    )external stakeholderOnly(\\\"Only stakeholders are allowed to create Proposals\\\") returns(Proposals memory){\\r\\n        uint256 currentID = totalProposals++;\\r\\n        Proposals storage StakeholderProposal = raisedProposals[currentID];\\r\\n        StakeholderProposal.id = currentID;\\r\\n        StakeholderProposal.amount = amount;\\r\\n        StakeholderProposal.title = title;\\r\\n        StakeholderProposal.description = description;\\r\\n        StakeholderProposal.beneficiary = payable(beneficiary);\\r\\n        StakeholderProposal.duration = block.timestamp + MIN_VOTE_PERIOD;\\r\\n\\r\\n        emit ProposalAction(\\r\\n            msg.sender,\\r\\n            STAKEHOLDER_ROLE,\\r\\n            'Proposal Raised',\\r\\n            beneficiary,\\r\\n            amount\\r\\n        );\\r\\n        return StakeholderProposal;\\r\\n    }\\r\\n\\r\\n    \\r\\n    // voting\\r\\n    function performVote(uint256 proposalId,bool chosen) external\\r\\n    stakeholderOnly(\\\"Only stakeholders can perform voting\\\")\\r\\n    returns(Voted memory)\\r\\n    {\\r\\n        Proposals storage StakeholderProposal = raisedProposals[proposalId];\\r\\n        handleVoting(StakeholderProposal);\\r\\n        if(chosen) StakeholderProposal.upVote++;\\r\\n        else StakeholderProposal.downVotes++;\\r\\n\\r\\n        stakeholderVotes[msg.sender].push(\\r\\n            StakeholderProposal.id\\r\\n        );\\r\\n        votedOn[StakeholderProposal.id].push(\\r\\n            Voted(\\r\\n                msg.sender,\\r\\n                block.timestamp,\\r\\n                chosen\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit VoteAction(\\r\\n            msg.sender,\\r\\n            STAKEHOLDER_ROLE,\\r\\n            \\\"PROPOSAL VOTE\\\",\\r\\n            StakeholderProposal.beneficiary,\\r\\n            StakeholderProposal.amount,\\r\\n            StakeholderProposal.upVote,\\r\\n            StakeholderProposal.downVotes,\\r\\n            chosen\\r\\n        );\\r\\n\\r\\n        return Voted(\\r\\n            msg.sender,\\r\\n            block.timestamp,\\r\\n            chosen\\r\\n        );\\r\\n\\r\\n    }\\r\\n\\r\\n    // handling vote\\r\\n    function handleVoting(Proposals storage proposal) private {\\r\\n        if (proposal.passed || proposal.duration <= block.timestamp) {\\r\\n            proposal.passed = true;\\r\\n            revert(\\\"Time has already passed\\\");\\r\\n        }\\r\\n        uint256[] memory tempVotes = stakeholderVotes[msg.sender];\\r\\n        for (uint256 vote = 0; vote < tempVotes.length; vote++) {\\r\\n            if (proposal.id == tempVotes[vote])\\r\\n                revert(\\\"double voting is not allowed\\\");\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n     // pay beneficiary\\r\\n    function payBeneficiary(uint proposalId) external\\r\\n    stakeholderOnly(\\\"Only stakeholders can make payment\\\") onlyDeployer(\\\"Only deployer can make payment\\\") nonReentrant() returns(uint256){\\r\\n        Proposals storage stakeholderProposal = raisedProposals[proposalId];\\r\\n        require(balance >= stakeholderProposal.amount, \\\"insufficient fund\\\");\\r\\n        if(stakeholderProposal.paid == true) revert(\\\"payment already made\\\");\\r\\n        if(stakeholderProposal.upVote <= stakeholderProposal.downVotes) revert(\\\"insufficient votes\\\");\\r\\n\\r\\n        pay(stakeholderProposal.amount,stakeholderProposal.beneficiary);\\r\\n        stakeholderProposal.paid = true;\\r\\n        stakeholderProposal.executor = msg.sender;\\r\\n        balance -= stakeholderProposal.amount;\\r\\n\\r\\n        emit ProposalAction(\\r\\n            msg.sender,\\r\\n            STAKEHOLDER_ROLE,\\r\\n            \\\"PAYMENT SUCCESSFULLY MADE!\\\",\\r\\n            stakeholderProposal.beneficiary,\\r\\n            stakeholderProposal.amount\\r\\n        );\\r\\n\\r\\n        return balance;\\r\\n\\r\\n    }\\r\\n\\r\\n    // paymment functionality\\r\\n    function pay(uint256 amount,address to) internal returns(bool){\\r\\n        (bool success,) = payable(to).call{value : amount}(\\\"\\\");\\r\\n        require(success, \\\"payment failed\\\");\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n      // contribution functionality\\r\\n    function contribute() payable external returns(uint256){\\r\\n        require(msg.value > 0 ether, \\\"invalid amount\\\");\\r\\n        if (!hasRole(STAKEHOLDER_ROLE, msg.sender)) {\\r\\n            uint256 totalContributions = contributors[msg.sender] + msg.value;\\r\\n\\r\\n            if (totalContributions >= STAKEHOLDER_MIN_CONTRIBUTION) {\\r\\n                stakeholders[msg.sender] = msg.value;\\r\\n                contributors[msg.sender] += msg.value;\\r\\n                _setupRole(STAKEHOLDER_ROLE,msg.sender);\\r\\n                _setupRole(COLLABORATOR_ROLE, msg.sender);\\r\\n            }\\r\\n            else {\\r\\n                contributors[msg.sender] += msg.value;\\r\\n                _setupRole(COLLABORATOR_ROLE,msg.sender);\\r\\n            }\\r\\n        }\\r\\n        else{\\r\\n            stakeholders[msg.sender] += msg.value;\\r\\n            contributors[msg.sender] += msg.value;\\r\\n        }\\r\\n\\r\\n        balance += msg.value;\\r\\n        emit ProposalAction(\\r\\n            msg.sender,\\r\\n            STAKEHOLDER_ROLE,\\r\\n            \\\"CONTRIBUTION SUCCESSFULLY RECEIVED!\\\",\\r\\n            address(this),\\r\\n            msg.value\\r\\n        );\\r\\n\\r\\n\\r\\n        return balance;\\r\\n    }\\r\\n\\r\\n        // get single proposal\\r\\n    function getProposals(uint256 proposalID) external view returns(Proposals memory) {\\r\\n        return raisedProposals[proposalID];\\r\\n    }\\r\\n\\r\\n    // get all proposals\\r\\n    function getAllProposals() external view returns(Proposals[] memory props){\\r\\n        props = new Proposals[](totalProposals);\\r\\n        for (uint i = 0; i < totalProposals; i++) {\\r\\n            props[i] = raisedProposals[i];\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // get a specific proposal votes\\r\\n    function getProposalVote(uint256 proposalID) external view returns(Voted[] memory){\\r\\n        return votedOn[proposalID];\\r\\n    }\\r\\n\\r\\n    // get stakeholders votes\\r\\n    function getStakeholdersVotes() stakeholderOnly(\\\"Unauthorized\\\") external view returns(uint256[] memory){\\r\\n        return stakeholderVotes[msg.sender];\\r\\n    }\\r\\n\\r\\n    // get stakeholders balances\\r\\n    function getStakeholdersBalances() stakeholderOnly(\\\"unauthorized\\\") external view returns(uint256){\\r\\n        return stakeholders[msg.sender];\\r\\n\\r\\n    }\\r\\n\\r\\n     // get total balances\\r\\n    function getTotalBalance() external view returns(uint256){\\r\\n        return balance;\\r\\n\\r\\n    }\\r\\n\\r\\n    // check if stakeholder\\r\\n    function stakeholderStatus() external view returns(bool){\\r\\n        return stakeholders[msg.sender] > 0;\\r\\n    }\\r\\n\\r\\n    // check if contributor\\r\\n    function isContributor() external view returns(bool){\\r\\n        return contributors[msg.sender] > 0;\\r\\n    }\\r\\n\\r\\n    // check contributors balance\\r\\n    function getContributorsBalance() contributorOnly(\\\"unathorized\\\") external view returns(uint256){\\r\\n        return contributors[msg.sender];\\r\\n    }\\r\\n\\r\\n    function getDeployer()external view returns(address){\\r\\n        return deployer;\\r\\n\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x7dd3ab2a99478ca36383c7b8ef00291e717136df4fcc992431bd8df85d96c4ef\"}},\"version\":1}","storageLayout":{"storage":[{"astId":24,"contract":"contracts/MantaDao.sol:MantaDao","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"},{"astId":399,"contract":"contracts/MantaDao.sol:MantaDao","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":1729,"contract":"contracts/MantaDao.sol:MantaDao","label":"totalProposals","offset":0,"slot":"2","type":"t_uint256"},{"astId":1731,"contract":"contracts/MantaDao.sol:MantaDao","label":"balance","offset":0,"slot":"3","type":"t_uint256"},{"astId":1733,"contract":"contracts/MantaDao.sol:MantaDao","label":"deployer","offset":0,"slot":"4","type":"t_address"},{"astId":1754,"contract":"contracts/MantaDao.sol:MantaDao","label":"raisedProposals","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(Proposals)1798_storage)"},{"astId":1759,"contract":"contracts/MantaDao.sol:MantaDao","label":"stakeholderVotes","offset":0,"slot":"6","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":1765,"contract":"contracts/MantaDao.sol:MantaDao","label":"votedOn","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_array(t_struct(Voted)1805_storage)dyn_storage)"},{"astId":1769,"contract":"contracts/MantaDao.sol:MantaDao","label":"contributors","offset":0,"slot":"8","type":"t_mapping(t_address,t_uint256)"},{"astId":1773,"contract":"contracts/MantaDao.sol:MantaDao","label":"stakeholders","offset":0,"slot":"9","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_struct(Voted)1805_storage)dyn_storage":{"base":"t_struct(Voted)1805_storage","encoding":"dynamic_array","label":"struct MantaDao.Voted[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_mapping(t_uint256,t_array(t_struct(Voted)1805_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MantaDao.Voted[])","numberOfBytes":"32","value":"t_array(t_struct(Voted)1805_storage)dyn_storage"},"t_mapping(t_uint256,t_struct(Proposals)1798_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MantaDao.Proposals)","numberOfBytes":"32","value":"t_struct(Proposals)1798_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Proposals)1798_storage":{"encoding":"inplace","label":"struct MantaDao.Proposals","members":[{"astId":1775,"contract":"contracts/MantaDao.sol:MantaDao","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1777,"contract":"contracts/MantaDao.sol:MantaDao","label":"amount","offset":0,"slot":"1","type":"t_uint256"},{"astId":1779,"contract":"contracts/MantaDao.sol:MantaDao","label":"upVote","offset":0,"slot":"2","type":"t_uint256"},{"astId":1781,"contract":"contracts/MantaDao.sol:MantaDao","label":"downVotes","offset":0,"slot":"3","type":"t_uint256"},{"astId":1783,"contract":"contracts/MantaDao.sol:MantaDao","label":"duration","offset":0,"slot":"4","type":"t_uint256"},{"astId":1785,"contract":"contracts/MantaDao.sol:MantaDao","label":"title","offset":0,"slot":"5","type":"t_string_storage"},{"astId":1787,"contract":"contracts/MantaDao.sol:MantaDao","label":"description","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1789,"contract":"contracts/MantaDao.sol:MantaDao","label":"paid","offset":0,"slot":"7","type":"t_bool"},{"astId":1791,"contract":"contracts/MantaDao.sol:MantaDao","label":"passed","offset":1,"slot":"7","type":"t_bool"},{"astId":1793,"contract":"contracts/MantaDao.sol:MantaDao","label":"beneficiary","offset":2,"slot":"7","type":"t_address_payable"},{"astId":1795,"contract":"contracts/MantaDao.sol:MantaDao","label":"propoper","offset":0,"slot":"8","type":"t_address"},{"astId":1797,"contract":"contracts/MantaDao.sol:MantaDao","label":"executor","offset":0,"slot":"9","type":"t_address"}],"numberOfBytes":"320"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"contracts/MantaDao.sol:MantaDao","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"contracts/MantaDao.sol:MantaDao","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(Voted)1805_storage":{"encoding":"inplace","label":"struct MantaDao.Voted","members":[{"astId":1800,"contract":"contracts/MantaDao.sol:MantaDao","label":"voter","offset":0,"slot":"0","type":"t_address"},{"astId":1802,"contract":"contracts/MantaDao.sol:MantaDao","label":"timestamp","offset":0,"slot":"1","type":"t_uint256"},{"astId":1804,"contract":"contracts/MantaDao.sol:MantaDao","label":"chosen","offset":0,"slot":"2","type":"t_bool"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}